2019-07-23 11:31:12,326|I|Thread-1|(DELAYED) nexial-core 2.4_0567 starting up...
2019-07-23 11:31:12,332|I|Thread-1|(DELAYED) data file resolved as C:\Users\DEEPAN~1.PAT\AppData\Local\Temp\hxZbb\firstEvaluation.data.xlsx
2019-07-23 11:31:12,332|I|Thread-1|(DELAYED) input files and output directory resolved...
2019-07-23 11:31:12,332|I|Thread-1|(DELAYED) No predefined nexial-setup found
2019-07-23 11:31:12,332|I|Thread-1|(DELAYED) [20190723_113112] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] resolve RUN ID as 20190723_113112
2019-07-23 11:31:12,332|I|Thread-1|(DELAYED) [20190723_113112] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] new thread started
2019-07-23 11:31:12,333|I|Thread-1|No predefined nexial-setup found
2019-07-23 11:31:12,413|I|Thread-1|outputBase not set; output-to-cloud DISABLED!
2019-07-23 11:31:12,414|I|Thread-1|accessKey not set; output-to-cloud DISABLED!
2019-07-23 11:31:12,414|I|Thread-1|secretKey not set; output-to-cloud DISABLED!
2019-07-23 11:31:12,442|I|Thread-1|missing REQUIRED configuration; sms DISABLED!
2019-07-23 11:31:13,267|I|Thread-1|[20190723_113112] executing C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx with 1 iteration(s)
2019-07-23 11:31:13,272|I|Thread-1|[20190723_113112] create directory C:\projects\firstEvaluation\output\20190723_113112\captures
2019-07-23 11:31:13,273|I|Thread-1|[20190723_113112] create directory C:\projects\firstEvaluation\output\20190723_113112\logs
2019-07-23 11:31:14,128|I|Thread-1|[20190723_113112] merging test data to tmp file C:\projects\firstEvaluation\output\20190723_113112\firstEvaluation.20190723_113113.001.xlsx
2019-07-23 11:31:14,129|I|Thread-1|refetching data from C:\projects\firstEvaluation\artifact\data\firstEvaluation.data.xlsx
2019-07-23 11:31:14,427|I|Thread-1|[20190723_113112] test script and test data merged to C:\projects\firstEvaluation\output\20190723_113112\firstEvaluation.20190723_113113.001.xlsx
2019-07-23 11:31:15,299|I|Thread-1|STARTS
2019-07-23 11:31:15,345|I|Thread-1|firstEvaluation.20190723_113113.001 - executing iteration #1 of 1; Iteration Id 1
2019-07-23 11:31:15,355|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario - executing test scenario
2019-07-23 11:31:15,359|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 1 - executing activity
2019-07-23 11:31:15,961|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 1|#  5|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].product_name, productNames)
2019-07-23 11:31:16,042|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 1|#  5|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].product_name' stored to ${productNames}
2019-07-23 11:31:16,643|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 1|#  6|base.verbose(text) - executing verbose(text)(${productNames})
2019-07-23 11:31:16,649|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 1|#  6|base.verbose(text) - ["sildenafil citrate","Mountain Juniperus ashei"]
2019-07-23 11:31:16,851|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 1|#  6|base.verbose(text) - PASS 
2019-07-23 11:31:16,853|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2 - executing activity
2019-07-23 11:31:17,456|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|#  7|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].quantity, quantityList)
2019-07-23 11:31:17,497|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|#  7|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].quantity' stored to ${quantityList}
2019-07-23 11:31:18,101|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|#  8|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].unit_cost, costList)
2019-07-23 11:31:18,118|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|#  8|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].unit_cost' stored to ${costList}
2019-07-23 11:31:18,727|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|#  9|base.save(var,value) - executing save(var,value)(unit_costList, [LIST${costList} => replaceRegex([$],)])
2019-07-23 11:31:18,743|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|#  9|base.save(var,value) - PASS stored '[LIST["$10.47","$8.74"] => replaceRegex([$],)]' as ${unit_costList}
2019-07-23 11:31:19,347|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 10|base.verbose(text) - executing verbose(text)(${unit_costList})
2019-07-23 11:31:19,352|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 10|base.verbose(text) - [LIST["$10.47","$8.74"] => replaceRegex([$],)]
2019-07-23 11:31:19,363|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 10|base.verbose(text) - PASS 
2019-07-23 11:31:19,967|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 11|base.save(var,value) - executing save(var,value)(sumTotal, 0)
2019-07-23 11:31:19,973|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 11|base.save(var,value) - PASS stored '0' as ${sumTotal}
2019-07-23 11:31:20,581|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 12|base.save(var,value) - executing save(var,value)(counter, 0)
2019-07-23 11:31:20,587|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 12|base.save(var,value) - PASS stored '0' as ${counter}
2019-07-23 11:31:21,190|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 13|base.save(var,value) - executing save(var,value)(length, $(array|length|${quantityList}))
2019-07-23 11:31:21,204|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 13|base.save(var,value) - PASS stored '2' as ${length}
2019-07-23 11:31:21,810|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 14|base.save(var,value) - executing save(var,value)(mulValue, 0)
2019-07-23 11:31:21,817|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 14|base.save(var,value) - PASS stored '0' as ${mulValue}
2019-07-23 11:31:22,426|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 15|base.verbose(text) - executing verbose(text)(${unit_costList})
2019-07-23 11:31:22,432|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 15|base.verbose(text) - [LIST["$10.47","$8.74"] => replaceRegex([$],)]
2019-07-23 11:31:22,441|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 15|base.verbose(text) - PASS 
2019-07-23 11:31:23,045|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 16|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(6, -1)
2019-07-23 11:31:23,051|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #1 --------------------------------------------->
2019-07-23 11:31:23,059|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-23 11:31:23,064|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 18|base.save(var,value) - executing save(var,value)(unit_cost, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:31:23,073|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 18|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${unit_cost}
2019-07-23 11:31:23,078|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 19|base.save(var,value) - executing save(var,value)(quantity, $(array|item|${quantityList}|${counter}))
2019-07-23 11:31:23,088|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 19|base.save(var,value) - [repeat-until] PASS stored '261' as ${quantity}
2019-07-23 11:31:23,093|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 20|base.save(var,value) - executing save(var,value)(mulValue, [NUMBER(${unit_cost}) => multiply(${quantity})])
2019-07-23 11:31:23,127|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 20|base.save(var,value) - [repeat-until] PASS stored '2732.67' as ${mulValue}
2019-07-23 11:31:23,130|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 21|base.save(var,value) - executing save(var,value)(sumTotal, [NUMBER(${sumTotal}) => add(${mulValue})])
2019-07-23 11:31:23,135|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 21|base.save(var,value) - [repeat-until] PASS stored '2732.67' as ${sumTotal}
2019-07-23 11:31:23,140|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:31:23,145|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2019-07-23 11:31:23,146|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #2 --------------------------------------------->
2019-07-23 11:31:23,149|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-23 11:31:23,153|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 18|base.save(var,value) - executing save(var,value)(unit_cost, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:31:23,155|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 18|base.save(var,value) - [repeat-until] PASS stored '"$8.74"' as ${unit_cost}
2019-07-23 11:31:23,156|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 19|base.save(var,value) - executing save(var,value)(quantity, $(array|item|${quantityList}|${counter}))
2019-07-23 11:31:23,159|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 19|base.save(var,value) - [repeat-until] PASS stored '292' as ${quantity}
2019-07-23 11:31:23,162|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 20|base.save(var,value) - executing save(var,value)(mulValue, [NUMBER(${unit_cost}) => multiply(${quantity})])
2019-07-23 11:31:23,165|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 20|base.save(var,value) - [repeat-until] PASS stored '2552.08' as ${mulValue}
2019-07-23 11:31:23,166|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 21|base.save(var,value) - executing save(var,value)(sumTotal, [NUMBER(${sumTotal}) => add(${mulValue})])
2019-07-23 11:31:23,169|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 21|base.save(var,value) - [repeat-until] PASS stored '5284.75' as ${sumTotal}
2019-07-23 11:31:23,171|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:31:23,174|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2019-07-23 11:31:23,175|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #3 --------------------------------------------->
2019-07-23 11:31:23,177|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-23 11:31:23,179|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 16|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2019-07-23 11:31:23,784|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 23|base.verbose(text) - executing verbose(text)(${sumTotal})
2019-07-23 11:31:23,790|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 23|base.verbose(text) - 5284.75
2019-07-23 11:31:23,808|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 2|# 23|base.verbose(text) - PASS 
2019-07-23 11:31:23,818|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 4 - executing activity
2019-07-23 11:31:24,425|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 4|# 24|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[product_name=Dextromathorphan HBr].supplier, supplierList)
2019-07-23 11:31:24,447|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 4|# 24|json.storeValues(json,jso - PASS EXPECTED match against 'products[product_name=Dextromathorphan HBr].supplier' stored to ${supplierList}
2019-07-23 11:31:25,053|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 4|# 25|base.verbose(text) - executing verbose(text)(${supplierList})
2019-07-23 11:31:25,059|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 4|# 25|base.verbose(text) - ["Schmitt-Weissnat","SC-Pharmacy"]
2019-07-23 11:31:25,068|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 4|# 25|base.verbose(text) - PASS 
2019-07-23 11:31:25,072|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5 - executing activity
2019-07-23 11:31:25,680|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 26|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products.product_name, productList)
2019-07-23 11:31:25,738|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 26|json.storeValues(json,jso - PASS EXPECTED match against 'products.product_name' stored to ${productList}
2019-07-23 11:31:26,341|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 27|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products.unit_cost, costList)
2019-07-23 11:31:26,356|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 27|json.storeValues(json,jso - PASS EXPECTED match against 'products.unit_cost' stored to ${costList}
2019-07-23 11:31:26,960|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 28|base.save(var,value) - executing save(var,value)(unit_costList, [LIST${costList} => replaceRegex([$],)])
2019-07-23 11:31:26,977|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 28|base.save(var,value) - PASS stored '[LIST["$10.47","$8.74","$20.53","$20.53"] => replaceRegex([$],)]' as ${unit_costList}
2019-07-23 11:31:27,581|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 29|base.save(var,value) - executing save(var,value)(counter, 0)
2019-07-23 11:31:27,587|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 29|base.save(var,value) - PASS stored '0' as ${counter}
2019-07-23 11:31:28,191|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 30|base.save(var,value) - executing save(var,value)(finalList, abcd)
2019-07-23 11:31:28,197|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 30|base.save(var,value) - PASS stored 'abcd' as ${finalList}
2019-07-23 11:31:28,801|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 31|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(6, -1)
2019-07-23 11:31:28,804|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - 
<[repeat-until] entering loop #1 --------------------------------------------->
2019-07-23 11:31:28,814|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-23 11:31:28,818|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 33|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:31:28,827|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 33|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-23 11:31:28,831|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 34|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-23 11:31:28,848|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 34|base.save(var,value) - [repeat-until] PASS stored '10.47' as ${cost}
2019-07-23 11:31:28,850|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 35|base.verbose(text) - executing verbose(text)(${cost})
2019-07-23 11:31:28,852|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 35|base.verbose(text) - 10.47
2019-07-23 11:31:28,854|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 35|base.verbose(text) - [repeat-until] PASS 10.47
2019-07-23 11:31:28,856|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 36|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-23 11:31:28,862|I|Thread-1|evaluating flow control:	SkipIf(10.47>20)		=> NOT MATCHED
2019-07-23 11:31:28,871|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 36|base.verbose(text) - finalList,"sildenafil citrate"
2019-07-23 11:31:28,874|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 36|base.verbose(text) - [repeat-until] PASS finalList,"sildenafil citrate"
2019-07-23 11:31:28,876|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:31:28,877|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2019-07-23 11:31:28,878|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - 
<[repeat-until] entering loop #2 --------------------------------------------->
2019-07-23 11:31:28,880|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-23 11:31:28,881|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 33|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:31:28,883|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 33|base.save(var,value) - [repeat-until] PASS stored '"$8.74"' as ${value}
2019-07-23 11:31:28,884|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 34|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-23 11:31:28,886|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 34|base.save(var,value) - [repeat-until] PASS stored '8.74' as ${cost}
2019-07-23 11:31:28,887|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 35|base.verbose(text) - executing verbose(text)(${cost})
2019-07-23 11:31:28,888|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 35|base.verbose(text) - 8.74
2019-07-23 11:31:28,891|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 35|base.verbose(text) - [repeat-until] PASS 8.74
2019-07-23 11:31:28,893|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 36|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-23 11:31:28,894|I|Thread-1|evaluating flow control:	SkipIf(8.74>20)		=> NOT MATCHED
2019-07-23 11:31:28,895|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 36|base.verbose(text) - finalList,"Mountain Juniperus ashei"
2019-07-23 11:31:28,896|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 36|base.verbose(text) - [repeat-until] PASS finalList,"Mountain Juniperus ashei"
2019-07-23 11:31:28,896|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:31:28,897|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2019-07-23 11:31:28,898|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - 
<[repeat-until] entering loop #3 --------------------------------------------->
2019-07-23 11:31:28,903|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-23 11:31:28,905|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 33|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:31:28,906|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 33|base.save(var,value) - [repeat-until] PASS stored '"$20.53"' as ${value}
2019-07-23 11:31:28,907|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 34|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-23 11:31:28,909|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 34|base.save(var,value) - [repeat-until] PASS stored '20.53' as ${cost}
2019-07-23 11:31:28,912|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 35|base.verbose(text) - executing verbose(text)(${cost})
2019-07-23 11:31:28,914|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 35|base.verbose(text) - 20.53
2019-07-23 11:31:28,915|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 35|base.verbose(text) - [repeat-until] PASS 20.53
2019-07-23 11:31:28,916|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 36|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-23 11:31:28,917|I|Thread-1|evaluating flow control:	SkipIf(20.53>20)		=> MATCHED
2019-07-23 11:31:28,918|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 36|base.verbose(text) - skipped due to flow control SkipIf(${cost} > 20)
2019-07-23 11:31:28,919|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 36|base.verbose(text) - [repeat-until] SKIPPED current step skipped: SkipIf(${cost} > 20)
2019-07-23 11:31:28,923|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:31:28,924|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 3
2019-07-23 11:31:28,925|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - 
<[repeat-until] entering loop #4 --------------------------------------------->
2019-07-23 11:31:28,926|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-23 11:31:28,928|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 33|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:31:28,929|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 33|base.save(var,value) - [repeat-until] PASS stored '"$20.53"' as ${value}
2019-07-23 11:31:28,930|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 34|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-23 11:31:28,934|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 34|base.save(var,value) - [repeat-until] PASS stored '20.53' as ${cost}
2019-07-23 11:31:28,935|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 35|base.verbose(text) - executing verbose(text)(${cost})
2019-07-23 11:31:28,936|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 35|base.verbose(text) - 20.53
2019-07-23 11:31:28,937|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 35|base.verbose(text) - [repeat-until] PASS 20.53
2019-07-23 11:31:28,938|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 36|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-23 11:31:28,939|I|Thread-1|evaluating flow control:	SkipIf(20.53>20)		=> MATCHED
2019-07-23 11:31:28,939|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 36|base.verbose(text) - skipped due to flow control SkipIf(${cost} > 20)
2019-07-23 11:31:28,940|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 36|base.verbose(text) - [repeat-until] SKIPPED current step skipped: SkipIf(${cost} > 20)
2019-07-23 11:31:28,943|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:31:28,945|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 4
2019-07-23 11:31:28,946|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - 
<[repeat-until] entering loop #5 --------------------------------------------->
2019-07-23 11:31:28,947|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-23 11:31:28,949|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 31|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2019-07-23 11:31:29,550|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${finalList})
2019-07-23 11:31:29,553|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 38|base.verbose(text) - abcd
2019-07-23 11:31:29,562|I|Thread-1|firstEvaluation.20190723_113113.001|JsonScenario|Activity 5|# 38|base.verbose(text) - PASS 
2019-07-23 11:31:30,124|I|Thread-1|[firstEvaluation.20190723_113113.001|JsonScenario] saving test scenario
2019-07-23 11:31:30,251|I|Thread-1|firstEvaluation.20190723_113113.001|XMLScenario - executing test scenario
2019-07-23 11:31:30,253|I|Thread-1|firstEvaluation.20190723_113113.001|XMLScenario|Activity 1 - executing activity
2019-07-23 11:31:30,856|I|Thread-1|firstEvaluation.20190723_113113.001|XMLScenario|Activity 1|#  5|io.readFile(var,file) - executing readFile(var,file)(xmlFile, $(syspath|data|fullpath)/example_1.xml)
2019-07-23 11:31:30,869|I|Thread-1|firstEvaluation.20190723_113113.001|XMLScenario|Activity 1|#  5|io.readFile(var,file) - PASS Content read from 'C:\projects\firstEvaluation\artifact\data\example_1.xml' to ${xmlFile}
2019-07-23 11:31:31,474|I|Thread-1|firstEvaluation.20190723_113113.001|XMLScenario|Activity 1|#  6|xml.storeValues(xml,xpath - executing storeValues(xml,xpath,var)($(syspath|data|fullpath)/example_1.xml, /catalog/book[publish_date[starts-with(.,"2000-12-")] and ./title/text()]/title, bookList)
2019-07-23 11:31:31,602|I|Thread-1|firstEvaluation.20190723_113113.001|XMLScenario|Activity 1|#  6|xml.storeValues(xml,xpath - PASS XML matches saved to 'bookList'
2019-07-23 11:31:32,203|I|Thread-1|firstEvaluation.20190723_113113.001|XMLScenario|Activity 1|#  7|base.verbose(text) - executing verbose(text)(${bookList})
2019-07-23 11:31:32,207|I|Thread-1|firstEvaluation.20190723_113113.001|XMLScenario|Activity 1|#  7|base.verbose(text) - Midnight Rain,Creepy Crawlies,Microsoft .NET: The Programming Bible,MSXML3: A Comprehensive Guide
2019-07-23 11:31:32,223|I|Thread-1|firstEvaluation.20190723_113113.001|XMLScenario|Activity 1|#  7|base.verbose(text) - PASS 
2019-07-23 11:31:32,229|I|Thread-1|firstEvaluation.20190723_113113.001|XMLScenario|Activity 2 - executing activity
2019-07-23 11:31:32,833|I|Thread-1|firstEvaluation.20190723_113113.001|XMLScenario|Activity 2|#  8|xml.storeValue(xml,xpath, - executing storeValue(xml,xpath,var)($(syspath|data|fullpath)/example_1.xml, sum(/catalog/book[*]/price), totalPrice)
2019-07-23 11:31:32,858|I|Thread-1|firstEvaluation.20190723_113113.001|XMLScenario|Activity 2|#  8|xml.storeValue(xml,xpath, - PASS XML matches saved to 'totalPrice'
2019-07-23 11:31:33,463|I|Thread-1|firstEvaluation.20190723_113113.001|XMLScenario|Activity 2|#  9|base.verbose(text) - executing verbose(text)(${totalPrice})
2019-07-23 11:31:33,467|I|Thread-1|firstEvaluation.20190723_113113.001|XMLScenario|Activity 2|#  9|base.verbose(text) - 214.40000000000003
2019-07-23 11:31:33,475|I|Thread-1|firstEvaluation.20190723_113113.001|XMLScenario|Activity 2|#  9|base.verbose(text) - PASS 
2019-07-23 11:31:33,479|I|Thread-1|firstEvaluation.20190723_113113.001|XMLScenario|Activity 4 - executing activity
2019-07-23 11:31:34,083|I|Thread-1|firstEvaluation.20190723_113113.001|XMLScenario|Activity 4|# 10|xml.storeValues(xml,xpath - executing storeValues(xml,xpath,var)($(syspath|data|fullpath)/example_1.xml, /catalog/book[genre="Computer"]/title|/catalog/book[genre="Computer"]/author, list)
2019-07-23 11:31:34,113|I|Thread-1|firstEvaluation.20190723_113113.001|XMLScenario|Activity 4|# 10|xml.storeValues(xml,xpath - PASS XML matches saved to 'list'
2019-07-23 11:31:34,718|I|Thread-1|firstEvaluation.20190723_113113.001|XMLScenario|Activity 4|# 11|base.verbose(text) - executing verbose(text)(${list})
2019-07-23 11:31:34,722|I|Thread-1|firstEvaluation.20190723_113113.001|XMLScenario|Activity 4|# 11|base.verbose(text) - Gambardella, Matthew,XML Developer's Guide,O'Brien, Tim,Microsoft .NET: The Programming Bible,O'Brien, Tim,MSXML3: A Comprehensive Guide,Galos, Mike,Visual Studio 7: A Comprehensive Guide
2019-07-23 11:31:34,735|I|Thread-1|firstEvaluation.20190723_113113.001|XMLScenario|Activity 4|# 11|base.verbose(text) - PASS 
2019-07-23 11:31:34,739|I|Thread-1|firstEvaluation.20190723_113113.001|XMLScenario|Activity 5 - executing activity
2019-07-23 11:31:35,345|I|Thread-1|firstEvaluation.20190723_113113.001|XMLScenario|Activity 5|# 12|xml.storeValues(xml,xpath - executing storeValues(xml,xpath,var)($(syspath|data|fullpath)/example_1.xml, /catalog/book[author = "Corets, Eva"]/title, titleList)
2019-07-23 11:31:35,366|I|Thread-1|firstEvaluation.20190723_113113.001|XMLScenario|Activity 5|# 12|xml.storeValues(xml,xpath - PASS XML matches saved to 'titleList'
2019-07-23 11:31:35,971|I|Thread-1|firstEvaluation.20190723_113113.001|XMLScenario|Activity 5|# 13|base.verbose(text) - executing verbose(text)(titleList)
2019-07-23 11:31:35,976|I|Thread-1|firstEvaluation.20190723_113113.001|XMLScenario|Activity 5|# 13|base.verbose(text) - titleList
2019-07-23 11:31:35,986|I|Thread-1|firstEvaluation.20190723_113113.001|XMLScenario|Activity 5|# 13|base.verbose(text) - PASS 
2019-07-23 11:31:36,164|I|Thread-1|[firstEvaluation.20190723_113113.001|XMLScenario] saving test scenario
2019-07-23 11:31:36,252|I|Thread-1|[20190723_113112] 
/-TEST COMPLETE-----------------------------------------------------------------
| Test Output:    C:\projects\firstEvaluation\output\20190723_113112\firstEvaluation.20190723_113113.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 20898 ms
» Test Steps:     31
» Error(s):       0



2019-07-23 11:31:40,883|I|Thread-1|[20190723_113112] 
/-TEST COMPLETE-----------------------------------------------------------------
| Test Script:    C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 28748 ms
» Iterations:     [1] total 1
» Test Steps:     31
» Passed:         31
» Error(s):       0
» Iteration 1 of 1: C:\projects\firstEvaluation\output\20190723_113112\firstEvaluation.20190723_113113.001.xlsx



2019-07-23 11:31:41,089|I|main|[20190723_113112] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] now completed
2019-07-23 11:31:41,092|I|main|[20190723_113112] all execution thread(s) have terminated
2019-07-23 11:31:41,094|I|main|[20190723_113112] test run completed in about 29 seconds
2019-07-23 11:31:41,188|I|main|No predefined nexial-setup found
2019-07-23 11:31:41,222|I|main|outputBase not set; output-to-cloud DISABLED!
2019-07-23 11:31:41,223|I|main|accessKey not set; output-to-cloud DISABLED!
2019-07-23 11:31:41,223|I|main|secretKey not set; output-to-cloud DISABLED!
2019-07-23 11:31:41,224|I|main|generating HTML output for this execution to C:\projects\firstEvaluation\output\20190723_113112\execution-output.html
2019-07-23 11:31:41,923|I|main|generating JUnit XML output for this execution to C:\projects\firstEvaluation\output\20190723_113112\junit.xml
2019-07-23 11:31:41,962|I|main|generated JUnit report for this execution: C:\projects\firstEvaluation\output\20190723_113112\junit.xml
2019-07-23 11:31:41,968|I|main|nexial mailer not enabled: nexial.enableEmail=false
2019-07-23 11:31:41,969|I|main|skipped email notification as configured
2019-07-23 11:31:41,974|I|main|exiting Nexial...
2019-07-23 11:31:41,977|I|main|

/-END OF EXECUTION--------------------------------------------------------------
| » Execution Time: 29 sec.
| » Test Steps....: 31
| » Passed........: 31
| » Failed........: 0
| » Success Rate..: 100.00%
\----------------------------------------------------------nexial-core 2.4_0567-

2019-07-23 11:31:41,978|I|main|ALL PASSED!
2019-07-23 11:31:41,980|I|main|End of Execution:
NEXIAL_OUTPUT:         C:\projects\firstEvaluation\output\20190723_113112
NEXIAL_EXECUTION_HTML: C:\projects\firstEvaluation\output\20190723_113112\execution-output.html
NEXIAL_JUNIT_XML:      C:\projects\firstEvaluation\output\20190723_113112\junit.xml
NEXIAL_SUCCESS_RATE:   100.00%
NEXIAL_EXIT_STATUS:    0
