2019-07-22 23:06:19,349|I|Thread-1|(DELAYED) nexial-core dev_0581 starting up...
2019-07-22 23:06:19,351|I|Thread-1|(DELAYED) data file resolved as C:\Users\DEEPAN~1\AppData\Local\Temp\TJPZo\firstEvaluation.data.xlsx
2019-07-22 23:06:19,351|I|Thread-1|(DELAYED) input files and output directory resolved...
2019-07-22 23:06:19,352|I|Thread-1|(DELAYED) No predefined nexial-setup found
2019-07-22 23:06:19,352|I|Thread-1|(DELAYED) [20190722_230619] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] resolve RUN ID as 20190722_230619
2019-07-22 23:06:19,352|I|Thread-1|(DELAYED) [20190722_230619] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] new thread started
2019-07-22 23:06:19,362|I|Thread-1|No predefined nexial-setup found
2019-07-22 23:06:19,442|I|Thread-1|outputBase not set; output-to-cloud DISABLED!
2019-07-22 23:06:19,442|I|Thread-1|accessKey not set; output-to-cloud DISABLED!
2019-07-22 23:06:19,443|I|Thread-1|secretKey not set; output-to-cloud DISABLED!
2019-07-22 23:06:19,467|I|Thread-1|missing REQUIRED configuration; sms DISABLED!
2019-07-22 23:06:20,251|I|Thread-1|[20190722_230619] executing C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx with 1 iteration(s)
2019-07-22 23:06:20,259|I|Thread-1|[20190722_230619] create directory C:\projects\firstEvaluation\output\20190722_230619\captures
2019-07-22 23:06:20,261|I|Thread-1|[20190722_230619] create directory C:\projects\firstEvaluation\output\20190722_230619\logs
2019-07-22 23:06:20,694|I|Thread-1|[20190722_230619] merging test data to tmp file C:\projects\firstEvaluation\output\20190722_230619\firstEvaluation.20190722_230620.001.xlsx
2019-07-22 23:06:20,695|I|Thread-1|refetching data from C:\projects\firstEvaluation\artifact\data\firstEvaluation.data.xlsx
2019-07-22 23:06:20,892|I|Thread-1|[20190722_230619] test script and test data merged to C:\projects\firstEvaluation\output\20190722_230619\firstEvaluation.20190722_230620.001.xlsx
2019-07-22 23:06:21,572|I|Thread-1|STARTS
2019-07-22 23:06:21,609|I|Thread-1|firstEvaluation.20190722_230620.001 - executing iteration #1 of 1; Iteration Id 1
2019-07-22 23:06:21,614|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario - executing test scenario
2019-07-22 23:06:21,615|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 1 - executing activity
2019-07-22 23:06:22,216|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 1|#  5|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].product_name, productNames)
2019-07-22 23:06:22,310|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 1|#  5|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].product_name' stored to ${productNames}
2019-07-22 23:06:22,911|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 1|#  6|base.verbose(text) - executing verbose(text)(${productNames})
2019-07-22 23:06:22,912|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 1|#  6|base.verbose(text) - ["sildenafil citrate","Mountain Juniperus ashei"]
2019-07-22 23:06:23,085|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 1|#  6|base.verbose(text) - PASS 
2019-07-22 23:06:23,087|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2 - executing activity
2019-07-22 23:06:23,687|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|#  7|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].quantity, quantityList)
2019-07-22 23:06:23,691|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|#  7|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].quantity' stored to ${quantityList}
2019-07-22 23:06:24,291|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|#  8|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].unit_cost, costList)
2019-07-22 23:06:24,295|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|#  8|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].unit_cost' stored to ${costList}
2019-07-22 23:06:24,896|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|#  9|base.save(var,value) - executing save(var,value)(unit_costList, [LIST${costList} => replaceRegex([$],)])
2019-07-22 23:06:24,898|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|#  9|base.save(var,value) - PASS stored '[LIST["$10.47","$8.74"] => replaceRegex([$],)]' as ${unit_costList}
2019-07-22 23:06:25,499|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 10|base.verbose(text) - executing verbose(text)(${unit_costList})
2019-07-22 23:06:25,500|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 10|base.verbose(text) - [LIST["$10.47","$8.74"] => replaceRegex([$],)]
2019-07-22 23:06:25,501|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 10|base.verbose(text) - PASS 
2019-07-22 23:06:26,102|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 11|base.save(var,value) - executing save(var,value)(sumTotal, 0)
2019-07-22 23:06:26,104|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 11|base.save(var,value) - PASS stored '0' as ${sumTotal}
2019-07-22 23:06:26,705|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 12|base.save(var,value) - executing save(var,value)(counter, 0)
2019-07-22 23:06:26,706|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 12|base.save(var,value) - PASS stored '0' as ${counter}
2019-07-22 23:06:27,307|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 13|base.save(var,value) - executing save(var,value)(length, $(array|length|${quantityList}))
2019-07-22 23:06:27,310|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 13|base.save(var,value) - PASS stored '2' as ${length}
2019-07-22 23:06:27,910|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 14|base.save(var,value) - executing save(var,value)(mulValue, 0)
2019-07-22 23:06:27,911|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 14|base.save(var,value) - PASS stored '0' as ${mulValue}
2019-07-22 23:06:28,512|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 15|base.verbose(text) - executing verbose(text)(${unit_costList})
2019-07-22 23:06:28,513|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 15|base.verbose(text) - [LIST["$10.47","$8.74"] => replaceRegex([$],)]
2019-07-22 23:06:28,514|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 15|base.verbose(text) - PASS 
2019-07-22 23:06:29,115|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 16|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(6, -1)
2019-07-22 23:06:29,116|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #1 --------------------------------------------->
2019-07-22 23:06:29,117|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-22 23:06:29,118|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 18|base.save(var,value) - executing save(var,value)(unit_cost, $(array|item|${unit_costList}|${counter}))
2019-07-22 23:06:29,119|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 18|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${unit_cost}
2019-07-22 23:06:29,120|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 19|base.save(var,value) - executing save(var,value)(quantity, $(array|item|${quantityList}|${counter}))
2019-07-22 23:06:29,121|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 19|base.save(var,value) - [repeat-until] PASS stored '261' as ${quantity}
2019-07-22 23:06:29,122|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 20|base.save(var,value) - executing save(var,value)(mulValue, [NUMBER(${unit_cost}) => multiply(${quantity})])
2019-07-22 23:06:29,137|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 20|base.save(var,value) - [repeat-until] PASS stored '2732.67' as ${mulValue}
2019-07-22 23:06:29,137|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 21|base.save(var,value) - executing save(var,value)(sumTotal, [NUMBER(${sumTotal}) => add(${mulValue})])
2019-07-22 23:06:29,139|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 21|base.save(var,value) - [repeat-until] PASS stored '2732.67' as ${sumTotal}
2019-07-22 23:06:29,139|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 23:06:29,141|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2019-07-22 23:06:29,142|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #2 --------------------------------------------->
2019-07-22 23:06:29,142|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-22 23:06:29,143|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 18|base.save(var,value) - executing save(var,value)(unit_cost, $(array|item|${unit_costList}|${counter}))
2019-07-22 23:06:29,144|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 18|base.save(var,value) - [repeat-until] PASS stored '"$8.74"' as ${unit_cost}
2019-07-22 23:06:29,144|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 19|base.save(var,value) - executing save(var,value)(quantity, $(array|item|${quantityList}|${counter}))
2019-07-22 23:06:29,147|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 19|base.save(var,value) - [repeat-until] PASS stored '292' as ${quantity}
2019-07-22 23:06:29,151|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 20|base.save(var,value) - executing save(var,value)(mulValue, [NUMBER(${unit_cost}) => multiply(${quantity})])
2019-07-22 23:06:29,152|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 20|base.save(var,value) - [repeat-until] PASS stored '2552.08' as ${mulValue}
2019-07-22 23:06:29,153|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 21|base.save(var,value) - executing save(var,value)(sumTotal, [NUMBER(${sumTotal}) => add(${mulValue})])
2019-07-22 23:06:29,154|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 21|base.save(var,value) - [repeat-until] PASS stored '5284.75' as ${sumTotal}
2019-07-22 23:06:29,155|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 23:06:29,155|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2019-07-22 23:06:29,156|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #3 --------------------------------------------->
2019-07-22 23:06:29,156|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-22 23:06:29,157|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 16|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2019-07-22 23:06:29,758|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 23|base.verbose(text) - executing verbose(text)(${sumTotal})
2019-07-22 23:06:29,761|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 23|base.verbose(text) - 5284.75
2019-07-22 23:06:29,766|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 2|# 23|base.verbose(text) - PASS 
2019-07-22 23:06:29,768|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 3 - executing activity
2019-07-22 23:06:30,371|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 3|# 24|io.readFile(var,file) - executing readFile(var,file)(jsonFile, $(syspath|data|fullpath)/example_2.json)
2019-07-22 23:06:30,374|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 3|# 24|io.readFile(var,file) - PASS Content read from 'C:\projects\firstEvaluation\artifact\data\example_2.json' to ${jsonFile}
2019-07-22 23:06:30,975|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 3|# 25|base.save(var,value) - executing save(var,value)(var, [JSON(${jsonFile} => extract(products[unit_cost => ascending])])
2019-07-22 23:06:31,043|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 3|# 25|base.save(var,value) - PASS stored '[JSON({
	"products": 
		[{
  			"_id": {
 			   "orderid": "5968dd23fc13ae04d9000001"
  				},
  			"product_name": "sildenafil citrate",
  			"supplier": "Wisozk Inc",
  			"quantity": 261,
  			"unit_cost": "$10.47"
		}, 
		{
 			"_id": {
    			  "orderid": "5968dd23fc13ae04d9000002"
  				},
 			  "product_name": "Mountain Juniperus ashei",
  			  "supplier": "Wisozk Inc",
			  "quantity": 292,
			  "unit_cost": "$8.74"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000003"
				},
			    "product_name": "Dextromathorphan HBr",
			    "supplier": "Schmitt-Weissnat",
  		            "quantity": 211,
  			    "unit_cost": "$20.53"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000004"
 				 },
  			    "product_name": "Dextromathorphan HBr",
			    "supplier": "SC-Pharmacy",
			    "quantity": 211,
			    "unit_cost": "$20.53"
		}]
} => extract(products[unit_cost => ascending])]' as ${var}
2019-07-22 23:06:31,647|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 3|# 26|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)(${var}, products.product_name, result)
2019-07-22 23:06:31,650|E|Thread-1|Error converting string to JSON object: Expected a ',' or ']' at 7 [character 8 line 1]
org.json.JSONException: Expected a ',' or ']' at 7 [character 8 line 1]
	at org.json.JSONTokener.syntaxError(JSONTokener.java:505)
	at org.json.JSONArray.<init>(JSONArray.java:130)
	at org.json.JSONArray.<init>(JSONArray.java:147)
	at org.nexial.core.utils.JsonUtils.toJSONArray(JsonUtils.java:85)
	at org.nexial.core.plugins.json.JsonCommand.resolveToJSONObject(JsonCommand.java:318)
	at org.nexial.core.plugins.json.JsonCommand.toJSONObject(JsonCommand.java:441)
	at org.nexial.core.plugins.json.JsonCommand.sanityCheck(JsonCommand.java:445)
	at org.nexial.core.plugins.json.JsonCommand.find(JsonCommand.java:449)
	at org.nexial.core.plugins.json.JsonCommand.extractJsonValue(JsonCommand.java:384)
	at org.nexial.core.plugins.json.JsonCommand.storeValues(JsonCommand.java:123)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.nexial.core.plugins.base.BaseCommand.execute(BaseCommand.java:156)
	at org.nexial.core.model.TestStep.invokeCommand(TestStep.java:327)
	at org.nexial.core.model.TestStep.execute(TestStep.java:169)
	at org.nexial.core.model.TestCase.execute(TestCase.java:94)
	at org.nexial.core.model.TestScenario.execute(TestScenario.java:130)
	at org.nexial.core.model.ExecutionContext.execute(ExecutionContext.java:1184)
	at org.nexial.core.ExecutionThread.run(ExecutionThread.java:174)
2019-07-22 23:06:31,652|E|Thread-1|JSON string in error is as follows:
[JSON({
	"products": 
		[{
  			"_id": {
 			   "orderid": "5968dd23fc13ae04d9000001"
  				},
  			"product_name": "sildenafil citrate",
  			"supplier": "Wisozk Inc",
  			"quantity": 261,
  			"unit_cost": "$10.47"
		}, 
		{
 			"_id": {
    			  "orderid": "5968dd23fc13ae04d9000002"
  				},
 			  "product_name": "Mountain Juniperus ashei",
  			  "supplier": "Wisozk Inc",
			  "quantity": 292,
			  "unit_cost": "$8.74"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000003"
				},
			    "product_name": "Dextromathorphan HBr",
			    "supplier": "Schmitt-Weissnat",
  		            "quantity": 211,
  			    "unit_cost": "$20.53"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000004"
 				 },
  			    "product_name": "Dextromathorphan HBr",
			    "supplier": "SC-Pharmacy",
			    "quantity": 211,
			    "unit_cost": "$20.53"
		}]
} => extract(products[unit_cost => ascending])]
2019-07-22 23:06:31,688|E|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 3|# 26|json.storeValues(json,jso - FAIL invalid/malformed json: {[JSON({
	"products": 
		[{
  			"_id": {
 			   "orderid": "5968dd23fc13ae04d9000001"
  				},
  			"product_name": "sildenafil citrate",
  			"supplier": "Wisozk Inc",
  			"quantity": 261,
  			"unit_cost": "$10.47"
		}, 
		{
 			"_id": {
    			  "orderid": "5968dd23fc13ae04d9000002"
  				},
 			  "product_name": "Mountain Juniperus ashei",
  			  "supplier": "Wisozk Inc",
			  "quantity": 292,
			  "unit_cost": "$8.74"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000003"
				},
			    "product_name": "Dextromathorphan HBr",
			    "supplier": "Schmitt-Weissnat",
  		            "quantity": 211,
  			    "unit_cost": "$20.53"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000004"
 				 },
  			    "product_name": "Dextromathorphan HBr",
			    "supplier": "SC-Pharmacy",
			    "quantity": 211,
			    "unit_cost": "$20.53"
		}]
} => extract(products[unit_cost => ascending])]}
2019-07-22 23:06:32,292|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 3|# 27|base.verbose(text) - executing verbose(text)(${result})
2019-07-22 23:06:32,293|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 3|# 27|base.verbose(text) - 
2019-07-22 23:06:32,294|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 3|# 27|base.verbose(text) - PASS 
2019-07-22 23:06:32,295|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 4 - executing activity
2019-07-22 23:06:32,895|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 4|# 28|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[product_name=Dextromathorphan HBr].supplier, supplierList)
2019-07-22 23:06:32,898|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 4|# 28|json.storeValues(json,jso - PASS EXPECTED match against 'products[product_name=Dextromathorphan HBr].supplier' stored to ${supplierList}
2019-07-22 23:06:33,499|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 4|# 29|base.verbose(text) - executing verbose(text)(${supplierList})
2019-07-22 23:06:33,500|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 4|# 29|base.verbose(text) - ["Schmitt-Weissnat","SC-Pharmacy"]
2019-07-22 23:06:33,501|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 4|# 29|base.verbose(text) - PASS 
2019-07-22 23:06:33,502|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5 - executing activity
2019-07-22 23:06:34,102|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 30|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products.product_name, productList)
2019-07-22 23:06:34,144|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 30|json.storeValues(json,jso - PASS EXPECTED match against 'products.product_name' stored to ${productList}
2019-07-22 23:06:34,745|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 31|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products.unit_cost, costList)
2019-07-22 23:06:34,748|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 31|json.storeValues(json,jso - PASS EXPECTED match against 'products.unit_cost' stored to ${costList}
2019-07-22 23:06:35,350|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 32|base.save(var,value) - executing save(var,value)(unit_costList, [LIST${costList} => replaceRegex([$],)])
2019-07-22 23:06:35,351|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 32|base.save(var,value) - PASS stored '[LIST["$10.47","$8.74","$20.53","$20.53"] => replaceRegex([$],)]' as ${unit_costList}
2019-07-22 23:06:35,953|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 33|base.save(var,value) - executing save(var,value)(counter, 0)
2019-07-22 23:06:35,954|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 33|base.save(var,value) - PASS stored '0' as ${counter}
2019-07-22 23:06:36,555|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 34|base.save(var,value) - executing save(var,value)(finalList, abcd)
2019-07-22 23:06:36,556|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 34|base.save(var,value) - PASS stored 'abcd' as ${finalList}
2019-07-22 23:06:37,156|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 35|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(6, -1)
2019-07-22 23:06:37,157|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #1 --------------------------------------------->
2019-07-22 23:06:37,158|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 23:06:37,159|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 23:06:37,160|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 23:06:37,160|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 38|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-22 23:06:37,163|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 38|base.save(var,value) - [repeat-until] PASS stored '10.47' as ${cost}
2019-07-22 23:06:37,164|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 23:06:37,164|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 10.47
2019-07-22 23:06:37,165|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 10.47
2019-07-22 23:06:37,168|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-22 23:06:37,170|I|Thread-1|evaluating flow control:	SkipIf(10.47>20)		=> NOT MATCHED
2019-07-22 23:06:37,175|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 40|base.verbose(text) - finalList,"sildenafil citrate"
2019-07-22 23:06:37,176|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] PASS finalList,"sildenafil citrate"
2019-07-22 23:06:37,176|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 23:06:37,180|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2019-07-22 23:06:37,180|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #2 --------------------------------------------->
2019-07-22 23:06:37,181|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 23:06:37,181|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 23:06:37,182|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '"$8.74"' as ${value}
2019-07-22 23:06:37,182|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 38|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-22 23:06:37,183|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 38|base.save(var,value) - [repeat-until] PASS stored '8.74' as ${cost}
2019-07-22 23:06:37,183|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 23:06:37,184|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 8.74
2019-07-22 23:06:37,184|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 8.74
2019-07-22 23:06:37,184|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-22 23:06:37,185|I|Thread-1|evaluating flow control:	SkipIf(8.74>20)		=> NOT MATCHED
2019-07-22 23:06:37,185|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 40|base.verbose(text) - finalList,"Mountain Juniperus ashei"
2019-07-22 23:06:37,186|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] PASS finalList,"Mountain Juniperus ashei"
2019-07-22 23:06:37,186|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 23:06:37,187|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2019-07-22 23:06:37,187|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #3 --------------------------------------------->
2019-07-22 23:06:37,187|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 23:06:37,192|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 23:06:37,202|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '"$20.53"' as ${value}
2019-07-22 23:06:37,202|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 38|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-22 23:06:37,203|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 38|base.save(var,value) - [repeat-until] PASS stored '20.53' as ${cost}
2019-07-22 23:06:37,203|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 23:06:37,204|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 20.53
2019-07-22 23:06:37,205|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 20.53
2019-07-22 23:06:37,207|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-22 23:06:37,211|I|Thread-1|evaluating flow control:	SkipIf(20.53>20)		=> MATCHED
2019-07-22 23:06:37,213|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] SKIPPED current step skipped: SkipIf(${cost} > 20)
2019-07-22 23:06:37,213|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 23:06:37,214|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 3
2019-07-22 23:06:37,214|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #4 --------------------------------------------->
2019-07-22 23:06:37,214|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 23:06:37,215|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 23:06:37,215|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '"$20.53"' as ${value}
2019-07-22 23:06:37,215|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 38|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-22 23:06:37,216|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 38|base.save(var,value) - [repeat-until] PASS stored '20.53' as ${cost}
2019-07-22 23:06:37,216|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 23:06:37,217|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 20.53
2019-07-22 23:06:37,217|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 20.53
2019-07-22 23:06:37,217|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-22 23:06:37,218|I|Thread-1|evaluating flow control:	SkipIf(20.53>20)		=> MATCHED
2019-07-22 23:06:37,218|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] SKIPPED current step skipped: SkipIf(${cost} > 20)
2019-07-22 23:06:37,218|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 23:06:37,219|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 4
2019-07-22 23:06:37,219|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #5 --------------------------------------------->
2019-07-22 23:06:37,219|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 23:06:37,233|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 35|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2019-07-22 23:06:37,834|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 42|base.verbose(text) - executing verbose(text)(${finalList})
2019-07-22 23:06:37,835|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 42|base.verbose(text) - abcd
2019-07-22 23:06:37,836|I|Thread-1|firstEvaluation.20190722_230620.001|JsonScenario|Activity 5|# 42|base.verbose(text) - PASS 
2019-07-22 23:06:38,078|I|Thread-1|[firstEvaluation.20190722_230620.001|JsonScenario] saving test scenario
2019-07-22 23:06:38,186|I|Thread-1|firstEvaluation.20190722_230620.001|XMLScenario - executing test scenario
2019-07-22 23:06:38,192|I|Thread-1|firstEvaluation.20190722_230620.001|XMLScenario|Activity 1 - executing activity
2019-07-22 23:06:38,793|I|Thread-1|firstEvaluation.20190722_230620.001|XMLScenario|Activity 1|#  5|io.readFile(var,file) - executing readFile(var,file)(xmlFile, $(syspath|data|fullpath)/example_1.xml)
2019-07-22 23:06:38,795|I|Thread-1|firstEvaluation.20190722_230620.001|XMLScenario|Activity 1|#  5|io.readFile(var,file) - PASS Content read from 'C:\projects\firstEvaluation\artifact\data\example_1.xml' to ${xmlFile}
2019-07-22 23:06:39,396|I|Thread-1|firstEvaluation.20190722_230620.001|XMLScenario|Activity 1|#  6|xml.storeValues(xml,xpath - executing storeValues(xml,xpath,var)($(syspath|data|fullpath)/example_1.xml, /catalog/book[publish_date[starts-with(.,"2000-12-")] and ./title/text()]/title, bookList)
2019-07-22 23:06:39,506|I|Thread-1|firstEvaluation.20190722_230620.001|XMLScenario|Activity 1|#  6|xml.storeValues(xml,xpath - PASS XML matches saved to 'bookList'
2019-07-22 23:06:40,107|I|Thread-1|firstEvaluation.20190722_230620.001|XMLScenario|Activity 1|#  7|base.verbose(text) - executing verbose(text)(${bookList})
2019-07-22 23:06:40,108|I|Thread-1|firstEvaluation.20190722_230620.001|XMLScenario|Activity 1|#  7|base.verbose(text) - Midnight Rain,Creepy Crawlies,Microsoft .NET: The Programming Bible,MSXML3: A Comprehensive Guide
2019-07-22 23:06:40,110|I|Thread-1|firstEvaluation.20190722_230620.001|XMLScenario|Activity 1|#  7|base.verbose(text) - PASS 
2019-07-22 23:06:40,141|I|Thread-1|[firstEvaluation.20190722_230620.001|XMLScenario] saving test scenario
2019-07-22 23:06:40,224|I|Thread-1|[20190722_230619] 
/-TEST COMPLETE-----------------------------------------------------------------
| Test Output:    C:\projects\firstEvaluation\output\20190722_230619\firstEvaluation.20190722_230620.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 18611 ms
» Test Steps:     29
» Error(s):       1



2019-07-22 23:06:42,436|I|Thread-1|[20190722_230619] 
/-TEST COMPLETE-----------------------------------------------------------------
| Test Script:    C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 23233 ms
» Iterations:     [1] total 1
» Test Steps:     29
» Passed:         28
» Error(s):       1
» Iteration 1 of 1: C:\projects\firstEvaluation\output\20190722_230619\firstEvaluation.20190722_230620.001.xlsx



2019-07-22 23:06:43,175|I|main|[20190722_230619] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] now completed
2019-07-22 23:06:43,176|I|main|[20190722_230619] all execution thread(s) have terminated
2019-07-22 23:06:43,176|I|main|[20190722_230619] test run completed in about 24 seconds
2019-07-22 23:06:43,272|I|main|No predefined nexial-setup found
2019-07-22 23:06:43,312|I|main|outputBase not set; output-to-cloud DISABLED!
2019-07-22 23:06:43,312|I|main|accessKey not set; output-to-cloud DISABLED!
2019-07-22 23:06:43,312|I|main|secretKey not set; output-to-cloud DISABLED!
2019-07-22 23:06:43,313|I|main|generating HTML output for this execution to C:\projects\firstEvaluation\output\20190722_230619\execution-output.html
2019-07-22 23:06:44,126|I|main|generating JUnit XML output for this execution to C:\projects\firstEvaluation\output\20190722_230619\junit.xml
2019-07-22 23:06:44,262|I|main|generated JUnit report for this execution: C:\projects\firstEvaluation\output\20190722_230619\junit.xml
2019-07-22 23:06:44,315|I|main|nexial mailer not enabled: nexial.enableEmail=false
2019-07-22 23:06:44,315|I|main|skipped email notification as configured
2019-07-22 23:06:44,317|I|main|exiting Nexial...
2019-07-22 23:06:44,318|I|main|

/-END OF EXECUTION--------------------------------------------------------------
| » Execution Time: 24 sec.
| » Test Steps....: 29
| » Passed........: 28
| » Failed........: 1
| » Success Rate..: 96.55%
\----------------------------------------------------------nexial-core dev_0581-

2019-07-22 23:06:44,319|E|main|failure found; success rate is 96.55%
2019-07-22 23:06:44,319|I|main|End of Execution:
NEXIAL_OUTPUT:         C:\projects\firstEvaluation\output\20190722_230619
NEXIAL_EXECUTION_HTML: C:\projects\firstEvaluation\output\20190722_230619\execution-output.html
NEXIAL_JUNIT_XML:      C:\projects\firstEvaluation\output\20190722_230619\junit.xml
NEXIAL_SUCCESS_RATE:   96.55%
NEXIAL_EXIT_STATUS:    -13
