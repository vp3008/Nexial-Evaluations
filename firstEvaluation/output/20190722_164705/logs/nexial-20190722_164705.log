2019-07-22 16:47:05,627|I|Thread-1|(DELAYED) nexial-core dev_0581 starting up...
2019-07-22 16:47:05,629|I|Thread-1|(DELAYED) data file resolved as C:\Users\DEEPAN~1\AppData\Local\Temp\rhbST\firstEvaluation.data.xlsx
2019-07-22 16:47:05,629|I|Thread-1|(DELAYED) input files and output directory resolved...
2019-07-22 16:47:05,629|I|Thread-1|(DELAYED) No predefined nexial-setup found
2019-07-22 16:47:05,629|I|Thread-1|(DELAYED) [20190722_164705] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] resolve RUN ID as 20190722_164705
2019-07-22 16:47:05,629|I|Thread-1|(DELAYED) [20190722_164705] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] new thread started
2019-07-22 16:47:05,631|I|Thread-1|No predefined nexial-setup found
2019-07-22 16:47:05,682|I|Thread-1|outputBase not set; output-to-cloud DISABLED!
2019-07-22 16:47:05,682|I|Thread-1|accessKey not set; output-to-cloud DISABLED!
2019-07-22 16:47:05,683|I|Thread-1|secretKey not set; output-to-cloud DISABLED!
2019-07-22 16:47:05,702|I|Thread-1|missing REQUIRED configuration; sms DISABLED!
2019-07-22 16:47:06,388|I|Thread-1|[20190722_164705] executing C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx with 1 iteration(s)
2019-07-22 16:47:06,392|I|Thread-1|[20190722_164705] create directory C:\projects\firstEvaluation\output\20190722_164705\captures
2019-07-22 16:47:06,392|I|Thread-1|[20190722_164705] create directory C:\projects\firstEvaluation\output\20190722_164705\logs
2019-07-22 16:47:06,747|I|Thread-1|[20190722_164705] merging test data to tmp file C:\projects\firstEvaluation\output\20190722_164705\firstEvaluation.20190722_164706.001.xlsx
2019-07-22 16:47:06,747|I|Thread-1|refetching data from C:\projects\firstEvaluation\artifact\data\firstEvaluation.data.xlsx
2019-07-22 16:47:06,899|I|Thread-1|[20190722_164705] test script and test data merged to C:\projects\firstEvaluation\output\20190722_164705\firstEvaluation.20190722_164706.001.xlsx
2019-07-22 16:47:07,444|I|Thread-1|STARTS
2019-07-22 16:47:07,471|I|Thread-1|firstEvaluation.20190722_164706.001 - executing iteration #1 of 1; Iteration Id 1
2019-07-22 16:47:07,481|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario - executing test scenario
2019-07-22 16:47:07,482|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 1 - executing activity
2019-07-22 16:47:08,084|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 1|#  5|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].product_name, productNames)
2019-07-22 16:47:08,158|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 1|#  5|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].product_name' stored to ${productNames}
2019-07-22 16:47:08,759|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 1|#  6|base.verbose(text) - executing verbose(text)(${productNames})
2019-07-22 16:47:08,760|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 1|#  6|base.verbose(text) - ["sildenafil citrate","Mountain Juniperus ashei"]
2019-07-22 16:47:08,894|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 1|#  6|base.verbose(text) - PASS 
2019-07-22 16:47:08,897|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2 - executing activity
2019-07-22 16:47:09,498|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|#  7|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].quantity, quantityList)
2019-07-22 16:47:09,501|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|#  7|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].quantity' stored to ${quantityList}
2019-07-22 16:47:10,103|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|#  8|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].unit_cost, costList)
2019-07-22 16:47:10,110|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|#  8|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].unit_cost' stored to ${costList}
2019-07-22 16:47:10,711|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|#  9|base.save(var,value) - executing save(var,value)(unit_costList, [LIST${costList} => replaceRegex([$],)])
2019-07-22 16:47:10,712|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|#  9|base.save(var,value) - PASS stored '[LIST["$10.47","$8.74"] => replaceRegex([$],)]' as ${unit_costList}
2019-07-22 16:47:11,314|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 10|base.verbose(text) - executing verbose(text)(${unit_costList})
2019-07-22 16:47:11,315|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 10|base.verbose(text) - [LIST["$10.47","$8.74"] => replaceRegex([$],)]
2019-07-22 16:47:11,316|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 10|base.verbose(text) - PASS 
2019-07-22 16:47:11,917|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 11|base.save(var,value) - executing save(var,value)(sumTotal, 0)
2019-07-22 16:47:11,918|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 11|base.save(var,value) - PASS stored '0' as ${sumTotal}
2019-07-22 16:47:12,520|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 12|base.save(var,value) - executing save(var,value)(counter, 0)
2019-07-22 16:47:12,521|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 12|base.save(var,value) - PASS stored '0' as ${counter}
2019-07-22 16:47:13,123|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 13|base.save(var,value) - executing save(var,value)(length, $(array|length|${quantityList}))
2019-07-22 16:47:13,126|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 13|base.save(var,value) - PASS stored '2' as ${length}
2019-07-22 16:47:13,728|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 14|base.save(var,value) - executing save(var,value)(mulValue, 0)
2019-07-22 16:47:13,729|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 14|base.save(var,value) - PASS stored '0' as ${mulValue}
2019-07-22 16:47:14,331|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 15|base.verbose(text) - executing verbose(text)(${unit_costList})
2019-07-22 16:47:14,331|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 15|base.verbose(text) - [LIST["$10.47","$8.74"] => replaceRegex([$],)]
2019-07-22 16:47:14,332|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 15|base.verbose(text) - PASS 
2019-07-22 16:47:14,934|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 16|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(6, -1)
2019-07-22 16:47:14,934|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #1 --------------------------------------------->
2019-07-22 16:47:14,935|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-22 16:47:14,936|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 18|base.save(var,value) - executing save(var,value)(unit_cost, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:47:14,937|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 18|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${unit_cost}
2019-07-22 16:47:14,938|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 19|base.save(var,value) - executing save(var,value)(quantity, $(array|item|${quantityList}|${counter}))
2019-07-22 16:47:14,939|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 19|base.save(var,value) - [repeat-until] PASS stored '261' as ${quantity}
2019-07-22 16:47:14,940|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 20|base.save(var,value) - executing save(var,value)(mulValue, [NUMBER(${unit_cost}) => multiply(${quantity})])
2019-07-22 16:47:14,950|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 20|base.save(var,value) - [repeat-until] PASS stored '2732.67' as ${mulValue}
2019-07-22 16:47:14,951|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 21|base.save(var,value) - executing save(var,value)(sumTotal, [NUMBER(${sumTotal}) => add(${mulValue})])
2019-07-22 16:47:14,954|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 21|base.save(var,value) - [repeat-until] PASS stored '2732.67' as ${sumTotal}
2019-07-22 16:47:14,957|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 16:47:14,959|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2019-07-22 16:47:14,960|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #2 --------------------------------------------->
2019-07-22 16:47:14,960|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-22 16:47:14,961|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 18|base.save(var,value) - executing save(var,value)(unit_cost, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:47:14,962|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 18|base.save(var,value) - [repeat-until] PASS stored '"$8.74"' as ${unit_cost}
2019-07-22 16:47:14,963|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 19|base.save(var,value) - executing save(var,value)(quantity, $(array|item|${quantityList}|${counter}))
2019-07-22 16:47:14,963|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 19|base.save(var,value) - [repeat-until] PASS stored '292' as ${quantity}
2019-07-22 16:47:14,964|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 20|base.save(var,value) - executing save(var,value)(mulValue, [NUMBER(${unit_cost}) => multiply(${quantity})])
2019-07-22 16:47:14,971|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 20|base.save(var,value) - [repeat-until] PASS stored '2552.08' as ${mulValue}
2019-07-22 16:47:14,973|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 21|base.save(var,value) - executing save(var,value)(sumTotal, [NUMBER(${sumTotal}) => add(${mulValue})])
2019-07-22 16:47:14,977|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 21|base.save(var,value) - [repeat-until] PASS stored '5284.75' as ${sumTotal}
2019-07-22 16:47:14,980|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 16:47:14,980|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2019-07-22 16:47:14,981|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #3 --------------------------------------------->
2019-07-22 16:47:14,982|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-22 16:47:14,983|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 16|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2019-07-22 16:47:15,583|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 23|base.verbose(text) - executing verbose(text)(${sumTotal})
2019-07-22 16:47:15,583|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 23|base.verbose(text) - 5284.75
2019-07-22 16:47:15,586|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 2|# 23|base.verbose(text) - PASS 
2019-07-22 16:47:15,588|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 3 - executing activity
2019-07-22 16:47:16,188|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 3|# 24|base.save(var,value) - executing save(var,value)(jsonFile, $(syspath|data|fullpath)/example_2.json)
2019-07-22 16:47:16,190|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 3|# 24|base.save(var,value) - PASS stored 'C:\projects\firstEvaluation\artifact\data\example_2.json' as ${jsonFile}
2019-07-22 16:47:16,790|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 3|# 25|base.save(var,value) - executing save(var,value)(var, [JSON(${jsonFile} => extract(products[unit_cost => ascending])])
2019-07-22 16:47:16,792|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 3|# 25|base.save(var,value) - PASS stored '[JSON(C:\projects\firstEvaluation\artifact\data\example_2.json => extract(products[unit_cost => ascending])]' as ${var}
2019-07-22 16:47:17,393|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 3|# 26|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)(var, products.product_name, result)
2019-07-22 16:47:17,397|E|Thread-1|Error converting string to JSON object: A JSONObject text must begin with '{' at 1 [character 2 line 1]
org.json.JSONException: A JSONObject text must begin with '{' at 1 [character 2 line 1]
	at org.json.JSONTokener.syntaxError(JSONTokener.java:505)
	at org.json.JSONObject.<init>(JSONObject.java:214)
	at org.json.JSONObject.<init>(JSONObject.java:357)
	at org.nexial.core.utils.JsonUtils.toJSONObject(JsonUtils.java:75)
	at org.nexial.core.plugins.json.JsonCommand.resolveToJSONObject(JsonCommand.java:323)
	at org.nexial.core.plugins.json.JsonCommand.toJSONObject(JsonCommand.java:441)
	at org.nexial.core.plugins.json.JsonCommand.sanityCheck(JsonCommand.java:445)
	at org.nexial.core.plugins.json.JsonCommand.find(JsonCommand.java:449)
	at org.nexial.core.plugins.json.JsonCommand.extractJsonValue(JsonCommand.java:384)
	at org.nexial.core.plugins.json.JsonCommand.storeValues(JsonCommand.java:123)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.nexial.core.plugins.base.BaseCommand.execute(BaseCommand.java:156)
	at org.nexial.core.model.TestStep.invokeCommand(TestStep.java:327)
	at org.nexial.core.model.TestStep.execute(TestStep.java:169)
	at org.nexial.core.model.TestCase.execute(TestCase.java:94)
	at org.nexial.core.model.TestScenario.execute(TestScenario.java:130)
	at org.nexial.core.model.ExecutionContext.execute(ExecutionContext.java:1184)
	at org.nexial.core.ExecutionThread.run(ExecutionThread.java:174)
2019-07-22 16:47:17,399|E|Thread-1|JSON string in error is as follows:
var
2019-07-22 16:47:17,405|E|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 3|# 26|json.storeValues(json,jso - FAIL EXPECTED match against 'products.product_name' was not found
2019-07-22 16:47:18,009|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 3|# 27|base.verbose(text) - executing verbose(text)(result)
2019-07-22 16:47:18,010|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 3|# 27|base.verbose(text) - result
2019-07-22 16:47:18,011|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 3|# 27|base.verbose(text) - PASS 
2019-07-22 16:47:18,012|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 4 - executing activity
2019-07-22 16:47:18,613|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 4|# 28|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[product_name=Dextromathorphan HBr].supplier, supplierList)
2019-07-22 16:47:18,615|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 4|# 28|json.storeValues(json,jso - PASS EXPECTED match against 'products[product_name=Dextromathorphan HBr].supplier' stored to ${supplierList}
2019-07-22 16:47:19,217|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 4|# 29|base.verbose(text) - executing verbose(text)(${supplierList})
2019-07-22 16:47:19,217|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 4|# 29|base.verbose(text) - ["Schmitt-Weissnat","SC-Pharmacy"]
2019-07-22 16:47:19,219|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 4|# 29|base.verbose(text) - PASS 
2019-07-22 16:47:19,220|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5 - executing activity
2019-07-22 16:47:19,821|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 30|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products.product_name, productList)
2019-07-22 16:47:19,853|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 30|json.storeValues(json,jso - PASS EXPECTED match against 'products.product_name' stored to ${productList}
2019-07-22 16:47:20,454|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 31|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products.unit_cost, costList)
2019-07-22 16:47:20,456|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 31|json.storeValues(json,jso - PASS EXPECTED match against 'products.unit_cost' stored to ${costList}
2019-07-22 16:47:21,058|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 32|base.save(var,value) - executing save(var,value)(unit_costList, [LIST${costList} => replaceRegex([$],)])
2019-07-22 16:47:21,060|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 32|base.save(var,value) - PASS stored '[LIST["$10.47","$8.74","$20.53","$20.53"] => replaceRegex([$],)]' as ${unit_costList}
2019-07-22 16:47:21,660|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 33|base.save(var,value) - executing save(var,value)(counter, 0)
2019-07-22 16:47:21,662|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 33|base.save(var,value) - PASS stored '0' as ${counter}
2019-07-22 16:47:22,262|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 34|base.save(var,value) - executing save(var,value)(finalList, abcd)
2019-07-22 16:47:22,263|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 34|base.save(var,value) - PASS stored 'abcd' as ${finalList}
2019-07-22 16:47:22,864|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 35|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(6, -1)
2019-07-22 16:47:22,865|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #1 --------------------------------------------->
2019-07-22 16:47:22,866|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:47:22,867|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:47:22,868|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:47:22,868|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 38|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-22 16:47:22,871|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 38|base.save(var,value) - [repeat-until] PASS stored '10.47' as ${cost}
2019-07-22 16:47:22,872|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:47:22,873|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 10.47
2019-07-22 16:47:22,873|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 10.47
2019-07-22 16:47:22,873|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(${finalList}) => append($(array|item|${productList}|${counter}))])
2019-07-22 16:47:22,879|I|Thread-1|evaluating flow control:	SkipIf(10.47>20)		=> NOT MATCHED
2019-07-22 16:47:22,883|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 40|base.verbose(text) - abcd,"sildenafil citrate"
2019-07-22 16:47:22,884|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] PASS abcd,"sildenafil citrate"
2019-07-22 16:47:22,884|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 16:47:22,885|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2019-07-22 16:47:22,888|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #2 --------------------------------------------->
2019-07-22 16:47:22,889|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:47:22,891|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:47:22,892|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '"$8.74"' as ${value}
2019-07-22 16:47:22,893|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 38|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-22 16:47:22,894|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 38|base.save(var,value) - [repeat-until] PASS stored '8.74' as ${cost}
2019-07-22 16:47:22,894|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:47:22,895|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 8.74
2019-07-22 16:47:22,899|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 8.74
2019-07-22 16:47:22,899|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(${finalList}) => append($(array|item|${productList}|${counter}))])
2019-07-22 16:47:22,901|I|Thread-1|evaluating flow control:	SkipIf(8.74>20)		=> NOT MATCHED
2019-07-22 16:47:22,901|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 40|base.verbose(text) - abcd,"Mountain Juniperus ashei"
2019-07-22 16:47:22,902|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] PASS abcd,"Mountain Juniperus ashei"
2019-07-22 16:47:22,902|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 16:47:22,902|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2019-07-22 16:47:22,903|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #3 --------------------------------------------->
2019-07-22 16:47:22,903|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:47:22,903|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:47:22,904|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '"$20.53"' as ${value}
2019-07-22 16:47:22,904|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 38|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-22 16:47:22,905|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 38|base.save(var,value) - [repeat-until] PASS stored '20.53' as ${cost}
2019-07-22 16:47:22,905|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:47:22,905|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 20.53
2019-07-22 16:47:22,906|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 20.53
2019-07-22 16:47:22,906|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(${finalList}) => append($(array|item|${productList}|${counter}))])
2019-07-22 16:47:22,906|I|Thread-1|evaluating flow control:	SkipIf(20.53>20)		=> MATCHED
2019-07-22 16:47:22,907|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] SKIPPED current step skipped: SkipIf(${cost} > 20)
2019-07-22 16:47:22,908|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 16:47:22,918|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 3
2019-07-22 16:47:22,920|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #4 --------------------------------------------->
2019-07-22 16:47:22,920|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:47:22,921|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:47:22,922|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '"$20.53"' as ${value}
2019-07-22 16:47:22,923|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 38|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-22 16:47:22,923|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 38|base.save(var,value) - [repeat-until] PASS stored '20.53' as ${cost}
2019-07-22 16:47:22,923|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:47:22,924|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 20.53
2019-07-22 16:47:22,924|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 20.53
2019-07-22 16:47:22,924|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(${finalList}) => append($(array|item|${productList}|${counter}))])
2019-07-22 16:47:22,930|I|Thread-1|evaluating flow control:	SkipIf(20.53>20)		=> MATCHED
2019-07-22 16:47:22,931|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] SKIPPED current step skipped: SkipIf(${cost} > 20)
2019-07-22 16:47:22,933|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 16:47:22,935|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 4
2019-07-22 16:47:22,935|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #5 --------------------------------------------->
2019-07-22 16:47:22,935|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:47:22,936|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 35|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2019-07-22 16:47:23,538|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 42|base.verbose(text) - executing verbose(text)(${finalList})
2019-07-22 16:47:23,538|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 42|base.verbose(text) - abcd
2019-07-22 16:47:23,540|I|Thread-1|firstEvaluation.20190722_164706.001|JsonScenario|Activity 5|# 42|base.verbose(text) - PASS 
2019-07-22 16:47:23,729|I|Thread-1|[firstEvaluation.20190722_164706.001|JsonScenario] saving test scenario
2019-07-22 16:47:23,807|I|Thread-1|firstEvaluation.20190722_164706.001|XMLScenario - executing test scenario
2019-07-22 16:47:23,809|I|Thread-1|firstEvaluation.20190722_164706.001|XMLScenario|Activity 1 - executing activity
2019-07-22 16:47:24,411|I|Thread-1|firstEvaluation.20190722_164706.001|XMLScenario|Activity 1|#  5|xml.storeValues(xml,xpath - executing storeValues(xml,xpath,var)($(syspath|data|fullpath)/example_1.xml)
2019-07-22 16:47:24,413|E|Thread-1|firstEvaluation.20190722_164706.001|XMLScenario|Activity 1|#  5|xml.storeValues(xml,xpath - FAIL MISMATCHED parameters - xml.storeValues EXPECTS 3 but found 1
2019-07-22 16:47:24,432|I|Thread-1|[firstEvaluation.20190722_164706.001|XMLScenario] saving test scenario
2019-07-22 16:47:24,501|I|Thread-1|[20190722_164705] 
/-TEST COMPLETE-----------------------------------------------------------------
| Test Output:    C:\projects\firstEvaluation\output\20190722_164705\firstEvaluation.20190722_164706.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 17024 ms
» Test Steps:     27
» Error(s):       2



2019-07-22 16:47:26,446|I|Thread-1|[20190722_164705] 
/-TEST COMPLETE-----------------------------------------------------------------
| Test Script:    C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 20916 ms
» Iterations:     [1] total 1
» Test Steps:     27
» Passed:         25
» Error(s):       2
» Iteration 1 of 1: C:\projects\firstEvaluation\output\20190722_164705\firstEvaluation.20190722_164706.001.xlsx



2019-07-22 16:47:26,494|I|main|[20190722_164705] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] now completed
2019-07-22 16:47:26,495|I|main|[20190722_164705] all execution thread(s) have terminated
2019-07-22 16:47:26,495|I|main|[20190722_164705] test run completed in about 21 seconds
2019-07-22 16:47:26,575|I|main|No predefined nexial-setup found
2019-07-22 16:47:26,611|I|main|outputBase not set; output-to-cloud DISABLED!
2019-07-22 16:47:26,612|I|main|accessKey not set; output-to-cloud DISABLED!
2019-07-22 16:47:26,612|I|main|secretKey not set; output-to-cloud DISABLED!
2019-07-22 16:47:26,612|I|main|generating HTML output for this execution to C:\projects\firstEvaluation\output\20190722_164705\execution-output.html
2019-07-22 16:47:27,222|I|main|generating JUnit XML output for this execution to C:\projects\firstEvaluation\output\20190722_164705\junit.xml
2019-07-22 16:47:27,272|I|main|generated JUnit report for this execution: C:\projects\firstEvaluation\output\20190722_164705\junit.xml
2019-07-22 16:47:27,313|I|main|nexial mailer not enabled: nexial.enableEmail=false
2019-07-22 16:47:27,313|I|main|skipped email notification as configured
2019-07-22 16:47:27,314|I|main|exiting Nexial...
2019-07-22 16:47:27,315|I|main|

/-END OF EXECUTION--------------------------------------------------------------
| » Execution Time: 21 sec.
| » Test Steps....: 27
| » Passed........: 25
| » Failed........: 2
| » Success Rate..: 92.59%
\----------------------------------------------------------nexial-core dev_0581-

2019-07-22 16:47:27,315|E|main|failure found; success rate is 92.59%
2019-07-22 16:47:27,316|I|main|End of Execution:
NEXIAL_OUTPUT:         C:\projects\firstEvaluation\output\20190722_164705
NEXIAL_EXECUTION_HTML: C:\projects\firstEvaluation\output\20190722_164705\execution-output.html
NEXIAL_JUNIT_XML:      C:\projects\firstEvaluation\output\20190722_164705\junit.xml
NEXIAL_SUCCESS_RATE:   92.59%
NEXIAL_EXIT_STATUS:    -13
