2019-07-22 18:08:01,658|I|Thread-1|(DELAYED) nexial-core dev_0581 starting up...
2019-07-22 18:08:01,662|I|Thread-1|(DELAYED) data file resolved as C:\Users\DEEPAN~1\AppData\Local\Temp\zjMeE\firstEvaluation.data.xlsx
2019-07-22 18:08:01,662|I|Thread-1|(DELAYED) input files and output directory resolved...
2019-07-22 18:08:01,662|I|Thread-1|(DELAYED) No predefined nexial-setup found
2019-07-22 18:08:01,662|I|Thread-1|(DELAYED) [20190722_180801] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] resolve RUN ID as 20190722_180801
2019-07-22 18:08:01,662|I|Thread-1|(DELAYED) [20190722_180801] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] new thread started
2019-07-22 18:08:01,662|I|Thread-1|No predefined nexial-setup found
2019-07-22 18:08:01,726|I|Thread-1|outputBase not set; output-to-cloud DISABLED!
2019-07-22 18:08:01,726|I|Thread-1|accessKey not set; output-to-cloud DISABLED!
2019-07-22 18:08:01,726|I|Thread-1|secretKey not set; output-to-cloud DISABLED!
2019-07-22 18:08:01,742|I|Thread-1|missing REQUIRED configuration; sms DISABLED!
2019-07-22 18:08:02,422|I|Thread-1|[20190722_180801] executing C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx with 1 iteration(s)
2019-07-22 18:08:02,426|I|Thread-1|[20190722_180801] create directory C:\projects\firstEvaluation\output\20190722_180801\captures
2019-07-22 18:08:02,426|I|Thread-1|[20190722_180801] create directory C:\projects\firstEvaluation\output\20190722_180801\logs
2019-07-22 18:08:02,790|I|Thread-1|[20190722_180801] merging test data to tmp file C:\projects\firstEvaluation\output\20190722_180801\firstEvaluation.20190722_180802.001.xlsx
2019-07-22 18:08:02,790|I|Thread-1|refetching data from C:\projects\firstEvaluation\artifact\data\firstEvaluation.data.xlsx
2019-07-22 18:08:02,954|I|Thread-1|[20190722_180801] test script and test data merged to C:\projects\firstEvaluation\output\20190722_180801\firstEvaluation.20190722_180802.001.xlsx
2019-07-22 18:08:03,506|I|Thread-1|STARTS
2019-07-22 18:08:03,534|I|Thread-1|firstEvaluation.20190722_180802.001 - executing iteration #1 of 1; Iteration Id 1
2019-07-22 18:08:03,538|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario - executing test scenario
2019-07-22 18:08:03,538|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 1 - executing activity
2019-07-22 18:08:04,143|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 1|#  5|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].product_name, productNames)
2019-07-22 18:08:04,219|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 1|#  5|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].product_name' stored to ${productNames}
2019-07-22 18:08:04,819|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 1|#  6|base.verbose(text) - executing verbose(text)(${productNames})
2019-07-22 18:08:04,819|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 1|#  6|base.verbose(text) - ["sildenafil citrate","Mountain Juniperus ashei"]
2019-07-22 18:08:04,963|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 1|#  6|base.verbose(text) - PASS 
2019-07-22 18:08:04,963|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2 - executing activity
2019-07-22 18:08:05,564|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|#  7|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].quantity, quantityList)
2019-07-22 18:08:05,568|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|#  7|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].quantity' stored to ${quantityList}
2019-07-22 18:08:06,169|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|#  8|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].unit_cost, costList)
2019-07-22 18:08:06,169|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|#  8|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].unit_cost' stored to ${costList}
2019-07-22 18:08:06,773|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|#  9|base.save(var,value) - executing save(var,value)(unit_costList, [LIST${costList} => replaceRegex([$],)])
2019-07-22 18:08:06,773|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|#  9|base.save(var,value) - PASS stored '[LIST["$10.47","$8.74"] => replaceRegex([$],)]' as ${unit_costList}
2019-07-22 18:08:07,377|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 10|base.verbose(text) - executing verbose(text)(${unit_costList})
2019-07-22 18:08:07,377|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 10|base.verbose(text) - [LIST["$10.47","$8.74"] => replaceRegex([$],)]
2019-07-22 18:08:07,377|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 10|base.verbose(text) - PASS 
2019-07-22 18:08:07,983|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 11|base.save(var,value) - executing save(var,value)(sumTotal, 0)
2019-07-22 18:08:07,983|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 11|base.save(var,value) - PASS stored '0' as ${sumTotal}
2019-07-22 18:08:08,584|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 12|base.save(var,value) - executing save(var,value)(counter, 0)
2019-07-22 18:08:08,584|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 12|base.save(var,value) - PASS stored '0' as ${counter}
2019-07-22 18:08:09,186|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 13|base.save(var,value) - executing save(var,value)(length, $(array|length|${quantityList}))
2019-07-22 18:08:09,186|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 13|base.save(var,value) - PASS stored '2' as ${length}
2019-07-22 18:08:09,786|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 14|base.save(var,value) - executing save(var,value)(mulValue, 0)
2019-07-22 18:08:09,786|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 14|base.save(var,value) - PASS stored '0' as ${mulValue}
2019-07-22 18:08:10,386|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 15|base.verbose(text) - executing verbose(text)(${unit_costList})
2019-07-22 18:08:10,386|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 15|base.verbose(text) - [LIST["$10.47","$8.74"] => replaceRegex([$],)]
2019-07-22 18:08:10,386|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 15|base.verbose(text) - PASS 
2019-07-22 18:08:10,990|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 16|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(6, -1)
2019-07-22 18:08:10,990|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #1 --------------------------------------------->
2019-07-22 18:08:10,990|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-22 18:08:10,990|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 18|base.save(var,value) - executing save(var,value)(unit_cost, $(array|item|${unit_costList}|${counter}))
2019-07-22 18:08:10,993|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 18|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${unit_cost}
2019-07-22 18:08:10,993|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 19|base.save(var,value) - executing save(var,value)(quantity, $(array|item|${quantityList}|${counter}))
2019-07-22 18:08:10,993|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 19|base.save(var,value) - [repeat-until] PASS stored '261' as ${quantity}
2019-07-22 18:08:10,993|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 20|base.save(var,value) - executing save(var,value)(mulValue, [NUMBER(${unit_cost}) => multiply(${quantity})])
2019-07-22 18:08:11,005|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 20|base.save(var,value) - [repeat-until] PASS stored '2732.67' as ${mulValue}
2019-07-22 18:08:11,005|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 21|base.save(var,value) - executing save(var,value)(sumTotal, [NUMBER(${sumTotal}) => add(${mulValue})])
2019-07-22 18:08:11,009|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 21|base.save(var,value) - [repeat-until] PASS stored '2732.67' as ${sumTotal}
2019-07-22 18:08:11,009|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 18:08:11,013|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2019-07-22 18:08:11,013|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #2 --------------------------------------------->
2019-07-22 18:08:11,013|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-22 18:08:11,017|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 18|base.save(var,value) - executing save(var,value)(unit_cost, $(array|item|${unit_costList}|${counter}))
2019-07-22 18:08:11,017|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 18|base.save(var,value) - [repeat-until] PASS stored '"$8.74"' as ${unit_cost}
2019-07-22 18:08:11,017|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 19|base.save(var,value) - executing save(var,value)(quantity, $(array|item|${quantityList}|${counter}))
2019-07-22 18:08:11,017|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 19|base.save(var,value) - [repeat-until] PASS stored '292' as ${quantity}
2019-07-22 18:08:11,017|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 20|base.save(var,value) - executing save(var,value)(mulValue, [NUMBER(${unit_cost}) => multiply(${quantity})])
2019-07-22 18:08:11,017|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 20|base.save(var,value) - [repeat-until] PASS stored '2552.08' as ${mulValue}
2019-07-22 18:08:11,021|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 21|base.save(var,value) - executing save(var,value)(sumTotal, [NUMBER(${sumTotal}) => add(${mulValue})])
2019-07-22 18:08:11,021|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 21|base.save(var,value) - [repeat-until] PASS stored '5284.75' as ${sumTotal}
2019-07-22 18:08:11,021|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 18:08:11,021|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2019-07-22 18:08:11,021|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #3 --------------------------------------------->
2019-07-22 18:08:11,021|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-22 18:08:11,021|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 16|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2019-07-22 18:08:11,627|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 23|base.verbose(text) - executing verbose(text)(${sumTotal})
2019-07-22 18:08:11,627|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 23|base.verbose(text) - 5284.75
2019-07-22 18:08:11,627|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 2|# 23|base.verbose(text) - PASS 
2019-07-22 18:08:11,630|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 3 - executing activity
2019-07-22 18:08:12,234|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 3|# 24|io.readFile(var,file) - executing readFile(var,file)(jsonFile, $(syspath|data|fullpath)/example_2.json)
2019-07-22 18:08:12,234|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 3|# 24|io.readFile(var,file) - PASS Content read from 'C:\projects\firstEvaluation\artifact\data\example_2.json' to ${jsonFile}
2019-07-22 18:08:12,838|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 3|# 25|base.save(var,value) - executing save(var,value)(var, [JSON(${jsonFile} => extract(products[unit_cost => ascending])])
2019-07-22 18:08:12,898|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 3|# 25|base.save(var,value) - PASS stored '[JSON({
	"products": 
		[{
  			"_id": {
 			   "orderid": "5968dd23fc13ae04d9000001"
  				},
  			"product_name": "sildenafil citrate",
  			"supplier": "Wisozk Inc",
  			"quantity": 261,
  			"unit_cost": "$10.47"
		}, 
		{
 			"_id": {
    			  "orderid": "5968dd23fc13ae04d9000002"
  				},
 			  "product_name": "Mountain Juniperus ashei",
  			  "supplier": "Wisozk Inc",
			  "quantity": 292,
			  "unit_cost": "$8.74"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000003"
				},
			    "product_name": "Dextromathorphan HBr",
			    "supplier": "Schmitt-Weissnat",
  		            "quantity": 211,
  			    "unit_cost": "$20.53"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000004"
 				 },
  			    "product_name": "Dextromathorphan HBr",
			    "supplier": "SC-Pharmacy",
			    "quantity": 211,
			    "unit_cost": "$20.53"
		}]
} => extract(products[unit_cost => ascending])]' as ${var}
2019-07-22 18:08:13,505|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 3|# 26|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)(${var}, products.product_name, result)
2019-07-22 18:08:13,505|E|Thread-1|Error converting string to JSON object: Expected a ',' or ']' at 7 [character 8 line 1]
org.json.JSONException: Expected a ',' or ']' at 7 [character 8 line 1]
	at org.json.JSONTokener.syntaxError(JSONTokener.java:505)
	at org.json.JSONArray.<init>(JSONArray.java:130)
	at org.json.JSONArray.<init>(JSONArray.java:147)
	at org.nexial.core.utils.JsonUtils.toJSONArray(JsonUtils.java:85)
	at org.nexial.core.plugins.json.JsonCommand.resolveToJSONObject(JsonCommand.java:318)
	at org.nexial.core.plugins.json.JsonCommand.toJSONObject(JsonCommand.java:441)
	at org.nexial.core.plugins.json.JsonCommand.sanityCheck(JsonCommand.java:445)
	at org.nexial.core.plugins.json.JsonCommand.find(JsonCommand.java:449)
	at org.nexial.core.plugins.json.JsonCommand.extractJsonValue(JsonCommand.java:384)
	at org.nexial.core.plugins.json.JsonCommand.storeValues(JsonCommand.java:123)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.nexial.core.plugins.base.BaseCommand.execute(BaseCommand.java:156)
	at org.nexial.core.model.TestStep.invokeCommand(TestStep.java:327)
	at org.nexial.core.model.TestStep.execute(TestStep.java:169)
	at org.nexial.core.model.TestCase.execute(TestCase.java:94)
	at org.nexial.core.model.TestScenario.execute(TestScenario.java:130)
	at org.nexial.core.model.ExecutionContext.execute(ExecutionContext.java:1184)
	at org.nexial.core.ExecutionThread.run(ExecutionThread.java:174)
2019-07-22 18:08:13,509|E|Thread-1|JSON string in error is as follows:
[JSON({
	"products": 
		[{
  			"_id": {
 			   "orderid": "5968dd23fc13ae04d9000001"
  				},
  			"product_name": "sildenafil citrate",
  			"supplier": "Wisozk Inc",
  			"quantity": 261,
  			"unit_cost": "$10.47"
		}, 
		{
 			"_id": {
    			  "orderid": "5968dd23fc13ae04d9000002"
  				},
 			  "product_name": "Mountain Juniperus ashei",
  			  "supplier": "Wisozk Inc",
			  "quantity": 292,
			  "unit_cost": "$8.74"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000003"
				},
			    "product_name": "Dextromathorphan HBr",
			    "supplier": "Schmitt-Weissnat",
  		            "quantity": 211,
  			    "unit_cost": "$20.53"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000004"
 				 },
  			    "product_name": "Dextromathorphan HBr",
			    "supplier": "SC-Pharmacy",
			    "quantity": 211,
			    "unit_cost": "$20.53"
		}]
} => extract(products[unit_cost => ascending])]
2019-07-22 18:08:13,541|E|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 3|# 26|json.storeValues(json,jso - FAIL invalid/malformed json: {[JSON({
	"products": 
		[{
  			"_id": {
 			   "orderid": "5968dd23fc13ae04d9000001"
  				},
  			"product_name": "sildenafil citrate",
  			"supplier": "Wisozk Inc",
  			"quantity": 261,
  			"unit_cost": "$10.47"
		}, 
		{
 			"_id": {
    			  "orderid": "5968dd23fc13ae04d9000002"
  				},
 			  "product_name": "Mountain Juniperus ashei",
  			  "supplier": "Wisozk Inc",
			  "quantity": 292,
			  "unit_cost": "$8.74"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000003"
				},
			    "product_name": "Dextromathorphan HBr",
			    "supplier": "Schmitt-Weissnat",
  		            "quantity": 211,
  			    "unit_cost": "$20.53"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000004"
 				 },
  			    "product_name": "Dextromathorphan HBr",
			    "supplier": "SC-Pharmacy",
			    "quantity": 211,
			    "unit_cost": "$20.53"
		}]
} => extract(products[unit_cost => ascending])]}
2019-07-22 18:08:14,147|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 3|# 27|base.verbose(text) - executing verbose(text)(result)
2019-07-22 18:08:14,147|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 3|# 27|base.verbose(text) - result
2019-07-22 18:08:14,147|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 3|# 27|base.verbose(text) - PASS 
2019-07-22 18:08:14,147|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 4 - executing activity
2019-07-22 18:08:14,749|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 4|# 28|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[product_name=Dextromathorphan HBr].supplier, supplierList)
2019-07-22 18:08:14,749|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 4|# 28|json.storeValues(json,jso - PASS EXPECTED match against 'products[product_name=Dextromathorphan HBr].supplier' stored to ${supplierList}
2019-07-22 18:08:15,356|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 4|# 29|base.verbose(text) - executing verbose(text)(${supplierList})
2019-07-22 18:08:15,356|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 4|# 29|base.verbose(text) - ["Schmitt-Weissnat","SC-Pharmacy"]
2019-07-22 18:08:15,356|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 4|# 29|base.verbose(text) - PASS 
2019-07-22 18:08:15,356|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5 - executing activity
2019-07-22 18:08:15,962|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 30|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products.product_name, productList)
2019-07-22 18:08:15,994|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 30|json.storeValues(json,jso - PASS EXPECTED match against 'products.product_name' stored to ${productList}
2019-07-22 18:08:16,596|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 31|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products.unit_cost, costList)
2019-07-22 18:08:16,596|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 31|json.storeValues(json,jso - PASS EXPECTED match against 'products.unit_cost' stored to ${costList}
2019-07-22 18:08:17,196|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 32|base.save(var,value) - executing save(var,value)(unit_costList, [LIST${costList} => replaceRegex([$],)])
2019-07-22 18:08:17,196|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 32|base.save(var,value) - PASS stored '[LIST["$10.47","$8.74","$20.53","$20.53"] => replaceRegex([$],)]' as ${unit_costList}
2019-07-22 18:08:17,800|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 33|base.save(var,value) - executing save(var,value)(counter, 0)
2019-07-22 18:08:17,800|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 33|base.save(var,value) - PASS stored '0' as ${counter}
2019-07-22 18:08:18,403|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 34|base.save(var,value) - executing save(var,value)(finalList, abcd)
2019-07-22 18:08:18,403|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 34|base.save(var,value) - PASS stored 'abcd' as ${finalList}
2019-07-22 18:08:19,004|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 35|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(6, -1)
2019-07-22 18:08:19,004|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #1 --------------------------------------------->
2019-07-22 18:08:19,004|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 18:08:19,004|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 18:08:19,004|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 18:08:19,008|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 38|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-22 18:08:19,012|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 38|base.save(var,value) - [repeat-until] PASS stored '10.47' as ${cost}
2019-07-22 18:08:19,012|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 18:08:19,012|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 10.47
2019-07-22 18:08:19,012|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 10.47
2019-07-22 18:08:19,012|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(${finalList}) => append($(array|item|${productList}|${counter}))])
2019-07-22 18:08:19,020|I|Thread-1|evaluating flow control:	SkipIf(10.47>20)		=> NOT MATCHED
2019-07-22 18:08:19,024|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 40|base.verbose(text) - abcd,"sildenafil citrate"
2019-07-22 18:08:19,024|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] PASS abcd,"sildenafil citrate"
2019-07-22 18:08:19,024|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 18:08:19,024|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2019-07-22 18:08:19,024|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #2 --------------------------------------------->
2019-07-22 18:08:19,024|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 18:08:19,028|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 18:08:19,028|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '"$8.74"' as ${value}
2019-07-22 18:08:19,028|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 38|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-22 18:08:19,028|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 38|base.save(var,value) - [repeat-until] PASS stored '8.74' as ${cost}
2019-07-22 18:08:19,028|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 18:08:19,028|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 8.74
2019-07-22 18:08:19,028|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 8.74
2019-07-22 18:08:19,028|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(${finalList}) => append($(array|item|${productList}|${counter}))])
2019-07-22 18:08:19,028|I|Thread-1|evaluating flow control:	SkipIf(8.74>20)		=> NOT MATCHED
2019-07-22 18:08:19,032|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 40|base.verbose(text) - abcd,"Mountain Juniperus ashei"
2019-07-22 18:08:19,040|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] PASS abcd,"Mountain Juniperus ashei"
2019-07-22 18:08:19,040|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 18:08:19,040|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2019-07-22 18:08:19,040|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #3 --------------------------------------------->
2019-07-22 18:08:19,044|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 18:08:19,044|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 18:08:19,044|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '"$20.53"' as ${value}
2019-07-22 18:08:19,044|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 38|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-22 18:08:19,044|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 38|base.save(var,value) - [repeat-until] PASS stored '20.53' as ${cost}
2019-07-22 18:08:19,044|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 18:08:19,044|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 20.53
2019-07-22 18:08:19,044|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 20.53
2019-07-22 18:08:19,044|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(${finalList}) => append($(array|item|${productList}|${counter}))])
2019-07-22 18:08:19,044|I|Thread-1|evaluating flow control:	SkipIf(20.53>20)		=> MATCHED
2019-07-22 18:08:19,048|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] SKIPPED current step skipped: SkipIf(${cost} > 20)
2019-07-22 18:08:19,048|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 18:08:19,048|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 3
2019-07-22 18:08:19,048|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #4 --------------------------------------------->
2019-07-22 18:08:19,048|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 18:08:19,048|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 18:08:19,048|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '"$20.53"' as ${value}
2019-07-22 18:08:19,048|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 38|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-22 18:08:19,052|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 38|base.save(var,value) - [repeat-until] PASS stored '20.53' as ${cost}
2019-07-22 18:08:19,056|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 18:08:19,056|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 20.53
2019-07-22 18:08:19,056|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 20.53
2019-07-22 18:08:19,056|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(${finalList}) => append($(array|item|${productList}|${counter}))])
2019-07-22 18:08:19,060|I|Thread-1|evaluating flow control:	SkipIf(20.53>20)		=> MATCHED
2019-07-22 18:08:19,060|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] SKIPPED current step skipped: SkipIf(${cost} > 20)
2019-07-22 18:08:19,060|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 18:08:19,060|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 4
2019-07-22 18:08:19,060|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #5 --------------------------------------------->
2019-07-22 18:08:19,060|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 18:08:19,060|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 35|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2019-07-22 18:08:19,661|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 42|base.verbose(text) - executing verbose(text)(${finalList})
2019-07-22 18:08:19,661|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 42|base.verbose(text) - abcd
2019-07-22 18:08:19,661|I|Thread-1|firstEvaluation.20190722_180802.001|JsonScenario|Activity 5|# 42|base.verbose(text) - PASS 
2019-07-22 18:08:19,861|I|Thread-1|[firstEvaluation.20190722_180802.001|JsonScenario] saving test scenario
2019-07-22 18:08:19,941|I|Thread-1|firstEvaluation.20190722_180802.001|XMLScenario - executing test scenario
2019-07-22 18:08:19,941|I|Thread-1|firstEvaluation.20190722_180802.001|XMLScenario|Activity 1 - executing activity
2019-07-22 18:08:20,547|I|Thread-1|firstEvaluation.20190722_180802.001|XMLScenario|Activity 1|#  5|xml.storeValues(xml,xpath - executing storeValues(xml,xpath,var)($(syspath|data|fullpath)/example_1.xml)
2019-07-22 18:08:20,551|E|Thread-1|firstEvaluation.20190722_180802.001|XMLScenario|Activity 1|#  5|xml.storeValues(xml,xpath - FAIL MISMATCHED parameters - xml.storeValues EXPECTS 3 but found 1
2019-07-22 18:08:20,567|I|Thread-1|[firstEvaluation.20190722_180802.001|XMLScenario] saving test scenario
2019-07-22 18:08:20,639|I|Thread-1|[20190722_180801] 
/-TEST COMPLETE-----------------------------------------------------------------
| Test Output:    C:\projects\firstEvaluation\output\20190722_180801\firstEvaluation.20190722_180802.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 17101 ms
» Test Steps:     27
» Error(s):       2



2019-07-22 18:08:22,638|I|Thread-1|[20190722_180801] 
/-TEST COMPLETE-----------------------------------------------------------------
| Test Script:    C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 21088 ms
» Iterations:     [1] total 1
» Test Steps:     27
» Passed:         25
» Error(s):       2
» Iteration 1 of 1: C:\projects\firstEvaluation\output\20190722_180801\firstEvaluation.20190722_180802.001.xlsx



2019-07-22 18:08:23,538|I|main|[20190722_180801] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] now completed
2019-07-22 18:08:23,538|I|main|[20190722_180801] all execution thread(s) have terminated
2019-07-22 18:08:23,538|I|main|[20190722_180801] test run completed in about 22 seconds
2019-07-22 18:08:23,606|I|main|No predefined nexial-setup found
2019-07-22 18:08:23,646|I|main|outputBase not set; output-to-cloud DISABLED!
2019-07-22 18:08:23,646|I|main|accessKey not set; output-to-cloud DISABLED!
2019-07-22 18:08:23,650|I|main|secretKey not set; output-to-cloud DISABLED!
2019-07-22 18:08:23,650|I|main|generating HTML output for this execution to C:\projects\firstEvaluation\output\20190722_180801\execution-output.html
2019-07-22 18:08:24,478|I|main|generating JUnit XML output for this execution to C:\projects\firstEvaluation\output\20190722_180801\junit.xml
2019-07-22 18:08:24,530|I|main|generated JUnit report for this execution: C:\projects\firstEvaluation\output\20190722_180801\junit.xml
2019-07-22 18:08:24,590|I|main|nexial mailer not enabled: nexial.enableEmail=false
2019-07-22 18:08:24,590|I|main|skipped email notification as configured
2019-07-22 18:08:24,590|I|main|exiting Nexial...
2019-07-22 18:08:24,594|I|main|

/-END OF EXECUTION--------------------------------------------------------------
| » Execution Time: 22 sec.
| » Test Steps....: 27
| » Passed........: 25
| » Failed........: 2
| » Success Rate..: 92.59%
\----------------------------------------------------------nexial-core dev_0581-

2019-07-22 18:08:24,594|E|main|failure found; success rate is 92.59%
2019-07-22 18:08:24,598|I|main|End of Execution:
NEXIAL_OUTPUT:         C:\projects\firstEvaluation\output\20190722_180801
NEXIAL_EXECUTION_HTML: C:\projects\firstEvaluation\output\20190722_180801\execution-output.html
NEXIAL_JUNIT_XML:      C:\projects\firstEvaluation\output\20190722_180801\junit.xml
NEXIAL_SUCCESS_RATE:   92.59%
NEXIAL_EXIT_STATUS:    -13
