2019-07-23 11:24:10,036|I|Thread-1|(DELAYED) nexial-core 2.4_0567 starting up...
2019-07-23 11:24:10,039|I|Thread-1|(DELAYED) data file resolved as C:\Users\DEEPAN~1.PAT\AppData\Local\Temp\izzMi\firstEvaluation.data.xlsx
2019-07-23 11:24:10,039|I|Thread-1|(DELAYED) input files and output directory resolved...
2019-07-23 11:24:10,039|I|Thread-1|(DELAYED) No predefined nexial-setup found
2019-07-23 11:24:10,040|I|Thread-1|(DELAYED) [20190723_112409] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] resolve RUN ID as 20190723_112409
2019-07-23 11:24:10,040|I|Thread-1|(DELAYED) [20190723_112409] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] new thread started
2019-07-23 11:24:10,040|I|Thread-1|No predefined nexial-setup found
2019-07-23 11:24:10,109|I|Thread-1|outputBase not set; output-to-cloud DISABLED!
2019-07-23 11:24:10,109|I|Thread-1|accessKey not set; output-to-cloud DISABLED!
2019-07-23 11:24:10,110|I|Thread-1|secretKey not set; output-to-cloud DISABLED!
2019-07-23 11:24:10,133|I|Thread-1|missing REQUIRED configuration; sms DISABLED!
2019-07-23 11:24:10,874|I|Thread-1|[20190723_112409] executing C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx with 1 iteration(s)
2019-07-23 11:24:10,878|I|Thread-1|[20190723_112409] create directory C:\projects\firstEvaluation\output\20190723_112409\captures
2019-07-23 11:24:10,879|I|Thread-1|[20190723_112409] create directory C:\projects\firstEvaluation\output\20190723_112409\logs
2019-07-23 11:24:11,676|I|Thread-1|[20190723_112409] merging test data to tmp file C:\projects\firstEvaluation\output\20190723_112409\firstEvaluation.20190723_112410.001.xlsx
2019-07-23 11:24:11,676|I|Thread-1|refetching data from C:\projects\firstEvaluation\artifact\data\firstEvaluation.data.xlsx
2019-07-23 11:24:11,966|I|Thread-1|[20190723_112409] test script and test data merged to C:\projects\firstEvaluation\output\20190723_112409\firstEvaluation.20190723_112410.001.xlsx
2019-07-23 11:24:12,589|I|Thread-1|STARTS
2019-07-23 11:24:12,624|I|Thread-1|firstEvaluation.20190723_112410.001 - executing iteration #1 of 1; Iteration Id 1
2019-07-23 11:24:12,633|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario - executing test scenario
2019-07-23 11:24:12,635|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 1 - executing activity
2019-07-23 11:24:13,240|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 1|#  5|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].product_name, productNames)
2019-07-23 11:24:13,344|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 1|#  5|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].product_name' stored to ${productNames}
2019-07-23 11:24:13,945|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 1|#  6|base.verbose(text) - executing verbose(text)(${productNames})
2019-07-23 11:24:13,952|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 1|#  6|base.verbose(text) - ["sildenafil citrate","Mountain Juniperus ashei"]
2019-07-23 11:24:14,157|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 1|#  6|base.verbose(text) - PASS 
2019-07-23 11:24:14,161|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2 - executing activity
2019-07-23 11:24:14,762|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|#  7|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].quantity, quantityList)
2019-07-23 11:24:14,780|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|#  7|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].quantity' stored to ${quantityList}
2019-07-23 11:24:15,389|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|#  8|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].unit_cost, costList)
2019-07-23 11:24:15,404|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|#  8|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].unit_cost' stored to ${costList}
2019-07-23 11:24:16,008|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|#  9|base.save(var,value) - executing save(var,value)(unit_costList, [LIST${costList} => replaceRegex([$],)])
2019-07-23 11:24:16,023|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|#  9|base.save(var,value) - PASS stored '[LIST["$10.47","$8.74"] => replaceRegex([$],)]' as ${unit_costList}
2019-07-23 11:24:16,628|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 10|base.verbose(text) - executing verbose(text)(${unit_costList})
2019-07-23 11:24:16,633|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 10|base.verbose(text) - [LIST["$10.47","$8.74"] => replaceRegex([$],)]
2019-07-23 11:24:16,642|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 10|base.verbose(text) - PASS 
2019-07-23 11:24:17,246|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 11|base.save(var,value) - executing save(var,value)(sumTotal, 0)
2019-07-23 11:24:17,252|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 11|base.save(var,value) - PASS stored '0' as ${sumTotal}
2019-07-23 11:24:17,856|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 12|base.save(var,value) - executing save(var,value)(counter, 0)
2019-07-23 11:24:17,862|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 12|base.save(var,value) - PASS stored '0' as ${counter}
2019-07-23 11:24:18,467|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 13|base.save(var,value) - executing save(var,value)(length, $(array|length|${quantityList}))
2019-07-23 11:24:18,482|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 13|base.save(var,value) - PASS stored '2' as ${length}
2019-07-23 11:24:19,086|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 14|base.save(var,value) - executing save(var,value)(mulValue, 0)
2019-07-23 11:24:19,093|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 14|base.save(var,value) - PASS stored '0' as ${mulValue}
2019-07-23 11:24:19,701|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 15|base.verbose(text) - executing verbose(text)(${unit_costList})
2019-07-23 11:24:19,706|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 15|base.verbose(text) - [LIST["$10.47","$8.74"] => replaceRegex([$],)]
2019-07-23 11:24:19,715|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 15|base.verbose(text) - PASS 
2019-07-23 11:24:20,319|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 16|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(6, -1)
2019-07-23 11:24:20,324|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #1 --------------------------------------------->
2019-07-23 11:24:20,329|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-23 11:24:20,338|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 18|base.save(var,value) - executing save(var,value)(unit_cost, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:24:20,344|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 18|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${unit_cost}
2019-07-23 11:24:20,351|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 19|base.save(var,value) - executing save(var,value)(quantity, $(array|item|${quantityList}|${counter}))
2019-07-23 11:24:20,358|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 19|base.save(var,value) - [repeat-until] PASS stored '261' as ${quantity}
2019-07-23 11:24:20,361|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 20|base.save(var,value) - executing save(var,value)(mulValue, [NUMBER(${unit_cost}) => multiply(${quantity})])
2019-07-23 11:24:20,384|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 20|base.save(var,value) - [repeat-until] PASS stored '2732.67' as ${mulValue}
2019-07-23 11:24:20,386|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 21|base.save(var,value) - executing save(var,value)(sumTotal, [NUMBER(${sumTotal}) => add(${mulValue})])
2019-07-23 11:24:20,388|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 21|base.save(var,value) - [repeat-until] PASS stored '2732.67' as ${sumTotal}
2019-07-23 11:24:20,390|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:24:20,393|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2019-07-23 11:24:20,396|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #2 --------------------------------------------->
2019-07-23 11:24:20,399|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-23 11:24:20,400|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 18|base.save(var,value) - executing save(var,value)(unit_cost, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:24:20,402|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 18|base.save(var,value) - [repeat-until] PASS stored '"$8.74"' as ${unit_cost}
2019-07-23 11:24:20,403|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 19|base.save(var,value) - executing save(var,value)(quantity, $(array|item|${quantityList}|${counter}))
2019-07-23 11:24:20,409|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 19|base.save(var,value) - [repeat-until] PASS stored '292' as ${quantity}
2019-07-23 11:24:20,411|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 20|base.save(var,value) - executing save(var,value)(mulValue, [NUMBER(${unit_cost}) => multiply(${quantity})])
2019-07-23 11:24:20,416|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 20|base.save(var,value) - [repeat-until] PASS stored '2552.08' as ${mulValue}
2019-07-23 11:24:20,418|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 21|base.save(var,value) - executing save(var,value)(sumTotal, [NUMBER(${sumTotal}) => add(${mulValue})])
2019-07-23 11:24:20,422|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 21|base.save(var,value) - [repeat-until] PASS stored '5284.75' as ${sumTotal}
2019-07-23 11:24:20,423|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:24:20,427|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2019-07-23 11:24:20,431|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #3 --------------------------------------------->
2019-07-23 11:24:20,433|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-23 11:24:20,437|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 16|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2019-07-23 11:24:21,038|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 23|base.verbose(text) - executing verbose(text)(${sumTotal})
2019-07-23 11:24:21,044|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 23|base.verbose(text) - 5284.75
2019-07-23 11:24:21,057|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 2|# 23|base.verbose(text) - PASS 
2019-07-23 11:24:21,071|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 3 - executing activity
2019-07-23 11:24:21,677|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 3|# 24|io.readFile(var,file) - executing readFile(var,file)(jsonFile, $(syspath|data|fullpath)/example_2.json)
2019-07-23 11:24:21,692|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 3|# 24|io.readFile(var,file) - PASS Content read from 'C:\projects\firstEvaluation\artifact\data\example_2.json' to ${jsonFile}
2019-07-23 11:24:22,296|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 3|# 25|base.save(var,value) - executing save(var,value)(var, [JSON(${jsonFile} => extract(products[unit_cost => ascending])])
2019-07-23 11:24:22,379|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 3|# 25|base.save(var,value) - PASS stored '[JSON({
	"products": 
		[{
  			"_id": {
 			   "orderid": "5968dd23fc13ae04d9000001"
  				},
  			"product_name": "sildenafil citrate",
  			"supplier": "Wisozk Inc",
  			"quantity": 261,
  			"unit_cost": "$10.47"
		}, 
		{
 			"_id": {
    			  "orderid": "5968dd23fc13ae04d9000002"
  				},
 			  "product_name": "Mountain Juniperus ashei",
  			  "supplier": "Wisozk Inc",
			  "quantity": 292,
			  "unit_cost": "$8.74"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000003"
				},
			    "product_name": "Dextromathorphan HBr",
			    "supplier": "Schmitt-Weissnat",
  		            "quantity": 211,
  			    "unit_cost": "$20.53"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000004"
 				 },
  			    "product_name": "Dextromathorphan HBr",
			    "supplier": "SC-Pharmacy",
			    "quantity": 211,
			    "unit_cost": "$20.53"
		}]
} => extract(products[unit_cost => ascending])]' as ${var}
2019-07-23 11:24:23,015|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 3|# 26|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)(${var}, products.product_name, result)
2019-07-23 11:24:23,026|E|Thread-1|Error converting string to JSON object: Expected a ',' or ']' at 7 [character 8 line 1]
org.json.JSONException: Expected a ',' or ']' at 7 [character 8 line 1]
	at org.json.JSONTokener.syntaxError(JSONTokener.java:505)
	at org.json.JSONArray.<init>(JSONArray.java:130)
	at org.json.JSONArray.<init>(JSONArray.java:147)
	at org.nexial.core.utils.JsonUtils.toJSONArray(JsonUtils.java:85)
	at org.nexial.core.plugins.json.JsonCommand.resolveToJSONObject(JsonCommand.java:318)
	at org.nexial.core.plugins.json.JsonCommand.toJSONObject(JsonCommand.java:441)
	at org.nexial.core.plugins.json.JsonCommand.sanityCheck(JsonCommand.java:445)
	at org.nexial.core.plugins.json.JsonCommand.find(JsonCommand.java:449)
	at org.nexial.core.plugins.json.JsonCommand.extractJsonValue(JsonCommand.java:384)
	at org.nexial.core.plugins.json.JsonCommand.storeValues(JsonCommand.java:123)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.nexial.core.plugins.base.BaseCommand.execute(BaseCommand.java:154)
	at org.nexial.core.model.TestStep.invokeCommand(TestStep.java:325)
	at org.nexial.core.model.TestStep.execute(TestStep.java:165)
	at org.nexial.core.model.TestCase.execute(TestCase.java:94)
	at org.nexial.core.model.TestScenario.execute(TestScenario.java:130)
	at org.nexial.core.model.ExecutionContext.execute(ExecutionContext.java:1176)
	at org.nexial.core.ExecutionThread.run(ExecutionThread.java:174)
2019-07-23 11:24:23,081|E|Thread-1|JSON string in error is as follows:
[JSON({
	"products": 
		[{
  			"_id": {
 			   "orderid": "5968dd23fc13ae04d9000001"
  				},
  			"product_name": "sildenafil citrate",
  			"supplier": "Wisozk Inc",
  			"quantity": 261,
  			"unit_cost": "$10.47"
		}, 
		{
 			"_id": {
    			  "orderid": "5968dd23fc13ae04d9000002"
  				},
 			  "product_name": "Mountain Juniperus ashei",
  			  "supplier": "Wisozk Inc",
			  "quantity": 292,
			  "unit_cost": "$8.74"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000003"
				},
			    "product_name": "Dextromathorphan HBr",
			    "supplier": "Schmitt-Weissnat",
  		            "quantity": 211,
  			    "unit_cost": "$20.53"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000004"
 				 },
  			    "product_name": "Dextromathorphan HBr",
			    "supplier": "SC-Pharmacy",
			    "quantity": 211,
			    "unit_cost": "$20.53"
		}]
} => extract(products[unit_cost => ascending])]
2019-07-23 11:24:23,177|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 3|# 26|json.storeValues(json,jso - FAIL invalid/malformed json: {[JSON({
	"products": 
		[{
  			"_id": {
 			   "orderid": "5968dd23fc13ae04d9000001"
  				},
  			"product_name": "sildenafil citrate",
  			"supplier": "Wisozk Inc",
  			"quantity": 261,
  			"unit_cost": "$10.47"
		}, 
		{
 			"_id": {
    			  "orderid": "5968dd23fc13ae04d9000002"
  				},
 			  "product_name": "Mountain Juniperus ashei",
  			  "supplier": "Wisozk Inc",
			  "quantity": 292,
			  "unit_cost": "$8.74"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000003"
				},
			    "product_name": "Dextromathorphan HBr",
			    "supplier": "Schmitt-Weissnat",
  		            "quantity": 211,
  			    "unit_cost": "$20.53"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000004"
 				 },
  			    "product_name": "Dextromathorphan HBr",
			    "supplier": "SC-Pharmacy",
			    "quantity": 211,
			    "unit_cost": "$20.53"
		}]
} => extract(products[unit_cost => ascending])]}
2019-07-23 11:24:23,810|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 3|# 27|base.verbose(text) - executing verbose(text)(${result})
2019-07-23 11:24:23,814|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 3|# 27|base.verbose(text) - 
2019-07-23 11:24:23,822|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 3|# 27|base.verbose(text) - PASS 
2019-07-23 11:24:23,827|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 4 - executing activity
2019-07-23 11:24:24,430|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 4|# 28|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[product_name=Dextromathorphan HBr].supplier, supplierList)
2019-07-23 11:24:24,443|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 4|# 28|json.storeValues(json,jso - PASS EXPECTED match against 'products[product_name=Dextromathorphan HBr].supplier' stored to ${supplierList}
2019-07-23 11:24:25,049|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 4|# 29|base.verbose(text) - executing verbose(text)(${supplierList})
2019-07-23 11:24:25,053|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 4|# 29|base.verbose(text) - ["Schmitt-Weissnat","SC-Pharmacy"]
2019-07-23 11:24:25,061|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 4|# 29|base.verbose(text) - PASS 
2019-07-23 11:24:25,066|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5 - executing activity
2019-07-23 11:24:25,673|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 30|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products.product_name, productList)
2019-07-23 11:24:25,718|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 30|json.storeValues(json,jso - PASS EXPECTED match against 'products.product_name' stored to ${productList}
2019-07-23 11:24:26,320|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 31|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products.unit_cost, costList)
2019-07-23 11:24:26,332|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 31|json.storeValues(json,jso - PASS EXPECTED match against 'products.unit_cost' stored to ${costList}
2019-07-23 11:24:26,961|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 32|base.save(var,value) - executing save(var,value)(unit_costList, [LIST${costList} => replaceRegex([$],)])
2019-07-23 11:24:26,969|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 32|base.save(var,value) - PASS stored '[LIST["$10.47","$8.74","$20.53","$20.53"] => replaceRegex([$],)]' as ${unit_costList}
2019-07-23 11:24:27,577|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 33|base.save(var,value) - executing save(var,value)(counter, 0)
2019-07-23 11:24:27,582|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 33|base.save(var,value) - PASS stored '0' as ${counter}
2019-07-23 11:24:28,186|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 34|base.save(var,value) - executing save(var,value)(finalList, abcd)
2019-07-23 11:24:28,193|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 34|base.save(var,value) - PASS stored 'abcd' as ${finalList}
2019-07-23 11:24:28,796|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 35|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(6, -1)
2019-07-23 11:24:28,800|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #1 --------------------------------------------->
2019-07-23 11:24:28,805|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-23 11:24:28,813|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:24:28,818|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-23 11:24:28,825|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 38|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-23 11:24:28,843|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 38|base.save(var,value) - [repeat-until] PASS stored '10.47' as ${cost}
2019-07-23 11:24:28,848|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-23 11:24:28,850|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 10.47
2019-07-23 11:24:28,853|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 10.47
2019-07-23 11:24:28,855|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-23 11:24:28,859|I|Thread-1|evaluating flow control:	SkipIf(10.47>20)		=> NOT MATCHED
2019-07-23 11:24:28,868|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 40|base.verbose(text) - finalList,"sildenafil citrate"
2019-07-23 11:24:28,870|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] PASS finalList,"sildenafil citrate"
2019-07-23 11:24:28,873|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:24:28,876|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2019-07-23 11:24:28,877|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #2 --------------------------------------------->
2019-07-23 11:24:28,880|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-23 11:24:28,881|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:24:28,884|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '"$8.74"' as ${value}
2019-07-23 11:24:28,885|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 38|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-23 11:24:28,886|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 38|base.save(var,value) - [repeat-until] PASS stored '8.74' as ${cost}
2019-07-23 11:24:28,887|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-23 11:24:28,887|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 8.74
2019-07-23 11:24:28,892|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 8.74
2019-07-23 11:24:28,893|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-23 11:24:28,894|I|Thread-1|evaluating flow control:	SkipIf(8.74>20)		=> NOT MATCHED
2019-07-23 11:24:28,895|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 40|base.verbose(text) - finalList,"Mountain Juniperus ashei"
2019-07-23 11:24:28,896|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] PASS finalList,"Mountain Juniperus ashei"
2019-07-23 11:24:28,907|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:24:28,910|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2019-07-23 11:24:28,911|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #3 --------------------------------------------->
2019-07-23 11:24:28,912|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-23 11:24:28,914|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:24:28,919|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '"$20.53"' as ${value}
2019-07-23 11:24:28,920|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 38|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-23 11:24:28,921|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 38|base.save(var,value) - [repeat-until] PASS stored '20.53' as ${cost}
2019-07-23 11:24:28,922|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-23 11:24:28,923|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 20.53
2019-07-23 11:24:28,929|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 20.53
2019-07-23 11:24:28,930|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-23 11:24:28,931|I|Thread-1|evaluating flow control:	SkipIf(20.53>20)		=> MATCHED
2019-07-23 11:24:28,932|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 40|base.verbose(text) - skipped due to flow control SkipIf(${cost} > 20)
2019-07-23 11:24:28,933|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] SKIPPED current step skipped: SkipIf(${cost} > 20)
2019-07-23 11:24:28,936|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:24:28,939|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 3
2019-07-23 11:24:28,940|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #4 --------------------------------------------->
2019-07-23 11:24:28,941|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-23 11:24:28,942|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:24:28,944|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '"$20.53"' as ${value}
2019-07-23 11:24:28,948|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 38|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-23 11:24:28,949|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 38|base.save(var,value) - [repeat-until] PASS stored '20.53' as ${cost}
2019-07-23 11:24:28,950|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-23 11:24:28,951|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 20.53
2019-07-23 11:24:28,952|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 20.53
2019-07-23 11:24:28,953|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-23 11:24:28,955|I|Thread-1|evaluating flow control:	SkipIf(20.53>20)		=> MATCHED
2019-07-23 11:24:28,955|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 40|base.verbose(text) - skipped due to flow control SkipIf(${cost} > 20)
2019-07-23 11:24:28,958|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] SKIPPED current step skipped: SkipIf(${cost} > 20)
2019-07-23 11:24:28,959|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:24:28,961|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 4
2019-07-23 11:24:28,962|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #5 --------------------------------------------->
2019-07-23 11:24:28,963|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-23 11:24:28,965|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 35|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2019-07-23 11:24:29,568|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 42|base.verbose(text) - executing verbose(text)(${finalList})
2019-07-23 11:24:29,572|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 42|base.verbose(text) - abcd
2019-07-23 11:24:29,581|I|Thread-1|firstEvaluation.20190723_112410.001|JsonScenario|Activity 5|# 42|base.verbose(text) - PASS 
2019-07-23 11:24:30,189|I|Thread-1|[firstEvaluation.20190723_112410.001|JsonScenario] saving test scenario
2019-07-23 11:24:30,299|I|Thread-1|firstEvaluation.20190723_112410.001|XMLScenario - executing test scenario
2019-07-23 11:24:30,299|I|Thread-1|firstEvaluation.20190723_112410.001|XMLScenario|Activity 1 - executing activity
2019-07-23 11:24:30,905|I|Thread-1|firstEvaluation.20190723_112410.001|XMLScenario|Activity 1|#  5|io.readFile(var,file) - executing readFile(var,file)(xmlFile, $(syspath|data|fullpath)/example_1.xml)
2019-07-23 11:24:30,905|I|Thread-1|firstEvaluation.20190723_112410.001|XMLScenario|Activity 1|#  5|io.readFile(var,file) - PASS Content read from 'C:\projects\firstEvaluation\artifact\data\example_1.xml' to ${xmlFile}
2019-07-23 11:24:31,530|I|Thread-1|firstEvaluation.20190723_112410.001|XMLScenario|Activity 1|#  6|xml.storeValues(xml,xpath - executing storeValues(xml,xpath,var)($(syspath|data|fullpath)/example_1.xml, /catalog/book[publish_date[starts-with(.,"2000-12-")] and ./title/text()]/title, bookList)
2019-07-23 11:24:31,624|I|Thread-1|firstEvaluation.20190723_112410.001|XMLScenario|Activity 1|#  6|xml.storeValues(xml,xpath - PASS XML matches saved to 'bookList'
2019-07-23 11:24:32,224|I|Thread-1|firstEvaluation.20190723_112410.001|XMLScenario|Activity 1|#  7|base.verbose(text) - executing verbose(text)(${bookList})
2019-07-23 11:24:32,227|I|Thread-1|firstEvaluation.20190723_112410.001|XMLScenario|Activity 1|#  7|base.verbose(text) - Midnight Rain,Creepy Crawlies,Microsoft .NET: The Programming Bible,MSXML3: A Comprehensive Guide
2019-07-23 11:24:32,239|I|Thread-1|firstEvaluation.20190723_112410.001|XMLScenario|Activity 1|#  7|base.verbose(text) - PASS 
2019-07-23 11:24:32,243|I|Thread-1|firstEvaluation.20190723_112410.001|XMLScenario|Activity 2 - executing activity
2019-07-23 11:24:32,846|I|Thread-1|firstEvaluation.20190723_112410.001|XMLScenario|Activity 2|#  8|xml.storeValue(xml,xpath, - executing storeValue(xml,xpath,var)($(syspath|data|fullpath)/example_1.xml, sum(/catalog/book[*]/price), totalPrice)
2019-07-23 11:24:32,871|I|Thread-1|firstEvaluation.20190723_112410.001|XMLScenario|Activity 2|#  8|xml.storeValue(xml,xpath, - PASS XML matches saved to 'totalPrice'
2019-07-23 11:24:33,477|I|Thread-1|firstEvaluation.20190723_112410.001|XMLScenario|Activity 2|#  9|base.verbose(text) - executing verbose(text)(${totalPrice})
2019-07-23 11:24:33,481|I|Thread-1|firstEvaluation.20190723_112410.001|XMLScenario|Activity 2|#  9|base.verbose(text) - 214.40000000000003
2019-07-23 11:24:33,490|I|Thread-1|firstEvaluation.20190723_112410.001|XMLScenario|Activity 2|#  9|base.verbose(text) - PASS 
2019-07-23 11:24:33,496|I|Thread-1|firstEvaluation.20190723_112410.001|XMLScenario|Activity 4 - executing activity
2019-07-23 11:24:34,102|I|Thread-1|firstEvaluation.20190723_112410.001|XMLScenario|Activity 4|# 10|xml.storeValues(xml,xpath - executing storeValues(xml,xpath,var)($(syspath|data|fullpath)/example_1.xml, /catalog/book[genre="Computer"]/title|/catalog/book[genre="Computer"]/author, list)
2019-07-23 11:24:34,132|I|Thread-1|firstEvaluation.20190723_112410.001|XMLScenario|Activity 4|# 10|xml.storeValues(xml,xpath - PASS XML matches saved to 'list'
2019-07-23 11:24:34,735|I|Thread-1|firstEvaluation.20190723_112410.001|XMLScenario|Activity 4|# 11|base.verbose(text) - executing verbose(text)(${list})
2019-07-23 11:24:34,739|I|Thread-1|firstEvaluation.20190723_112410.001|XMLScenario|Activity 4|# 11|base.verbose(text) - Gambardella, Matthew,XML Developer's Guide,O'Brien, Tim,Microsoft .NET: The Programming Bible,O'Brien, Tim,MSXML3: A Comprehensive Guide,Galos, Mike,Visual Studio 7: A Comprehensive Guide
2019-07-23 11:24:34,748|I|Thread-1|firstEvaluation.20190723_112410.001|XMLScenario|Activity 4|# 11|base.verbose(text) - PASS 
2019-07-23 11:24:34,893|I|Thread-1|[firstEvaluation.20190723_112410.001|XMLScenario] saving test scenario
2019-07-23 11:24:34,975|I|Thread-1|[20190723_112409] 
/-TEST COMPLETE-----------------------------------------------------------------
| Test Output:    C:\projects\firstEvaluation\output\20190723_112409\firstEvaluation.20190723_112410.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 22343 ms
» Test Steps:     33
» Error(s):       1



2019-07-23 11:24:37,666|I|Thread-1|[20190723_112409] 
/-TEST COMPLETE-----------------------------------------------------------------
| Test Script:    C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 27802 ms
» Iterations:     [1] total 1
» Test Steps:     33
» Passed:         32
» Error(s):       1
» Iteration 1 of 1: C:\projects\firstEvaluation\output\20190723_112409\firstEvaluation.20190723_112410.001.xlsx



2019-07-23 11:24:37,829|I|main|[20190723_112409] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] now completed
2019-07-23 11:24:37,832|I|main|[20190723_112409] all execution thread(s) have terminated
2019-07-23 11:24:37,834|I|main|[20190723_112409] test run completed in about 28 seconds
2019-07-23 11:24:37,932|I|main|No predefined nexial-setup found
2019-07-23 11:24:37,963|I|main|outputBase not set; output-to-cloud DISABLED!
2019-07-23 11:24:37,963|I|main|accessKey not set; output-to-cloud DISABLED!
2019-07-23 11:24:37,964|I|main|secretKey not set; output-to-cloud DISABLED!
2019-07-23 11:24:37,964|I|main|generating HTML output for this execution to C:\projects\firstEvaluation\output\20190723_112409\execution-output.html
2019-07-23 11:24:38,717|I|main|generating JUnit XML output for this execution to C:\projects\firstEvaluation\output\20190723_112409\junit.xml
2019-07-23 11:24:38,751|I|main|generated JUnit report for this execution: C:\projects\firstEvaluation\output\20190723_112409\junit.xml
2019-07-23 11:24:38,755|I|main|nexial mailer not enabled: nexial.enableEmail=false
2019-07-23 11:24:38,759|I|main|skipped email notification as configured
2019-07-23 11:24:38,765|I|main|exiting Nexial...
2019-07-23 11:24:38,768|I|main|

/-END OF EXECUTION--------------------------------------------------------------
| » Execution Time: 28 sec.
| » Test Steps....: 33
| » Passed........: 32
| » Failed........: 1
| » Success Rate..: 96.97%
\----------------------------------------------------------nexial-core 2.4_0567-

2019-07-23 11:24:38,771|E|main|failure found; success rate is 96.97%
2019-07-23 11:24:38,774|I|main|End of Execution:
NEXIAL_OUTPUT:         C:\projects\firstEvaluation\output\20190723_112409
NEXIAL_EXECUTION_HTML: C:\projects\firstEvaluation\output\20190723_112409\execution-output.html
NEXIAL_JUNIT_XML:      C:\projects\firstEvaluation\output\20190723_112409\junit.xml
NEXIAL_SUCCESS_RATE:   96.97%
NEXIAL_EXIT_STATUS:    -13
