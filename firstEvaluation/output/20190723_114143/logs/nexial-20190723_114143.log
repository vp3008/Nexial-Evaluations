2019-07-23 11:41:43,977|I|Thread-1|(DELAYED) nexial-core 2.4_0567 starting up...
2019-07-23 11:41:43,977|I|Thread-1|(DELAYED) data file resolved as C:\Users\DEEPAN~1.PAT\AppData\Local\Temp\xnUzz\firstEvaluation.data.xlsx
2019-07-23 11:41:43,977|I|Thread-1|(DELAYED) input files and output directory resolved...
2019-07-23 11:41:43,977|I|Thread-1|(DELAYED) No predefined nexial-setup found
2019-07-23 11:41:43,977|I|Thread-1|(DELAYED) [20190723_114143] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] resolve RUN ID as 20190723_114143
2019-07-23 11:41:43,977|I|Thread-1|(DELAYED) [20190723_114143] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] new thread started
2019-07-23 11:41:43,977|I|Thread-1|No predefined nexial-setup found
2019-07-23 11:41:44,055|I|Thread-1|outputBase not set; output-to-cloud DISABLED!
2019-07-23 11:41:44,055|I|Thread-1|accessKey not set; output-to-cloud DISABLED!
2019-07-23 11:41:44,055|I|Thread-1|secretKey not set; output-to-cloud DISABLED!
2019-07-23 11:41:44,086|I|Thread-1|missing REQUIRED configuration; sms DISABLED!
2019-07-23 11:41:44,867|I|Thread-1|[20190723_114143] executing C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx with 1 iteration(s)
2019-07-23 11:41:44,867|I|Thread-1|[20190723_114143] create directory C:\projects\firstEvaluation\output\20190723_114143\captures
2019-07-23 11:41:44,867|I|Thread-1|[20190723_114143] create directory C:\projects\firstEvaluation\output\20190723_114143\logs
2019-07-23 11:41:45,695|I|Thread-1|[20190723_114143] merging test data to tmp file C:\projects\firstEvaluation\output\20190723_114143\firstEvaluation.20190723_114144.001.xlsx
2019-07-23 11:41:45,695|I|Thread-1|refetching data from C:\projects\firstEvaluation\artifact\data\firstEvaluation.data.xlsx
2019-07-23 11:41:46,008|I|Thread-1|[20190723_114143] test script and test data merged to C:\projects\firstEvaluation\output\20190723_114143\firstEvaluation.20190723_114144.001.xlsx
2019-07-23 11:41:46,680|I|Thread-1|STARTS
2019-07-23 11:41:46,721|I|Thread-1|firstEvaluation.20190723_114144.001 - executing iteration #1 of 1; Iteration Id 1
2019-07-23 11:41:46,721|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario - executing test scenario
2019-07-23 11:41:46,721|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 1 - executing activity
2019-07-23 11:41:47,346|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 1|#  5|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].product_name, productNames)
2019-07-23 11:41:47,409|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 1|#  5|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].product_name' stored to ${productNames}
2019-07-23 11:41:48,009|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 1|#  6|base.verbose(text) - executing verbose(text)(${productNames})
2019-07-23 11:41:48,015|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 1|#  6|base.verbose(text) - ["sildenafil citrate","Mountain Juniperus ashei"]
2019-07-23 11:41:48,178|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 1|#  6|base.verbose(text) - PASS 
2019-07-23 11:41:48,181|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2 - executing activity
2019-07-23 11:41:48,783|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|#  7|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].quantity, quantityList)
2019-07-23 11:41:48,801|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|#  7|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].quantity' stored to ${quantityList}
2019-07-23 11:41:49,406|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|#  8|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].unit_cost, costList)
2019-07-23 11:41:49,424|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|#  8|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].unit_cost' stored to ${costList}
2019-07-23 11:41:50,033|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|#  9|base.save(var,value) - executing save(var,value)(unit_costList, [LIST${costList} => replaceRegex([$],)])
2019-07-23 11:41:50,055|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|#  9|base.save(var,value) - PASS stored '[LIST["$10.47","$8.74"] => replaceRegex([$],)]' as ${unit_costList}
2019-07-23 11:41:50,660|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 10|base.verbose(text) - executing verbose(text)(${unit_costList})
2019-07-23 11:41:50,663|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 10|base.verbose(text) - [LIST["$10.47","$8.74"] => replaceRegex([$],)]
2019-07-23 11:41:50,672|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 10|base.verbose(text) - PASS 
2019-07-23 11:41:51,274|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 11|base.save(var,value) - executing save(var,value)(sumTotal, 0)
2019-07-23 11:41:51,281|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 11|base.save(var,value) - PASS stored '0' as ${sumTotal}
2019-07-23 11:41:51,884|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 12|base.save(var,value) - executing save(var,value)(counter, 0)
2019-07-23 11:41:51,890|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 12|base.save(var,value) - PASS stored '0' as ${counter}
2019-07-23 11:41:52,493|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 13|base.save(var,value) - executing save(var,value)(length, $(array|length|${quantityList}))
2019-07-23 11:41:52,532|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 13|base.save(var,value) - PASS stored '2' as ${length}
2019-07-23 11:41:53,135|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 14|base.save(var,value) - executing save(var,value)(mulValue, 0)
2019-07-23 11:41:53,145|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 14|base.save(var,value) - PASS stored '0' as ${mulValue}
2019-07-23 11:41:53,751|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 15|base.verbose(text) - executing verbose(text)(${unit_costList})
2019-07-23 11:41:53,756|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 15|base.verbose(text) - [LIST["$10.47","$8.74"] => replaceRegex([$],)]
2019-07-23 11:41:53,766|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 15|base.verbose(text) - PASS 
2019-07-23 11:41:54,370|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 16|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(6, -1)
2019-07-23 11:41:54,374|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #1 --------------------------------------------->
2019-07-23 11:41:54,382|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-23 11:41:54,389|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 18|base.save(var,value) - executing save(var,value)(unit_cost, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:41:54,398|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 18|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${unit_cost}
2019-07-23 11:41:54,402|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 19|base.save(var,value) - executing save(var,value)(quantity, $(array|item|${quantityList}|${counter}))
2019-07-23 11:41:54,411|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 19|base.save(var,value) - [repeat-until] PASS stored '261' as ${quantity}
2019-07-23 11:41:54,414|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 20|base.save(var,value) - executing save(var,value)(mulValue, [NUMBER(${unit_cost}) => multiply(${quantity})])
2019-07-23 11:41:54,439|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 20|base.save(var,value) - [repeat-until] PASS stored '2732.67' as ${mulValue}
2019-07-23 11:41:54,441|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 21|base.save(var,value) - executing save(var,value)(sumTotal, [NUMBER(${sumTotal}) => add(${mulValue})])
2019-07-23 11:41:54,443|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 21|base.save(var,value) - [repeat-until] PASS stored '2732.67' as ${sumTotal}
2019-07-23 11:41:54,444|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:41:54,447|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2019-07-23 11:41:54,448|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #2 --------------------------------------------->
2019-07-23 11:41:54,451|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-23 11:41:54,454|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 18|base.save(var,value) - executing save(var,value)(unit_cost, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:41:54,456|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 18|base.save(var,value) - [repeat-until] PASS stored '"$8.74"' as ${unit_cost}
2019-07-23 11:41:54,457|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 19|base.save(var,value) - executing save(var,value)(quantity, $(array|item|${quantityList}|${counter}))
2019-07-23 11:41:54,459|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 19|base.save(var,value) - [repeat-until] PASS stored '292' as ${quantity}
2019-07-23 11:41:54,462|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 20|base.save(var,value) - executing save(var,value)(mulValue, [NUMBER(${unit_cost}) => multiply(${quantity})])
2019-07-23 11:41:54,466|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 20|base.save(var,value) - [repeat-until] PASS stored '2552.08' as ${mulValue}
2019-07-23 11:41:54,468|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 21|base.save(var,value) - executing save(var,value)(sumTotal, [NUMBER(${sumTotal}) => add(${mulValue})])
2019-07-23 11:41:54,472|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 21|base.save(var,value) - [repeat-until] PASS stored '5284.75' as ${sumTotal}
2019-07-23 11:41:54,474|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:41:54,477|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2019-07-23 11:41:54,479|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #3 --------------------------------------------->
2019-07-23 11:41:54,485|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-23 11:41:54,487|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 16|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2019-07-23 11:41:55,089|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 23|base.verbose(text) - executing verbose(text)(${sumTotal})
2019-07-23 11:41:55,095|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 23|base.verbose(text) - 5284.75
2019-07-23 11:41:55,106|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 2|# 23|base.verbose(text) - PASS 
2019-07-23 11:41:55,116|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 4 - executing activity
2019-07-23 11:41:55,720|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 4|# 24|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[product_name=Dextromathorphan HBr].supplier, supplierList)
2019-07-23 11:41:55,740|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 4|# 24|json.storeValues(json,jso - PASS EXPECTED match against 'products[product_name=Dextromathorphan HBr].supplier' stored to ${supplierList}
2019-07-23 11:41:56,347|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 4|# 25|base.verbose(text) - executing verbose(text)(${supplierList})
2019-07-23 11:41:56,351|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 4|# 25|base.verbose(text) - ["Schmitt-Weissnat","SC-Pharmacy"]
2019-07-23 11:41:56,360|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 4|# 25|base.verbose(text) - PASS 
2019-07-23 11:41:56,364|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5 - executing activity
2019-07-23 11:41:56,967|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 26|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products.product_name, productList)
2019-07-23 11:41:57,025|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 26|json.storeValues(json,jso - PASS EXPECTED match against 'products.product_name' stored to ${productList}
2019-07-23 11:41:57,626|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 27|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products.unit_cost, costList)
2019-07-23 11:41:57,637|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 27|json.storeValues(json,jso - PASS EXPECTED match against 'products.unit_cost' stored to ${costList}
2019-07-23 11:41:58,245|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 28|base.save(var,value) - executing save(var,value)(unit_costList, [LIST${costList} => replaceRegex([$],)])
2019-07-23 11:41:58,256|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 28|base.save(var,value) - PASS stored '[LIST["$10.47","$8.74","$20.53","$20.53"] => replaceRegex([$],)]' as ${unit_costList}
2019-07-23 11:41:58,863|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 29|base.save(var,value) - executing save(var,value)(counter, 0)
2019-07-23 11:41:58,869|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 29|base.save(var,value) - PASS stored '0' as ${counter}
2019-07-23 11:41:59,473|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 30|base.save(var,value) - executing save(var,value)(finalList, abcd)
2019-07-23 11:41:59,479|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 30|base.save(var,value) - PASS stored 'abcd' as ${finalList}
2019-07-23 11:42:00,086|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 31|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(6, -1)
2019-07-23 11:42:00,090|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - 
<[repeat-until] entering loop #1 --------------------------------------------->
2019-07-23 11:42:00,094|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-23 11:42:00,102|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 33|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:42:00,107|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 33|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-23 11:42:00,113|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 34|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-23 11:42:00,137|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 34|base.save(var,value) - [repeat-until] PASS stored '10.47' as ${cost}
2019-07-23 11:42:00,141|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 35|base.verbose(text) - executing verbose(text)(${cost})
2019-07-23 11:42:00,143|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 35|base.verbose(text) - 10.47
2019-07-23 11:42:00,144|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 35|base.verbose(text) - [repeat-until] PASS 10.47
2019-07-23 11:42:00,145|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 36|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-23 11:42:00,153|I|Thread-1|evaluating flow control:	SkipIf(10.47>20)		=> NOT MATCHED
2019-07-23 11:42:00,161|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 36|base.verbose(text) - finalList,"sildenafil citrate"
2019-07-23 11:42:00,163|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 36|base.verbose(text) - [repeat-until] PASS finalList,"sildenafil citrate"
2019-07-23 11:42:00,165|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:42:00,167|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2019-07-23 11:42:00,169|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - 
<[repeat-until] entering loop #2 --------------------------------------------->
2019-07-23 11:42:00,173|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-23 11:42:00,174|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 33|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:42:00,175|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 33|base.save(var,value) - [repeat-until] PASS stored '"$8.74"' as ${value}
2019-07-23 11:42:00,176|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 34|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-23 11:42:00,177|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 34|base.save(var,value) - [repeat-until] PASS stored '8.74' as ${cost}
2019-07-23 11:42:00,180|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 35|base.verbose(text) - executing verbose(text)(${cost})
2019-07-23 11:42:00,182|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 35|base.verbose(text) - 8.74
2019-07-23 11:42:00,183|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 35|base.verbose(text) - [repeat-until] PASS 8.74
2019-07-23 11:42:00,184|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 36|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-23 11:42:00,185|I|Thread-1|evaluating flow control:	SkipIf(8.74>20)		=> NOT MATCHED
2019-07-23 11:42:00,186|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 36|base.verbose(text) - finalList,"Mountain Juniperus ashei"
2019-07-23 11:42:00,187|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 36|base.verbose(text) - [repeat-until] PASS finalList,"Mountain Juniperus ashei"
2019-07-23 11:42:00,189|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:42:00,192|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2019-07-23 11:42:00,193|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - 
<[repeat-until] entering loop #3 --------------------------------------------->
2019-07-23 11:42:00,194|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-23 11:42:00,195|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 33|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:42:00,196|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 33|base.save(var,value) - [repeat-until] PASS stored '"$20.53"' as ${value}
2019-07-23 11:42:00,197|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 34|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-23 11:42:00,202|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 34|base.save(var,value) - [repeat-until] PASS stored '20.53' as ${cost}
2019-07-23 11:42:00,203|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 35|base.verbose(text) - executing verbose(text)(${cost})
2019-07-23 11:42:00,203|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 35|base.verbose(text) - 20.53
2019-07-23 11:42:00,204|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 35|base.verbose(text) - [repeat-until] PASS 20.53
2019-07-23 11:42:00,205|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 36|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-23 11:42:00,206|I|Thread-1|evaluating flow control:	SkipIf(20.53>20)		=> MATCHED
2019-07-23 11:42:00,207|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 36|base.verbose(text) - skipped due to flow control SkipIf(${cost} > 20)
2019-07-23 11:42:00,208|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 36|base.verbose(text) - [repeat-until] SKIPPED current step skipped: SkipIf(${cost} > 20)
2019-07-23 11:42:00,209|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:42:00,212|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 3
2019-07-23 11:42:00,214|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - 
<[repeat-until] entering loop #4 --------------------------------------------->
2019-07-23 11:42:00,215|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-23 11:42:00,217|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 33|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:42:00,218|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 33|base.save(var,value) - [repeat-until] PASS stored '"$20.53"' as ${value}
2019-07-23 11:42:00,220|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 34|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-23 11:42:00,225|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 34|base.save(var,value) - [repeat-until] PASS stored '20.53' as ${cost}
2019-07-23 11:42:00,226|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 35|base.verbose(text) - executing verbose(text)(${cost})
2019-07-23 11:42:00,234|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 35|base.verbose(text) - 20.53
2019-07-23 11:42:00,235|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 35|base.verbose(text) - [repeat-until] PASS 20.53
2019-07-23 11:42:00,236|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 36|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-23 11:42:00,237|I|Thread-1|evaluating flow control:	SkipIf(20.53>20)		=> MATCHED
2019-07-23 11:42:00,237|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 36|base.verbose(text) - skipped due to flow control SkipIf(${cost} > 20)
2019-07-23 11:42:00,238|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 36|base.verbose(text) - [repeat-until] SKIPPED current step skipped: SkipIf(${cost} > 20)
2019-07-23 11:42:00,241|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:42:00,244|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 4
2019-07-23 11:42:00,245|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - 
<[repeat-until] entering loop #5 --------------------------------------------->
2019-07-23 11:42:00,246|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-23 11:42:00,248|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 31|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2019-07-23 11:42:00,851|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${finalList})
2019-07-23 11:42:00,855|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 38|base.verbose(text) - abcd
2019-07-23 11:42:00,863|I|Thread-1|firstEvaluation.20190723_114144.001|JsonScenario|Activity 5|# 38|base.verbose(text) - PASS 
2019-07-23 11:42:01,435|I|Thread-1|[firstEvaluation.20190723_114144.001|JsonScenario] saving test scenario
2019-07-23 11:42:01,567|I|Thread-1|firstEvaluation.20190723_114144.001|XMLScenario - executing test scenario
2019-07-23 11:42:01,569|I|Thread-1|firstEvaluation.20190723_114144.001|XMLScenario|Activity 1 - executing activity
2019-07-23 11:42:02,186|I|Thread-1|firstEvaluation.20190723_114144.001|XMLScenario|Activity 1|#  5|io.readFile(var,file) - executing readFile(var,file)(xmlFile, $(syspath|data|fullpath)/example_1.xml)
2019-07-23 11:42:02,186|I|Thread-1|firstEvaluation.20190723_114144.001|XMLScenario|Activity 1|#  5|io.readFile(var,file) - PASS Content read from 'C:\projects\firstEvaluation\artifact\data\example_1.xml' to ${xmlFile}
2019-07-23 11:42:02,796|I|Thread-1|firstEvaluation.20190723_114144.001|XMLScenario|Activity 1|#  6|xml.storeValues(xml,xpath - executing storeValues(xml,xpath,var)($(syspath|data|fullpath)/example_1.xml, /catalog/book[publish_date[starts-with(.,"2000-12-")] and ./title/text()]/title, bookList)
2019-07-23 11:42:02,921|I|Thread-1|firstEvaluation.20190723_114144.001|XMLScenario|Activity 1|#  6|xml.storeValues(xml,xpath - PASS XML matches saved to 'bookList'
2019-07-23 11:42:03,530|I|Thread-1|firstEvaluation.20190723_114144.001|XMLScenario|Activity 1|#  7|base.verbose(text) - executing verbose(text)(${bookList})
2019-07-23 11:42:03,530|I|Thread-1|firstEvaluation.20190723_114144.001|XMLScenario|Activity 1|#  7|base.verbose(text) - Midnight Rain,Creepy Crawlies,Microsoft .NET: The Programming Bible,MSXML3: A Comprehensive Guide
2019-07-23 11:42:03,530|I|Thread-1|firstEvaluation.20190723_114144.001|XMLScenario|Activity 1|#  7|base.verbose(text) - PASS 
2019-07-23 11:42:03,546|I|Thread-1|firstEvaluation.20190723_114144.001|XMLScenario|Activity 2 - executing activity
2019-07-23 11:42:04,146|I|Thread-1|firstEvaluation.20190723_114144.001|XMLScenario|Activity 2|#  8|xml.storeValue(xml,xpath, - executing storeValue(xml,xpath,var)($(syspath|data|fullpath)/example_1.xml, sum(/catalog/book[*]/price), totalPrice)
2019-07-23 11:42:04,171|I|Thread-1|firstEvaluation.20190723_114144.001|XMLScenario|Activity 2|#  8|xml.storeValue(xml,xpath, - PASS XML matches saved to 'totalPrice'
2019-07-23 11:42:04,776|I|Thread-1|firstEvaluation.20190723_114144.001|XMLScenario|Activity 2|#  9|base.verbose(text) - executing verbose(text)(${totalPrice})
2019-07-23 11:42:04,780|I|Thread-1|firstEvaluation.20190723_114144.001|XMLScenario|Activity 2|#  9|base.verbose(text) - 214.40000000000003
2019-07-23 11:42:04,789|I|Thread-1|firstEvaluation.20190723_114144.001|XMLScenario|Activity 2|#  9|base.verbose(text) - PASS 
2019-07-23 11:42:04,793|I|Thread-1|firstEvaluation.20190723_114144.001|XMLScenario|Activity 4 - executing activity
2019-07-23 11:42:05,397|I|Thread-1|firstEvaluation.20190723_114144.001|XMLScenario|Activity 4|# 10|xml.storeValues(xml,xpath - executing storeValues(xml,xpath,var)($(syspath|data|fullpath)/example_1.xml, /catalog/book[genre="Computer"]/title|/catalog/book[genre="Computer"]/author, list)
2019-07-23 11:42:05,426|I|Thread-1|firstEvaluation.20190723_114144.001|XMLScenario|Activity 4|# 10|xml.storeValues(xml,xpath - PASS XML matches saved to 'list'
2019-07-23 11:42:06,030|I|Thread-1|firstEvaluation.20190723_114144.001|XMLScenario|Activity 4|# 11|base.verbose(text) - executing verbose(text)(${list})
2019-07-23 11:42:06,034|I|Thread-1|firstEvaluation.20190723_114144.001|XMLScenario|Activity 4|# 11|base.verbose(text) - Gambardella, Matthew,XML Developer's Guide,O'Brien, Tim,Microsoft .NET: The Programming Bible,O'Brien, Tim,MSXML3: A Comprehensive Guide,Galos, Mike,Visual Studio 7: A Comprehensive Guide
2019-07-23 11:42:06,044|I|Thread-1|firstEvaluation.20190723_114144.001|XMLScenario|Activity 4|# 11|base.verbose(text) - PASS 
2019-07-23 11:42:06,047|I|Thread-1|firstEvaluation.20190723_114144.001|XMLScenario|Activity 5 - executing activity
2019-07-23 11:42:06,651|I|Thread-1|firstEvaluation.20190723_114144.001|XMLScenario|Activity 5|# 12|xml.storeValues(xml,xpath - executing storeValues(xml,xpath,var)($(syspath|data|fullpath)/example_1.xml, /catalog/book[author = "Corets, Eva"]/title, titleList)
2019-07-23 11:42:06,670|I|Thread-1|firstEvaluation.20190723_114144.001|XMLScenario|Activity 5|# 12|xml.storeValues(xml,xpath - PASS XML matches saved to 'titleList'
2019-07-23 11:42:07,289|I|Thread-1|firstEvaluation.20190723_114144.001|XMLScenario|Activity 5|# 13|base.verbose(text) - executing verbose(text)(${titleList})
2019-07-23 11:42:07,289|I|Thread-1|firstEvaluation.20190723_114144.001|XMLScenario|Activity 5|# 13|base.verbose(text) - Maeve Ascendant,Oberon's Legacy,The Sundered Grail
2019-07-23 11:42:07,289|I|Thread-1|firstEvaluation.20190723_114144.001|XMLScenario|Activity 5|# 13|base.verbose(text) - PASS 
2019-07-23 11:42:07,477|I|Thread-1|[firstEvaluation.20190723_114144.001|XMLScenario] saving test scenario
2019-07-23 11:42:07,555|I|Thread-1|firstEvaluation.20190723_114144.001|CSVScenario - executing test scenario
2019-07-23 11:42:07,555|I|Thread-1|firstEvaluation.20190723_114144.001|CSVScenario|Activity 1 - executing activity
2019-07-23 11:42:08,155|I|Thread-1|firstEvaluation.20190723_114144.001|CSVScenario|Activity 1|#  5|io.readFile(var,file) - executing readFile(var,file)(input, $(syspath|data|fullpath)/example_3.csv)
2019-07-23 11:42:08,155|I|Thread-1|firstEvaluation.20190723_114144.001|CSVScenario|Activity 1|#  5|io.readFile(var,file) - PASS Content read from 'C:\projects\firstEvaluation\artifact\data\example_3.csv' to ${input}
2019-07-23 11:42:08,755|I|Thread-1|firstEvaluation.20190723_114144.001|CSVScenario|Activity 1|#  6|base.save(var,value) - executing save(var,value)(rowcount, [CSV(${input}) => parse(header=false) rowCount])
2019-07-23 11:42:08,830|I|Thread-1|firstEvaluation.20190723_114144.001|CSVScenario|Activity 1|#  6|base.save(var,value) - PASS stored '24' as ${rowcount}
2019-07-23 11:42:09,431|I|Thread-1|firstEvaluation.20190723_114144.001|CSVScenario|Activity 1|#  7|base.verbose(text) - executing verbose(text)(${rowcount})
2019-07-23 11:42:09,436|I|Thread-1|firstEvaluation.20190723_114144.001|CSVScenario|Activity 1|#  7|base.verbose(text) - 24
2019-07-23 11:42:09,442|I|Thread-1|firstEvaluation.20190723_114144.001|CSVScenario|Activity 1|#  7|base.verbose(text) - PASS 
2019-07-23 11:42:10,046|I|Thread-1|firstEvaluation.20190723_114144.001|CSVScenario|Activity 1|#  8|base.save(var,value) - executing save(var,value)(columnCount, [CSV(${input}) => parse(header=false) columnCount])
2019-07-23 11:42:10,074|I|Thread-1|firstEvaluation.20190723_114144.001|CSVScenario|Activity 1|#  8|base.save(var,value) - PASS stored '14' as ${columnCount}
2019-07-23 11:42:10,692|I|Thread-1|firstEvaluation.20190723_114144.001|CSVScenario|Activity 1|#  9|base.verbose(text) - executing verbose(text)(${columnCount})
2019-07-23 11:42:10,692|I|Thread-1|firstEvaluation.20190723_114144.001|CSVScenario|Activity 1|#  9|base.verbose(text) - 14
2019-07-23 11:42:10,692|I|Thread-1|firstEvaluation.20190723_114144.001|CSVScenario|Activity 1|#  9|base.verbose(text) - PASS 
2019-07-23 11:42:10,817|I|Thread-1|[firstEvaluation.20190723_114144.001|CSVScenario] saving test scenario
2019-07-23 11:42:10,895|I|Thread-1|[20190723_114143] 
/-TEST COMPLETE-----------------------------------------------------------------
| Test Output:    C:\projects\firstEvaluation\output\20190723_114143\firstEvaluation.20190723_114144.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 24174 ms
» Test Steps:     36
» Error(s):       0



2019-07-23 11:42:16,141|I|Thread-1|[20190723_114143] 
/-TEST COMPLETE-----------------------------------------------------------------
| Test Script:    C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 32336 ms
» Iterations:     [1] total 1
» Test Steps:     36
» Passed:         36
» Error(s):       0
» Iteration 1 of 1: C:\projects\firstEvaluation\output\20190723_114143\firstEvaluation.20190723_114144.001.xlsx



2019-07-23 11:42:16,857|I|main|[20190723_114143] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] now completed
2019-07-23 11:42:16,857|I|main|[20190723_114143] all execution thread(s) have terminated
2019-07-23 11:42:16,857|I|main|[20190723_114143] test run completed in about 33 seconds
2019-07-23 11:42:16,966|I|main|No predefined nexial-setup found
2019-07-23 11:42:16,998|I|main|outputBase not set; output-to-cloud DISABLED!
2019-07-23 11:42:16,998|I|main|accessKey not set; output-to-cloud DISABLED!
2019-07-23 11:42:16,998|I|main|secretKey not set; output-to-cloud DISABLED!
2019-07-23 11:42:16,998|I|main|generating HTML output for this execution to C:\projects\firstEvaluation\output\20190723_114143\execution-output.html
2019-07-23 11:42:17,669|I|main|generating JUnit XML output for this execution to C:\projects\firstEvaluation\output\20190723_114143\junit.xml
2019-07-23 11:42:17,685|I|main|generated JUnit report for this execution: C:\projects\firstEvaluation\output\20190723_114143\junit.xml
2019-07-23 11:42:17,701|I|main|nexial mailer not enabled: nexial.enableEmail=false
2019-07-23 11:42:17,701|I|main|skipped email notification as configured
2019-07-23 11:42:17,701|I|main|exiting Nexial...
2019-07-23 11:42:17,701|I|main|

/-END OF EXECUTION--------------------------------------------------------------
| » Execution Time: 33 sec.
| » Test Steps....: 36
| » Passed........: 36
| » Failed........: 0
| » Success Rate..: 100.00%
\----------------------------------------------------------nexial-core 2.4_0567-

2019-07-23 11:42:17,701|I|main|ALL PASSED!
2019-07-23 11:42:17,701|I|main|End of Execution:
NEXIAL_OUTPUT:         C:\projects\firstEvaluation\output\20190723_114143
NEXIAL_EXECUTION_HTML: C:\projects\firstEvaluation\output\20190723_114143\execution-output.html
NEXIAL_JUNIT_XML:      C:\projects\firstEvaluation\output\20190723_114143\junit.xml
NEXIAL_SUCCESS_RATE:   100.00%
NEXIAL_EXIT_STATUS:    0
