2019-07-22 22:58:48,342|I|Thread-1|(DELAYED) nexial-core dev_0581 starting up...
2019-07-22 22:58:48,346|I|Thread-1|(DELAYED) data file resolved as C:\Users\DEEPAN~1\AppData\Local\Temp\qPPVg\firstEvaluation.data.xlsx
2019-07-22 22:58:48,346|I|Thread-1|(DELAYED) input files and output directory resolved...
2019-07-22 22:58:48,346|I|Thread-1|(DELAYED) No predefined nexial-setup found
2019-07-22 22:58:48,346|I|Thread-1|(DELAYED) [20190722_225848] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] resolve RUN ID as 20190722_225848
2019-07-22 22:58:48,347|I|Thread-1|(DELAYED) [20190722_225848] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] new thread started
2019-07-22 22:58:48,347|I|Thread-1|No predefined nexial-setup found
2019-07-22 22:58:48,451|I|Thread-1|outputBase not set; output-to-cloud DISABLED!
2019-07-22 22:58:48,452|I|Thread-1|accessKey not set; output-to-cloud DISABLED!
2019-07-22 22:58:48,452|I|Thread-1|secretKey not set; output-to-cloud DISABLED!
2019-07-22 22:58:48,526|I|Thread-1|missing REQUIRED configuration; sms DISABLED!
2019-07-22 22:58:49,512|I|Thread-1|[20190722_225848] executing C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx with 1 iteration(s)
2019-07-22 22:58:49,516|I|Thread-1|[20190722_225848] create directory C:\projects\firstEvaluation\output\20190722_225848\captures
2019-07-22 22:58:49,517|I|Thread-1|[20190722_225848] create directory C:\projects\firstEvaluation\output\20190722_225848\logs
2019-07-22 22:58:50,097|I|Thread-1|[20190722_225848] merging test data to tmp file C:\projects\firstEvaluation\output\20190722_225848\firstEvaluation.20190722_225849.001.xlsx
2019-07-22 22:58:50,098|I|Thread-1|refetching data from C:\projects\firstEvaluation\artifact\data\firstEvaluation.data.xlsx
2019-07-22 22:58:50,363|I|Thread-1|[20190722_225848] test script and test data merged to C:\projects\firstEvaluation\output\20190722_225848\firstEvaluation.20190722_225849.001.xlsx
2019-07-22 22:58:51,171|I|Thread-1|STARTS
2019-07-22 22:58:51,216|I|Thread-1|firstEvaluation.20190722_225849.001 - executing iteration #1 of 1; Iteration Id 1
2019-07-22 22:58:51,223|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario - executing test scenario
2019-07-22 22:58:51,224|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 1 - executing activity
2019-07-22 22:58:51,824|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 1|#  5|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].product_name, productNames)
2019-07-22 22:58:51,913|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 1|#  5|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].product_name' stored to ${productNames}
2019-07-22 22:58:52,514|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 1|#  6|base.verbose(text) - executing verbose(text)(${productNames})
2019-07-22 22:58:52,515|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 1|#  6|base.verbose(text) - ["sildenafil citrate","Mountain Juniperus ashei"]
2019-07-22 22:58:52,678|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 1|#  6|base.verbose(text) - PASS 
2019-07-22 22:58:52,681|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2 - executing activity
2019-07-22 22:58:53,281|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|#  7|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].quantity, quantityList)
2019-07-22 22:58:53,285|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|#  7|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].quantity' stored to ${quantityList}
2019-07-22 22:58:53,887|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|#  8|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].unit_cost, costList)
2019-07-22 22:58:53,895|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|#  8|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].unit_cost' stored to ${costList}
2019-07-22 22:58:54,496|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|#  9|base.save(var,value) - executing save(var,value)(unit_costList, [LIST${costList} => replaceRegex([$],)])
2019-07-22 22:58:54,498|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|#  9|base.save(var,value) - PASS stored '[LIST["$10.47","$8.74"] => replaceRegex([$],)]' as ${unit_costList}
2019-07-22 22:58:55,100|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 10|base.verbose(text) - executing verbose(text)(${unit_costList})
2019-07-22 22:58:55,102|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 10|base.verbose(text) - [LIST["$10.47","$8.74"] => replaceRegex([$],)]
2019-07-22 22:58:55,104|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 10|base.verbose(text) - PASS 
2019-07-22 22:58:55,705|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 11|base.save(var,value) - executing save(var,value)(sumTotal, 0)
2019-07-22 22:58:55,706|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 11|base.save(var,value) - PASS stored '0' as ${sumTotal}
2019-07-22 22:58:56,307|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 12|base.save(var,value) - executing save(var,value)(counter, 0)
2019-07-22 22:58:56,308|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 12|base.save(var,value) - PASS stored '0' as ${counter}
2019-07-22 22:58:56,909|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 13|base.save(var,value) - executing save(var,value)(length, $(array|length|${quantityList}))
2019-07-22 22:58:56,913|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 13|base.save(var,value) - PASS stored '2' as ${length}
2019-07-22 22:58:57,514|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 14|base.save(var,value) - executing save(var,value)(mulValue, 0)
2019-07-22 22:58:57,515|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 14|base.save(var,value) - PASS stored '0' as ${mulValue}
2019-07-22 22:58:58,116|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 15|base.verbose(text) - executing verbose(text)(${unit_costList})
2019-07-22 22:58:58,117|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 15|base.verbose(text) - [LIST["$10.47","$8.74"] => replaceRegex([$],)]
2019-07-22 22:58:58,119|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 15|base.verbose(text) - PASS 
2019-07-22 22:58:58,720|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 16|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(6, -1)
2019-07-22 22:58:58,722|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #1 --------------------------------------------->
2019-07-22 22:58:58,723|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-22 22:58:58,723|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 18|base.save(var,value) - executing save(var,value)(unit_cost, $(array|item|${unit_costList}|${counter}))
2019-07-22 22:58:58,724|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 18|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${unit_cost}
2019-07-22 22:58:58,725|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 19|base.save(var,value) - executing save(var,value)(quantity, $(array|item|${quantityList}|${counter}))
2019-07-22 22:58:58,726|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 19|base.save(var,value) - [repeat-until] PASS stored '261' as ${quantity}
2019-07-22 22:58:58,726|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 20|base.save(var,value) - executing save(var,value)(mulValue, [NUMBER(${unit_cost}) => multiply(${quantity})])
2019-07-22 22:58:58,768|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 20|base.save(var,value) - [repeat-until] PASS stored '2732.67' as ${mulValue}
2019-07-22 22:58:58,769|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 21|base.save(var,value) - executing save(var,value)(sumTotal, [NUMBER(${sumTotal}) => add(${mulValue})])
2019-07-22 22:58:58,770|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 21|base.save(var,value) - [repeat-until] PASS stored '2732.67' as ${sumTotal}
2019-07-22 22:58:58,771|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 22:58:58,784|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2019-07-22 22:58:58,784|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #2 --------------------------------------------->
2019-07-22 22:58:58,785|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-22 22:58:58,786|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 18|base.save(var,value) - executing save(var,value)(unit_cost, $(array|item|${unit_costList}|${counter}))
2019-07-22 22:58:58,788|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 18|base.save(var,value) - [repeat-until] PASS stored '"$8.74"' as ${unit_cost}
2019-07-22 22:58:58,795|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 19|base.save(var,value) - executing save(var,value)(quantity, $(array|item|${quantityList}|${counter}))
2019-07-22 22:58:58,796|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 19|base.save(var,value) - [repeat-until] PASS stored '292' as ${quantity}
2019-07-22 22:58:58,796|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 20|base.save(var,value) - executing save(var,value)(mulValue, [NUMBER(${unit_cost}) => multiply(${quantity})])
2019-07-22 22:58:58,798|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 20|base.save(var,value) - [repeat-until] PASS stored '2552.08' as ${mulValue}
2019-07-22 22:58:58,799|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 21|base.save(var,value) - executing save(var,value)(sumTotal, [NUMBER(${sumTotal}) => add(${mulValue})])
2019-07-22 22:58:58,800|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 21|base.save(var,value) - [repeat-until] PASS stored '5284.75' as ${sumTotal}
2019-07-22 22:58:58,801|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 22:58:58,801|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2019-07-22 22:58:58,802|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #3 --------------------------------------------->
2019-07-22 22:58:58,802|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-22 22:58:58,811|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 16|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2019-07-22 22:58:59,417|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 23|base.verbose(text) - executing verbose(text)(${sumTotal})
2019-07-22 22:58:59,418|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 23|base.verbose(text) - 5284.75
2019-07-22 22:58:59,420|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 2|# 23|base.verbose(text) - PASS 
2019-07-22 22:58:59,422|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 3 - executing activity
2019-07-22 22:59:00,023|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 3|# 24|io.readFile(var,file) - executing readFile(var,file)(jsonFile, $(syspath|data|fullpath)/example_2.json)
2019-07-22 22:59:00,026|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 3|# 24|io.readFile(var,file) - PASS Content read from 'C:\projects\firstEvaluation\artifact\data\example_2.json' to ${jsonFile}
2019-07-22 22:59:00,627|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 3|# 25|base.save(var,value) - executing save(var,value)(var, [JSON(${jsonFile} => extract(products[unit_cost => ascending])])
2019-07-22 22:59:00,712|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 3|# 25|base.save(var,value) - PASS stored '[JSON({
	"products": 
		[{
  			"_id": {
 			   "orderid": "5968dd23fc13ae04d9000001"
  				},
  			"product_name": "sildenafil citrate",
  			"supplier": "Wisozk Inc",
  			"quantity": 261,
  			"unit_cost": "$10.47"
		}, 
		{
 			"_id": {
    			  "orderid": "5968dd23fc13ae04d9000002"
  				},
 			  "product_name": "Mountain Juniperus ashei",
  			  "supplier": "Wisozk Inc",
			  "quantity": 292,
			  "unit_cost": "$8.74"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000003"
				},
			    "product_name": "Dextromathorphan HBr",
			    "supplier": "Schmitt-Weissnat",
  		            "quantity": 211,
  			    "unit_cost": "$20.53"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000004"
 				 },
  			    "product_name": "Dextromathorphan HBr",
			    "supplier": "SC-Pharmacy",
			    "quantity": 211,
			    "unit_cost": "$20.53"
		}]
} => extract(products[unit_cost => ascending])]' as ${var}
2019-07-22 22:59:01,316|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 3|# 26|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)(${var}, products.product_name, result)
2019-07-22 22:59:01,320|E|Thread-1|Error converting string to JSON object: Expected a ',' or ']' at 7 [character 8 line 1]
org.json.JSONException: Expected a ',' or ']' at 7 [character 8 line 1]
	at org.json.JSONTokener.syntaxError(JSONTokener.java:505)
	at org.json.JSONArray.<init>(JSONArray.java:130)
	at org.json.JSONArray.<init>(JSONArray.java:147)
	at org.nexial.core.utils.JsonUtils.toJSONArray(JsonUtils.java:85)
	at org.nexial.core.plugins.json.JsonCommand.resolveToJSONObject(JsonCommand.java:318)
	at org.nexial.core.plugins.json.JsonCommand.toJSONObject(JsonCommand.java:441)
	at org.nexial.core.plugins.json.JsonCommand.sanityCheck(JsonCommand.java:445)
	at org.nexial.core.plugins.json.JsonCommand.find(JsonCommand.java:449)
	at org.nexial.core.plugins.json.JsonCommand.extractJsonValue(JsonCommand.java:384)
	at org.nexial.core.plugins.json.JsonCommand.storeValues(JsonCommand.java:123)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.nexial.core.plugins.base.BaseCommand.execute(BaseCommand.java:156)
	at org.nexial.core.model.TestStep.invokeCommand(TestStep.java:327)
	at org.nexial.core.model.TestStep.execute(TestStep.java:169)
	at org.nexial.core.model.TestCase.execute(TestCase.java:94)
	at org.nexial.core.model.TestScenario.execute(TestScenario.java:130)
	at org.nexial.core.model.ExecutionContext.execute(ExecutionContext.java:1184)
	at org.nexial.core.ExecutionThread.run(ExecutionThread.java:174)
2019-07-22 22:59:01,322|E|Thread-1|JSON string in error is as follows:
[JSON({
	"products": 
		[{
  			"_id": {
 			   "orderid": "5968dd23fc13ae04d9000001"
  				},
  			"product_name": "sildenafil citrate",
  			"supplier": "Wisozk Inc",
  			"quantity": 261,
  			"unit_cost": "$10.47"
		}, 
		{
 			"_id": {
    			  "orderid": "5968dd23fc13ae04d9000002"
  				},
 			  "product_name": "Mountain Juniperus ashei",
  			  "supplier": "Wisozk Inc",
			  "quantity": 292,
			  "unit_cost": "$8.74"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000003"
				},
			    "product_name": "Dextromathorphan HBr",
			    "supplier": "Schmitt-Weissnat",
  		            "quantity": 211,
  			    "unit_cost": "$20.53"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000004"
 				 },
  			    "product_name": "Dextromathorphan HBr",
			    "supplier": "SC-Pharmacy",
			    "quantity": 211,
			    "unit_cost": "$20.53"
		}]
} => extract(products[unit_cost => ascending])]
2019-07-22 22:59:01,358|E|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 3|# 26|json.storeValues(json,jso - FAIL invalid/malformed json: {[JSON({
	"products": 
		[{
  			"_id": {
 			   "orderid": "5968dd23fc13ae04d9000001"
  				},
  			"product_name": "sildenafil citrate",
  			"supplier": "Wisozk Inc",
  			"quantity": 261,
  			"unit_cost": "$10.47"
		}, 
		{
 			"_id": {
    			  "orderid": "5968dd23fc13ae04d9000002"
  				},
 			  "product_name": "Mountain Juniperus ashei",
  			  "supplier": "Wisozk Inc",
			  "quantity": 292,
			  "unit_cost": "$8.74"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000003"
				},
			    "product_name": "Dextromathorphan HBr",
			    "supplier": "Schmitt-Weissnat",
  		            "quantity": 211,
  			    "unit_cost": "$20.53"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000004"
 				 },
  			    "product_name": "Dextromathorphan HBr",
			    "supplier": "SC-Pharmacy",
			    "quantity": 211,
			    "unit_cost": "$20.53"
		}]
} => extract(products[unit_cost => ascending])]}
2019-07-22 22:59:01,963|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 3|# 27|base.verbose(text) - executing verbose(text)(${result})
2019-07-22 22:59:01,963|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 3|# 27|base.verbose(text) - 
2019-07-22 22:59:01,965|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 3|# 27|base.verbose(text) - PASS 
2019-07-22 22:59:01,965|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 4 - executing activity
2019-07-22 22:59:02,566|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 4|# 28|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[product_name=Dextromathorphan HBr].supplier, supplierList)
2019-07-22 22:59:02,574|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 4|# 28|json.storeValues(json,jso - PASS EXPECTED match against 'products[product_name=Dextromathorphan HBr].supplier' stored to ${supplierList}
2019-07-22 22:59:03,175|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 4|# 29|base.verbose(text) - executing verbose(text)(${supplierList})
2019-07-22 22:59:03,176|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 4|# 29|base.verbose(text) - ["Schmitt-Weissnat","SC-Pharmacy"]
2019-07-22 22:59:03,177|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 4|# 29|base.verbose(text) - PASS 
2019-07-22 22:59:03,177|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5 - executing activity
2019-07-22 22:59:03,778|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 30|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products.product_name, productList)
2019-07-22 22:59:03,813|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 30|json.storeValues(json,jso - PASS EXPECTED match against 'products.product_name' stored to ${productList}
2019-07-22 22:59:04,413|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 31|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products.unit_cost, costList)
2019-07-22 22:59:04,421|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 31|json.storeValues(json,jso - PASS EXPECTED match against 'products.unit_cost' stored to ${costList}
2019-07-22 22:59:05,022|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 32|base.save(var,value) - executing save(var,value)(unit_costList, [LIST${costList} => replaceRegex([$],)])
2019-07-22 22:59:05,026|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 32|base.save(var,value) - PASS stored '[LIST["$10.47","$8.74","$20.53","$20.53"] => replaceRegex([$],)]' as ${unit_costList}
2019-07-22 22:59:05,627|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 33|base.save(var,value) - executing save(var,value)(counter, 0)
2019-07-22 22:59:05,629|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 33|base.save(var,value) - PASS stored '0' as ${counter}
2019-07-22 22:59:06,230|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 34|base.save(var,value) - executing save(var,value)(finalList, abcd)
2019-07-22 22:59:06,232|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 34|base.save(var,value) - PASS stored 'abcd' as ${finalList}
2019-07-22 22:59:06,833|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 35|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(6, -1)
2019-07-22 22:59:06,834|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #1 --------------------------------------------->
2019-07-22 22:59:06,834|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 22:59:06,835|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 22:59:06,836|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 22:59:06,836|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 38|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-22 22:59:06,842|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 38|base.save(var,value) - [repeat-until] PASS stored '10.47' as ${cost}
2019-07-22 22:59:06,844|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 22:59:06,844|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 10.47
2019-07-22 22:59:06,845|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 10.47
2019-07-22 22:59:06,846|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-22 22:59:06,849|I|Thread-1|evaluating flow control:	SkipIf(10.47>20)		=> NOT MATCHED
2019-07-22 22:59:06,856|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 40|base.verbose(text) - finalList,"sildenafil citrate"
2019-07-22 22:59:06,856|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] PASS finalList,"sildenafil citrate"
2019-07-22 22:59:06,856|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 22:59:06,857|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2019-07-22 22:59:06,858|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #2 --------------------------------------------->
2019-07-22 22:59:06,858|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 22:59:06,859|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 22:59:06,859|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '"$8.74"' as ${value}
2019-07-22 22:59:06,860|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 38|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-22 22:59:06,860|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 38|base.save(var,value) - [repeat-until] PASS stored '8.74' as ${cost}
2019-07-22 22:59:06,861|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 22:59:06,861|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 8.74
2019-07-22 22:59:06,861|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 8.74
2019-07-22 22:59:06,861|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-22 22:59:06,862|I|Thread-1|evaluating flow control:	SkipIf(8.74>20)		=> NOT MATCHED
2019-07-22 22:59:06,862|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 40|base.verbose(text) - finalList,"Mountain Juniperus ashei"
2019-07-22 22:59:06,863|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] PASS finalList,"Mountain Juniperus ashei"
2019-07-22 22:59:06,863|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 22:59:06,876|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2019-07-22 22:59:06,876|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #3 --------------------------------------------->
2019-07-22 22:59:06,877|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 22:59:06,877|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 22:59:06,878|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '"$20.53"' as ${value}
2019-07-22 22:59:06,879|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 38|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-22 22:59:06,880|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 38|base.save(var,value) - [repeat-until] PASS stored '20.53' as ${cost}
2019-07-22 22:59:06,881|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 22:59:06,883|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 20.53
2019-07-22 22:59:06,887|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 20.53
2019-07-22 22:59:06,887|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-22 22:59:06,888|I|Thread-1|evaluating flow control:	SkipIf(20.53>20)		=> MATCHED
2019-07-22 22:59:06,889|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] SKIPPED current step skipped: SkipIf(${cost} > 20)
2019-07-22 22:59:06,889|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 22:59:06,890|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 3
2019-07-22 22:59:06,890|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #4 --------------------------------------------->
2019-07-22 22:59:06,890|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 22:59:06,891|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 22:59:06,892|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '"$20.53"' as ${value}
2019-07-22 22:59:06,893|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 38|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-22 22:59:06,894|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 38|base.save(var,value) - [repeat-until] PASS stored '20.53' as ${cost}
2019-07-22 22:59:06,894|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 22:59:06,894|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 20.53
2019-07-22 22:59:06,895|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 20.53
2019-07-22 22:59:06,907|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-22 22:59:06,908|I|Thread-1|evaluating flow control:	SkipIf(20.53>20)		=> MATCHED
2019-07-22 22:59:06,908|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] SKIPPED current step skipped: SkipIf(${cost} > 20)
2019-07-22 22:59:06,908|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 22:59:06,909|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 4
2019-07-22 22:59:06,909|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #5 --------------------------------------------->
2019-07-22 22:59:06,909|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 22:59:06,910|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 35|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2019-07-22 22:59:07,511|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 42|base.verbose(text) - executing verbose(text)(${finalList})
2019-07-22 22:59:07,515|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 42|base.verbose(text) - abcd
2019-07-22 22:59:07,518|I|Thread-1|firstEvaluation.20190722_225849.001|JsonScenario|Activity 5|# 42|base.verbose(text) - PASS 
2019-07-22 22:59:08,086|I|Thread-1|[firstEvaluation.20190722_225849.001|JsonScenario] saving test scenario
2019-07-22 22:59:08,223|I|Thread-1|firstEvaluation.20190722_225849.001|XMLScenario - executing test scenario
2019-07-22 22:59:08,225|I|Thread-1|firstEvaluation.20190722_225849.001|XMLScenario|Activity 1 - executing activity
2019-07-22 22:59:08,825|I|Thread-1|firstEvaluation.20190722_225849.001|XMLScenario|Activity 1|#  5|io.readFile(var,file) - executing readFile(var,file)(xmlFile, $(syspath|data|fullpath)/example_1.xml)
2019-07-22 22:59:08,828|I|Thread-1|firstEvaluation.20190722_225849.001|XMLScenario|Activity 1|#  5|io.readFile(var,file) - PASS Content read from 'C:\projects\firstEvaluation\artifact\data\example_1.xml' to ${xmlFile}
2019-07-22 22:59:09,429|I|Thread-1|firstEvaluation.20190722_225849.001|XMLScenario|Activity 1|#  6|xml.storeValues(xml,xpath - executing storeValues(xml,xpath,var)($(syspath|data|fullpath)/example_1.xml, /catalog/book[publish_date[starts-with(.,"2000-12-")] and ./title/text()]/title, bookList)
2019-07-22 22:59:09,591|I|Thread-1|firstEvaluation.20190722_225849.001|XMLScenario|Activity 1|#  6|xml.storeValues(xml,xpath - PASS XML matches saved to 'bookList'
2019-07-22 22:59:10,192|I|Thread-1|firstEvaluation.20190722_225849.001|XMLScenario|Activity 1|#  7|base.verbose(text) - executing verbose(text)(${bookList})
2019-07-22 22:59:10,193|I|Thread-1|firstEvaluation.20190722_225849.001|XMLScenario|Activity 1|#  7|base.verbose(text) - Midnight Rain,Creepy Crawlies,Microsoft .NET: The Programming Bible,MSXML3: A Comprehensive Guide
2019-07-22 22:59:10,196|I|Thread-1|firstEvaluation.20190722_225849.001|XMLScenario|Activity 1|#  7|base.verbose(text) - PASS 
2019-07-22 22:59:10,223|I|Thread-1|[firstEvaluation.20190722_225849.001|XMLScenario] saving test scenario
2019-07-22 22:59:10,313|I|Thread-1|[20190722_225848] 
/-TEST COMPLETE-----------------------------------------------------------------
| Test Output:    C:\projects\firstEvaluation\output\20190722_225848\firstEvaluation.20190722_225849.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 19086 ms
» Test Steps:     29
» Error(s):       1



2019-07-22 22:59:12,503|I|Thread-1|[20190722_225848] 
/-TEST COMPLETE-----------------------------------------------------------------
| Test Script:    C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 24371 ms
» Iterations:     [1] total 1
» Test Steps:     29
» Passed:         28
» Error(s):       1
» Iteration 1 of 1: C:\projects\firstEvaluation\output\20190722_225848\firstEvaluation.20190722_225849.001.xlsx



2019-07-22 22:59:13,081|I|main|[20190722_225848] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] now completed
2019-07-22 22:59:13,081|I|main|[20190722_225848] all execution thread(s) have terminated
2019-07-22 22:59:13,082|I|main|[20190722_225848] test run completed in about 25 seconds
2019-07-22 22:59:13,266|I|main|No predefined nexial-setup found
2019-07-22 22:59:13,317|I|main|outputBase not set; output-to-cloud DISABLED!
2019-07-22 22:59:13,320|I|main|accessKey not set; output-to-cloud DISABLED!
2019-07-22 22:59:13,320|I|main|secretKey not set; output-to-cloud DISABLED!
2019-07-22 22:59:13,321|I|main|generating HTML output for this execution to C:\projects\firstEvaluation\output\20190722_225848\execution-output.html
2019-07-22 22:59:14,611|I|main|generating JUnit XML output for this execution to C:\projects\firstEvaluation\output\20190722_225848\junit.xml
2019-07-22 22:59:14,644|I|main|generated JUnit report for this execution: C:\projects\firstEvaluation\output\20190722_225848\junit.xml
2019-07-22 22:59:14,702|I|main|nexial mailer not enabled: nexial.enableEmail=false
2019-07-22 22:59:14,702|I|main|skipped email notification as configured
2019-07-22 22:59:14,704|I|main|exiting Nexial...
2019-07-22 22:59:14,705|I|main|

/-END OF EXECUTION--------------------------------------------------------------
| » Execution Time: 25 sec.
| » Test Steps....: 29
| » Passed........: 28
| » Failed........: 1
| » Success Rate..: 96.55%
\----------------------------------------------------------nexial-core dev_0581-

2019-07-22 22:59:14,705|E|main|failure found; success rate is 96.55%
2019-07-22 22:59:14,705|I|main|End of Execution:
NEXIAL_OUTPUT:         C:\projects\firstEvaluation\output\20190722_225848
NEXIAL_EXECUTION_HTML: C:\projects\firstEvaluation\output\20190722_225848\execution-output.html
NEXIAL_JUNIT_XML:      C:\projects\firstEvaluation\output\20190722_225848\junit.xml
NEXIAL_SUCCESS_RATE:   96.55%
NEXIAL_EXIT_STATUS:    -13
