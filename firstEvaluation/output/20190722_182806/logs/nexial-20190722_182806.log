2019-07-22 18:28:07,022|I|Thread-1|(DELAYED) nexial-core dev_0581 starting up...
2019-07-22 18:28:07,022|I|Thread-1|(DELAYED) data file resolved as C:\Users\DEEPAN~1\AppData\Local\Temp\AJIOU\firstEvaluation.data.xlsx
2019-07-22 18:28:07,022|I|Thread-1|(DELAYED) input files and output directory resolved...
2019-07-22 18:28:07,022|I|Thread-1|(DELAYED) No predefined nexial-setup found
2019-07-22 18:28:07,022|I|Thread-1|(DELAYED) [20190722_182806] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] resolve RUN ID as 20190722_182806
2019-07-22 18:28:07,022|I|Thread-1|(DELAYED) [20190722_182806] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] new thread started
2019-07-22 18:28:07,027|I|Thread-1|No predefined nexial-setup found
2019-07-22 18:28:07,078|I|Thread-1|outputBase not set; output-to-cloud DISABLED!
2019-07-22 18:28:07,078|I|Thread-1|accessKey not set; output-to-cloud DISABLED!
2019-07-22 18:28:07,078|I|Thread-1|secretKey not set; output-to-cloud DISABLED!
2019-07-22 18:28:07,098|I|Thread-1|missing REQUIRED configuration; sms DISABLED!
2019-07-22 18:28:07,843|I|Thread-1|[20190722_182806] executing C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx with 1 iteration(s)
2019-07-22 18:28:07,848|I|Thread-1|[20190722_182806] create directory C:\projects\firstEvaluation\output\20190722_182806\captures
2019-07-22 18:28:07,848|I|Thread-1|[20190722_182806] create directory C:\projects\firstEvaluation\output\20190722_182806\logs
2019-07-22 18:28:08,273|I|Thread-1|[20190722_182806] merging test data to tmp file C:\projects\firstEvaluation\output\20190722_182806\firstEvaluation.20190722_182807.001.xlsx
2019-07-22 18:28:08,277|I|Thread-1|refetching data from C:\projects\firstEvaluation\artifact\data\firstEvaluation.data.xlsx
2019-07-22 18:28:08,487|I|Thread-1|[20190722_182806] test script and test data merged to C:\projects\firstEvaluation\output\20190722_182806\firstEvaluation.20190722_182807.001.xlsx
2019-07-22 18:28:09,037|I|Thread-1|STARTS
2019-07-22 18:28:09,067|I|Thread-1|firstEvaluation.20190722_182807.001 - executing iteration #1 of 1; Iteration Id 1
2019-07-22 18:28:09,072|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario - executing test scenario
2019-07-22 18:28:09,077|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 1 - executing activity
2019-07-22 18:28:09,681|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 1|#  5|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].product_name, productNames)
2019-07-22 18:28:09,750|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 1|#  5|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].product_name' stored to ${productNames}
2019-07-22 18:28:10,351|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 1|#  6|base.verbose(text) - executing verbose(text)(${productNames})
2019-07-22 18:28:10,351|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 1|#  6|base.verbose(text) - ["sildenafil citrate","Mountain Juniperus ashei"]
2019-07-22 18:28:10,498|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 1|#  6|base.verbose(text) - PASS 
2019-07-22 18:28:10,503|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2 - executing activity
2019-07-22 18:28:11,105|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|#  7|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].quantity, quantityList)
2019-07-22 18:28:11,105|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|#  7|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].quantity' stored to ${quantityList}
2019-07-22 18:28:11,706|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|#  8|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].unit_cost, costList)
2019-07-22 18:28:11,706|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|#  8|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].unit_cost' stored to ${costList}
2019-07-22 18:28:12,309|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|#  9|base.save(var,value) - executing save(var,value)(unit_costList, [LIST${costList} => replaceRegex([$],)])
2019-07-22 18:28:12,309|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|#  9|base.save(var,value) - PASS stored '[LIST["$10.47","$8.74"] => replaceRegex([$],)]' as ${unit_costList}
2019-07-22 18:28:12,910|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 10|base.verbose(text) - executing verbose(text)(${unit_costList})
2019-07-22 18:28:12,910|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 10|base.verbose(text) - [LIST["$10.47","$8.74"] => replaceRegex([$],)]
2019-07-22 18:28:12,910|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 10|base.verbose(text) - PASS 
2019-07-22 18:28:13,512|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 11|base.save(var,value) - executing save(var,value)(sumTotal, 0)
2019-07-22 18:28:13,512|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 11|base.save(var,value) - PASS stored '0' as ${sumTotal}
2019-07-22 18:28:14,116|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 12|base.save(var,value) - executing save(var,value)(counter, 0)
2019-07-22 18:28:14,116|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 12|base.save(var,value) - PASS stored '0' as ${counter}
2019-07-22 18:28:14,719|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 13|base.save(var,value) - executing save(var,value)(length, $(array|length|${quantityList}))
2019-07-22 18:28:14,719|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 13|base.save(var,value) - PASS stored '2' as ${length}
2019-07-22 18:28:15,323|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 14|base.save(var,value) - executing save(var,value)(mulValue, 0)
2019-07-22 18:28:15,323|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 14|base.save(var,value) - PASS stored '0' as ${mulValue}
2019-07-22 18:28:15,925|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 15|base.verbose(text) - executing verbose(text)(${unit_costList})
2019-07-22 18:28:15,925|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 15|base.verbose(text) - [LIST["$10.47","$8.74"] => replaceRegex([$],)]
2019-07-22 18:28:15,925|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 15|base.verbose(text) - PASS 
2019-07-22 18:28:16,527|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 16|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(6, -1)
2019-07-22 18:28:16,527|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #1 --------------------------------------------->
2019-07-22 18:28:16,527|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-22 18:28:16,527|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 18|base.save(var,value) - executing save(var,value)(unit_cost, $(array|item|${unit_costList}|${counter}))
2019-07-22 18:28:16,527|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 18|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${unit_cost}
2019-07-22 18:28:16,532|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 19|base.save(var,value) - executing save(var,value)(quantity, $(array|item|${quantityList}|${counter}))
2019-07-22 18:28:16,532|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 19|base.save(var,value) - [repeat-until] PASS stored '261' as ${quantity}
2019-07-22 18:28:16,532|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 20|base.save(var,value) - executing save(var,value)(mulValue, [NUMBER(${unit_cost}) => multiply(${quantity})])
2019-07-22 18:28:16,542|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 20|base.save(var,value) - [repeat-until] PASS stored '2732.67' as ${mulValue}
2019-07-22 18:28:16,547|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 21|base.save(var,value) - executing save(var,value)(sumTotal, [NUMBER(${sumTotal}) => add(${mulValue})])
2019-07-22 18:28:16,547|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 21|base.save(var,value) - [repeat-until] PASS stored '2732.67' as ${sumTotal}
2019-07-22 18:28:16,547|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 18:28:16,547|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2019-07-22 18:28:16,552|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #2 --------------------------------------------->
2019-07-22 18:28:16,552|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-22 18:28:16,552|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 18|base.save(var,value) - executing save(var,value)(unit_cost, $(array|item|${unit_costList}|${counter}))
2019-07-22 18:28:16,552|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 18|base.save(var,value) - [repeat-until] PASS stored '"$8.74"' as ${unit_cost}
2019-07-22 18:28:16,557|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 19|base.save(var,value) - executing save(var,value)(quantity, $(array|item|${quantityList}|${counter}))
2019-07-22 18:28:16,557|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 19|base.save(var,value) - [repeat-until] PASS stored '292' as ${quantity}
2019-07-22 18:28:16,557|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 20|base.save(var,value) - executing save(var,value)(mulValue, [NUMBER(${unit_cost}) => multiply(${quantity})])
2019-07-22 18:28:16,557|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 20|base.save(var,value) - [repeat-until] PASS stored '2552.08' as ${mulValue}
2019-07-22 18:28:16,557|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 21|base.save(var,value) - executing save(var,value)(sumTotal, [NUMBER(${sumTotal}) => add(${mulValue})])
2019-07-22 18:28:16,562|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 21|base.save(var,value) - [repeat-until] PASS stored '5284.75' as ${sumTotal}
2019-07-22 18:28:16,562|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 18:28:16,562|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2019-07-22 18:28:16,562|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #3 --------------------------------------------->
2019-07-22 18:28:16,562|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-22 18:28:16,562|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 16|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2019-07-22 18:28:17,163|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 23|base.verbose(text) - executing verbose(text)(${sumTotal})
2019-07-22 18:28:17,163|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 23|base.verbose(text) - 5284.75
2019-07-22 18:28:17,163|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 2|# 23|base.verbose(text) - PASS 
2019-07-22 18:28:17,163|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 3 - executing activity
2019-07-22 18:28:17,765|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 3|# 24|io.readFile(var,file) - executing readFile(var,file)(jsonFile, $(syspath|data|fullpath)/example_2.json)
2019-07-22 18:28:17,765|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 3|# 24|io.readFile(var,file) - PASS Content read from 'C:\projects\firstEvaluation\artifact\data\example_2.json' to ${jsonFile}
2019-07-22 18:28:18,371|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 3|# 25|base.save(var,value) - executing save(var,value)(var, [JSON(${jsonFile} => extract(products[unit_cost => ascending])])
2019-07-22 18:28:18,426|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 3|# 25|base.save(var,value) - PASS stored '[JSON({
	"products": 
		[{
  			"_id": {
 			   "orderid": "5968dd23fc13ae04d9000001"
  				},
  			"product_name": "sildenafil citrate",
  			"supplier": "Wisozk Inc",
  			"quantity": 261,
  			"unit_cost": "$10.47"
		}, 
		{
 			"_id": {
    			  "orderid": "5968dd23fc13ae04d9000002"
  				},
 			  "product_name": "Mountain Juniperus ashei",
  			  "supplier": "Wisozk Inc",
			  "quantity": 292,
			  "unit_cost": "$8.74"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000003"
				},
			    "product_name": "Dextromathorphan HBr",
			    "supplier": "Schmitt-Weissnat",
  		            "quantity": 211,
  			    "unit_cost": "$20.53"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000004"
 				 },
  			    "product_name": "Dextromathorphan HBr",
			    "supplier": "SC-Pharmacy",
			    "quantity": 211,
			    "unit_cost": "$20.53"
		}]
} => extract(products[unit_cost => ascending])]' as ${var}
2019-07-22 18:28:19,031|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 3|# 26|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)(${var}, products.product_name, result)
2019-07-22 18:28:19,031|E|Thread-1|Error converting string to JSON object: Expected a ',' or ']' at 7 [character 8 line 1]
org.json.JSONException: Expected a ',' or ']' at 7 [character 8 line 1]
	at org.json.JSONTokener.syntaxError(JSONTokener.java:505)
	at org.json.JSONArray.<init>(JSONArray.java:130)
	at org.json.JSONArray.<init>(JSONArray.java:147)
	at org.nexial.core.utils.JsonUtils.toJSONArray(JsonUtils.java:85)
	at org.nexial.core.plugins.json.JsonCommand.resolveToJSONObject(JsonCommand.java:318)
	at org.nexial.core.plugins.json.JsonCommand.toJSONObject(JsonCommand.java:441)
	at org.nexial.core.plugins.json.JsonCommand.sanityCheck(JsonCommand.java:445)
	at org.nexial.core.plugins.json.JsonCommand.find(JsonCommand.java:449)
	at org.nexial.core.plugins.json.JsonCommand.extractJsonValue(JsonCommand.java:384)
	at org.nexial.core.plugins.json.JsonCommand.storeValues(JsonCommand.java:123)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.nexial.core.plugins.base.BaseCommand.execute(BaseCommand.java:156)
	at org.nexial.core.model.TestStep.invokeCommand(TestStep.java:327)
	at org.nexial.core.model.TestStep.execute(TestStep.java:169)
	at org.nexial.core.model.TestCase.execute(TestCase.java:94)
	at org.nexial.core.model.TestScenario.execute(TestScenario.java:130)
	at org.nexial.core.model.ExecutionContext.execute(ExecutionContext.java:1184)
	at org.nexial.core.ExecutionThread.run(ExecutionThread.java:174)
2019-07-22 18:28:19,036|E|Thread-1|JSON string in error is as follows:
[JSON({
	"products": 
		[{
  			"_id": {
 			   "orderid": "5968dd23fc13ae04d9000001"
  				},
  			"product_name": "sildenafil citrate",
  			"supplier": "Wisozk Inc",
  			"quantity": 261,
  			"unit_cost": "$10.47"
		}, 
		{
 			"_id": {
    			  "orderid": "5968dd23fc13ae04d9000002"
  				},
 			  "product_name": "Mountain Juniperus ashei",
  			  "supplier": "Wisozk Inc",
			  "quantity": 292,
			  "unit_cost": "$8.74"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000003"
				},
			    "product_name": "Dextromathorphan HBr",
			    "supplier": "Schmitt-Weissnat",
  		            "quantity": 211,
  			    "unit_cost": "$20.53"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000004"
 				 },
  			    "product_name": "Dextromathorphan HBr",
			    "supplier": "SC-Pharmacy",
			    "quantity": 211,
			    "unit_cost": "$20.53"
		}]
} => extract(products[unit_cost => ascending])]
2019-07-22 18:28:19,066|E|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 3|# 26|json.storeValues(json,jso - FAIL invalid/malformed json: {[JSON({
	"products": 
		[{
  			"_id": {
 			   "orderid": "5968dd23fc13ae04d9000001"
  				},
  			"product_name": "sildenafil citrate",
  			"supplier": "Wisozk Inc",
  			"quantity": 261,
  			"unit_cost": "$10.47"
		}, 
		{
 			"_id": {
    			  "orderid": "5968dd23fc13ae04d9000002"
  				},
 			  "product_name": "Mountain Juniperus ashei",
  			  "supplier": "Wisozk Inc",
			  "quantity": 292,
			  "unit_cost": "$8.74"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000003"
				},
			    "product_name": "Dextromathorphan HBr",
			    "supplier": "Schmitt-Weissnat",
  		            "quantity": 211,
  			    "unit_cost": "$20.53"
		},
		{
			 "_id": {
			    "orderid": "5968dd23fc13ae04d9000004"
 				 },
  			    "product_name": "Dextromathorphan HBr",
			    "supplier": "SC-Pharmacy",
			    "quantity": 211,
			    "unit_cost": "$20.53"
		}]
} => extract(products[unit_cost => ascending])]}
2019-07-22 18:28:19,674|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 3|# 27|base.verbose(text) - executing verbose(text)(${result})
2019-07-22 18:28:19,674|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 3|# 27|base.verbose(text) - 
2019-07-22 18:28:19,674|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 3|# 27|base.verbose(text) - PASS 
2019-07-22 18:28:19,674|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 4 - executing activity
2019-07-22 18:28:20,277|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 4|# 28|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[product_name=Dextromathorphan HBr].supplier, supplierList)
2019-07-22 18:28:20,277|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 4|# 28|json.storeValues(json,jso - PASS EXPECTED match against 'products[product_name=Dextromathorphan HBr].supplier' stored to ${supplierList}
2019-07-22 18:28:20,880|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 4|# 29|base.verbose(text) - executing verbose(text)(${supplierList})
2019-07-22 18:28:20,880|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 4|# 29|base.verbose(text) - ["Schmitt-Weissnat","SC-Pharmacy"]
2019-07-22 18:28:20,880|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 4|# 29|base.verbose(text) - PASS 
2019-07-22 18:28:20,880|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5 - executing activity
2019-07-22 18:28:21,486|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 30|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products.product_name, productList)
2019-07-22 18:28:21,515|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 30|json.storeValues(json,jso - PASS EXPECTED match against 'products.product_name' stored to ${productList}
2019-07-22 18:28:22,117|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 31|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products.unit_cost, costList)
2019-07-22 18:28:22,117|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 31|json.storeValues(json,jso - PASS EXPECTED match against 'products.unit_cost' stored to ${costList}
2019-07-22 18:28:22,719|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 32|base.save(var,value) - executing save(var,value)(unit_costList, [LIST${costList} => replaceRegex([$],)])
2019-07-22 18:28:22,719|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 32|base.save(var,value) - PASS stored '[LIST["$10.47","$8.74","$20.53","$20.53"] => replaceRegex([$],)]' as ${unit_costList}
2019-07-22 18:28:23,323|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 33|base.save(var,value) - executing save(var,value)(counter, 0)
2019-07-22 18:28:23,323|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 33|base.save(var,value) - PASS stored '0' as ${counter}
2019-07-22 18:28:23,926|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 34|base.save(var,value) - executing save(var,value)(finalList, abcd)
2019-07-22 18:28:23,926|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 34|base.save(var,value) - PASS stored 'abcd' as ${finalList}
2019-07-22 18:28:24,529|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 35|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(6, -1)
2019-07-22 18:28:24,529|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #1 --------------------------------------------->
2019-07-22 18:28:24,529|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 18:28:24,529|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 18:28:24,529|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 18:28:24,529|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 38|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-22 18:28:24,533|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 38|base.save(var,value) - [repeat-until] PASS stored '10.47' as ${cost}
2019-07-22 18:28:24,533|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 18:28:24,538|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 10.47
2019-07-22 18:28:24,538|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 10.47
2019-07-22 18:28:24,538|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-22 18:28:24,538|I|Thread-1|evaluating flow control:	SkipIf(10.47>20)		=> NOT MATCHED
2019-07-22 18:28:24,543|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 40|base.verbose(text) - finalList,"sildenafil citrate"
2019-07-22 18:28:24,543|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] PASS finalList,"sildenafil citrate"
2019-07-22 18:28:24,543|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 18:28:24,543|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2019-07-22 18:28:24,543|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #2 --------------------------------------------->
2019-07-22 18:28:24,543|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 18:28:24,548|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 18:28:24,553|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '"$8.74"' as ${value}
2019-07-22 18:28:24,553|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 38|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-22 18:28:24,553|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 38|base.save(var,value) - [repeat-until] PASS stored '8.74' as ${cost}
2019-07-22 18:28:24,553|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 18:28:24,553|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 8.74
2019-07-22 18:28:24,558|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 8.74
2019-07-22 18:28:24,558|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-22 18:28:24,558|I|Thread-1|evaluating flow control:	SkipIf(8.74>20)		=> NOT MATCHED
2019-07-22 18:28:24,558|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 40|base.verbose(text) - finalList,"Mountain Juniperus ashei"
2019-07-22 18:28:24,558|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] PASS finalList,"Mountain Juniperus ashei"
2019-07-22 18:28:24,558|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 18:28:24,558|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2019-07-22 18:28:24,558|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #3 --------------------------------------------->
2019-07-22 18:28:24,558|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 18:28:24,558|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 18:28:24,558|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '"$20.53"' as ${value}
2019-07-22 18:28:24,558|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 38|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-22 18:28:24,568|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 38|base.save(var,value) - [repeat-until] PASS stored '20.53' as ${cost}
2019-07-22 18:28:24,568|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 18:28:24,568|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 20.53
2019-07-22 18:28:24,568|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 20.53
2019-07-22 18:28:24,568|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-22 18:28:24,573|I|Thread-1|evaluating flow control:	SkipIf(20.53>20)		=> MATCHED
2019-07-22 18:28:24,573|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] SKIPPED current step skipped: SkipIf(${cost} > 20)
2019-07-22 18:28:24,573|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 18:28:24,573|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 3
2019-07-22 18:28:24,573|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #4 --------------------------------------------->
2019-07-22 18:28:24,578|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 18:28:24,578|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 18:28:24,578|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '"$20.53"' as ${value}
2019-07-22 18:28:24,583|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 38|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-22 18:28:24,583|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 38|base.save(var,value) - [repeat-until] PASS stored '20.53' as ${cost}
2019-07-22 18:28:24,583|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 18:28:24,583|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 20.53
2019-07-22 18:28:24,583|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 20.53
2019-07-22 18:28:24,583|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-22 18:28:24,583|I|Thread-1|evaluating flow control:	SkipIf(20.53>20)		=> MATCHED
2019-07-22 18:28:24,583|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] SKIPPED current step skipped: SkipIf(${cost} > 20)
2019-07-22 18:28:24,583|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 18:28:24,588|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 4
2019-07-22 18:28:24,588|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - 
<[repeat-until] entering loop #5 --------------------------------------------->
2019-07-22 18:28:24,588|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 18:28:24,588|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 35|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2019-07-22 18:28:25,189|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 42|base.verbose(text) - executing verbose(text)(${finalList})
2019-07-22 18:28:25,189|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 42|base.verbose(text) - abcd
2019-07-22 18:28:25,189|I|Thread-1|firstEvaluation.20190722_182807.001|JsonScenario|Activity 5|# 42|base.verbose(text) - PASS 
2019-07-22 18:28:25,384|I|Thread-1|[firstEvaluation.20190722_182807.001|JsonScenario] saving test scenario
2019-07-22 18:28:25,459|I|Thread-1|firstEvaluation.20190722_182807.001|XMLScenario - executing test scenario
2019-07-22 18:28:25,464|I|Thread-1|firstEvaluation.20190722_182807.001|XMLScenario|Activity 1 - executing activity
2019-07-22 18:28:26,065|I|Thread-1|firstEvaluation.20190722_182807.001|XMLScenario|Activity 1|#  5|io.readFile(var,file) - executing readFile(var,file)(xmlFile, $(syspath|data|fullpath)/example_1.xml)
2019-07-22 18:28:26,104|I|Thread-1|firstEvaluation.20190722_182807.001|XMLScenario|Activity 1|#  5|io.readFile(var,file) - PASS Content read from 'C:\projects\firstEvaluation\artifact\data\example_1.xml' to ${xmlFile}
2019-07-22 18:28:26,705|I|Thread-1|firstEvaluation.20190722_182807.001|XMLScenario|Activity 1|#  6|base.verbose(text) - executing verbose(text)(${xmlFile})
2019-07-22 18:28:26,705|I|Thread-1|firstEvaluation.20190722_182807.001|XMLScenario|Activity 1|#  6|base.verbose(text) - <?xml version="1.0"?>
<catalog>
   <book id="bk101">
      <author>Gambardella, Matthew</author>
      <title>XML Developer's Guide</title>
      <genre>Computer</genre>
      <price>44.95</price>
      <publish_date>2000-10-01</publish_date>
      <description>An in-depth look at creating applications 
      with XML.</description>
   </book>
   <book id="bk102">
      <author>Ralls, Kim</author>
      <title>Midnight Rain</title>
      <genre>Fantasy</genre>
      <price>5.95</price>
      <publish_date>2000-12-16</publish_date>
      <description>A former architect battles corporate zombies, 
      an evil sorceress, and her own childhood to become queen 
      of the world.</description>
   </book>
   <book id="bk103">
      <author>Corets, Eva</author>
      <title>Maeve Ascendant</title>
      <genre>Fantasy</genre>
      <price>5.95</price>
      <publish_date>2000-11-17</publish_date>
      <description>After the collapse of a nanotechnology 
      society in England, the young survivors lay the 
      foundation for a new society.</description>
   </book>
   <book id="bk104">
      <author>Corets, Eva</author>
      <title>Oberon's Legacy</title>
      <genre>Fantasy</genre>
      <price>5.95</price>
      <publish_date>2001-03-10</publish_date>
      <description>In post-apocalypse England, the mysterious 
      agent known only as Oberon helps to create a new life 
      for the inhabitants of London. Sequel to Maeve 
      Ascendant.</description>
   </book>
   <book id="bk105">
      <author>Corets, Eva</author>
      <title>The Sundered Grail</title>
      <genre>Fantasy</genre>
      <price>5.95</price>
      <publish_date>2001-09-10</publish_date>
      <description>The two daughters of Maeve, half-sisters, 
      battle one another for control of England. Sequel to 
      Oberon's Legacy.</description>
   </book>
   <book id="bk106">
      <author>Randall, Cynthia</author>
      <title>Lover Birds</title>
      <genre>Romance</genre>
      <price>4.95</price>
      <publish_date>2000-09-02</publish_date>
      <description>When Carla meets Paul at an ornithology 
      conference, tempers fly as feathers get ruffled.</description>
   </book>
   <book id="bk107">
      <author>Thurman, Paula</author>
      <title>Splish Splash</title>
      <genre>Romance</genre>
      <price>4.95</price>
      <publish_date>2000-11-02</publish_date>
      <description>A deep sea diver finds true love twenty 
      thousand leagues beneath the sea.</description>
   </book>
   <book id="bk108">
      <author>Knorr, Stefan</author>
      <title>Creepy Crawlies</title>
      <genre>Horror</genre>
      <price>4.95</price>
      <publish_date>2000-12-06</publish_date>
      <description>An anthology of horror stories about roaches,
      centipedes, scorpions  and other insects.</description>
   </book>
   <book id="bk109">
      <author>Kress, Peter</author>
      <title>Paradox Lost</title>
      <genre>Science Fiction</genre>
      <price>6.95</price>
      <publish_date>2000-11-02</publish_date>
      <description>After an inadvertant trip through a Heisenberg
      Uncertainty Device, James Salway discovers the problems 
      of being quantum.</description>
   </book>
   <book id="bk110">
      <author>O'Brien, Tim</author>
      <title>Microsoft .NET: The Programming Bible</title>
      <genre>Computer</genre>
      <price>36.95</price>
      <publish_date>2000-12-09</publish_date>
      <description>Microsoft's .NET initiative is explored in 
      detail in this deep programmer's reference.</description>
   </book>
   <book id="bk111">
      <author>O'Brien, Tim</author>
      <title>MSXML3: A Comprehensive Guide</title>
      <genre>Computer</genre>
      <price>36.95</price>
      <publish_date>2000-12-01</publish_date>
      <description>The Microsoft MSXML3 parser is covered in 
      detail, with attention to XML DOM interfaces, XSLT processing, 
      SAX and more.</description>
   </book>
   <book id="bk112">
      <author>Galos, Mike</author>
      <title>Visual Studio 7: A Comprehensive Guide</title>
      <genre>Computer</genre>
      <price>49.95</price>
      <publish_date>2001-04-16</publish_date>
      <description>Microsoft Visual Studio 7 is explored in depth,
      looking at how Visual Basic, Visual C++, C#, and ASP+ are 
      integrated into a comprehensive development 
      environment.</description>
   </book>
</catalog>
2019-07-22 18:28:26,790|I|Thread-1|firstEvaluation.20190722_182807.001|XMLScenario|Activity 1|#  6|base.verbose(text) - PASS 
2019-07-22 18:28:26,805|I|Thread-1|[firstEvaluation.20190722_182807.001|XMLScenario] saving test scenario
2019-07-22 18:28:26,875|I|Thread-1|[20190722_182806] 
/-TEST COMPLETE-----------------------------------------------------------------
| Test Output:    C:\projects\firstEvaluation\output\20190722_182806\firstEvaluation.20190722_182807.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 17803 ms
» Test Steps:     28
» Error(s):       1



2019-07-22 18:28:28,862|I|Thread-1|[20190722_182806] 
/-TEST COMPLETE-----------------------------------------------------------------
| Test Script:    C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 21942 ms
» Iterations:     [1] total 1
» Test Steps:     28
» Passed:         27
» Error(s):       1
» Iteration 1 of 1: C:\projects\firstEvaluation\output\20190722_182806\firstEvaluation.20190722_182807.001.xlsx



2019-07-22 18:28:28,942|I|main|[20190722_182806] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] now completed
2019-07-22 18:28:28,952|I|main|[20190722_182806] all execution thread(s) have terminated
2019-07-22 18:28:28,957|I|main|[20190722_182806] test run completed in about 22 seconds
2019-07-22 18:28:29,047|I|main|No predefined nexial-setup found
2019-07-22 18:28:29,087|I|main|outputBase not set; output-to-cloud DISABLED!
2019-07-22 18:28:29,087|I|main|accessKey not set; output-to-cloud DISABLED!
2019-07-22 18:28:29,087|I|main|secretKey not set; output-to-cloud DISABLED!
2019-07-22 18:28:29,087|I|main|generating HTML output for this execution to C:\projects\firstEvaluation\output\20190722_182806\execution-output.html
2019-07-22 18:28:29,772|I|main|generating JUnit XML output for this execution to C:\projects\firstEvaluation\output\20190722_182806\junit.xml
2019-07-22 18:28:29,822|I|main|generated JUnit report for this execution: C:\projects\firstEvaluation\output\20190722_182806\junit.xml
2019-07-22 18:28:29,862|I|main|nexial mailer not enabled: nexial.enableEmail=false
2019-07-22 18:28:29,862|I|main|skipped email notification as configured
2019-07-22 18:28:29,862|I|main|exiting Nexial...
2019-07-22 18:28:29,862|I|main|

/-END OF EXECUTION--------------------------------------------------------------
| » Execution Time: 22 sec.
| » Test Steps....: 28
| » Passed........: 27
| » Failed........: 1
| » Success Rate..: 96.43%
\----------------------------------------------------------nexial-core dev_0581-

2019-07-22 18:28:29,862|E|main|failure found; success rate is 96.43%
2019-07-22 18:28:29,862|I|main|End of Execution:
NEXIAL_OUTPUT:         C:\projects\firstEvaluation\output\20190722_182806
NEXIAL_EXECUTION_HTML: C:\projects\firstEvaluation\output\20190722_182806\execution-output.html
NEXIAL_JUNIT_XML:      C:\projects\firstEvaluation\output\20190722_182806\junit.xml
NEXIAL_SUCCESS_RATE:   96.43%
NEXIAL_EXIT_STATUS:    -13
