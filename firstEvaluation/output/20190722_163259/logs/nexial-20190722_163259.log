2019-07-22 16:32:59,960|I|Thread-1|(DELAYED) nexial-core dev_0581 starting up...
2019-07-22 16:32:59,962|I|Thread-1|(DELAYED) data file resolved as C:\Users\DEEPAN~1\AppData\Local\Temp\NplMM\firstEvaluation.data.xlsx
2019-07-22 16:32:59,962|I|Thread-1|(DELAYED) input files and output directory resolved...
2019-07-22 16:32:59,962|I|Thread-1|(DELAYED) No predefined nexial-setup found
2019-07-22 16:32:59,962|I|Thread-1|(DELAYED) [20190722_163259] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] resolve RUN ID as 20190722_163259
2019-07-22 16:32:59,962|I|Thread-1|(DELAYED) [20190722_163259] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] new thread started
2019-07-22 16:32:59,963|I|Thread-1|No predefined nexial-setup found
2019-07-22 16:33:00,031|I|Thread-1|outputBase not set; output-to-cloud DISABLED!
2019-07-22 16:33:00,031|I|Thread-1|accessKey not set; output-to-cloud DISABLED!
2019-07-22 16:33:00,031|I|Thread-1|secretKey not set; output-to-cloud DISABLED!
2019-07-22 16:33:00,049|I|Thread-1|missing REQUIRED configuration; sms DISABLED!
2019-07-22 16:33:00,715|I|Thread-1|[20190722_163259] executing C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx with 1 iteration(s)
2019-07-22 16:33:00,720|I|Thread-1|[20190722_163259] create directory C:\projects\firstEvaluation\output\20190722_163259\captures
2019-07-22 16:33:00,721|I|Thread-1|[20190722_163259] create directory C:\projects\firstEvaluation\output\20190722_163259\logs
2019-07-22 16:33:01,070|I|Thread-1|[20190722_163259] merging test data to tmp file C:\projects\firstEvaluation\output\20190722_163259\firstEvaluation.20190722_163300.001.xlsx
2019-07-22 16:33:01,070|I|Thread-1|refetching data from C:\projects\firstEvaluation\artifact\data\firstEvaluation.data.xlsx
2019-07-22 16:33:01,227|I|Thread-1|[20190722_163259] test script and test data merged to C:\projects\firstEvaluation\output\20190722_163259\firstEvaluation.20190722_163300.001.xlsx
2019-07-22 16:33:01,764|I|Thread-1|STARTS
2019-07-22 16:33:01,791|I|Thread-1|firstEvaluation.20190722_163300.001 - executing iteration #1 of 1; Iteration Id 1
2019-07-22 16:33:01,801|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario - executing test scenario
2019-07-22 16:33:01,801|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 1 - executing activity
2019-07-22 16:33:02,403|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 1|#  5|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].product_name, productNames)
2019-07-22 16:33:02,478|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 1|#  5|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].product_name' stored to ${productNames}
2019-07-22 16:33:03,079|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 1|#  6|base.verbose(text) - executing verbose(text)(${productNames})
2019-07-22 16:33:03,080|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 1|#  6|base.verbose(text) - ["sildenafil citrate","Mountain Juniperus ashei"]
2019-07-22 16:33:03,218|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 1|#  6|base.verbose(text) - PASS 
2019-07-22 16:33:03,220|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2 - executing activity
2019-07-22 16:33:03,821|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|#  7|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].quantity, quantityList)
2019-07-22 16:33:03,824|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|#  7|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].quantity' stored to ${quantityList}
2019-07-22 16:33:04,427|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|#  8|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].unit_cost, costList)
2019-07-22 16:33:04,429|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|#  8|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].unit_cost' stored to ${costList}
2019-07-22 16:33:05,031|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|#  9|base.save(var,value) - executing save(var,value)(unit_costList, [LIST${costList} => replaceRegex([$],)])
2019-07-22 16:33:05,033|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|#  9|base.save(var,value) - PASS stored '[LIST["$10.47","$8.74"] => replaceRegex([$],)]' as ${unit_costList}
2019-07-22 16:33:05,634|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 10|base.verbose(text) - executing verbose(text)(${unit_costList})
2019-07-22 16:33:05,635|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 10|base.verbose(text) - [LIST["$10.47","$8.74"] => replaceRegex([$],)]
2019-07-22 16:33:05,637|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 10|base.verbose(text) - PASS 
2019-07-22 16:33:06,238|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 11|base.save(var,value) - executing save(var,value)(sumTotal, 0)
2019-07-22 16:33:06,239|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 11|base.save(var,value) - PASS stored '0' as ${sumTotal}
2019-07-22 16:33:06,840|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 12|base.save(var,value) - executing save(var,value)(counter, 0)
2019-07-22 16:33:06,841|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 12|base.save(var,value) - PASS stored '0' as ${counter}
2019-07-22 16:33:07,443|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 13|base.save(var,value) - executing save(var,value)(length, $(array|length|${quantityList}))
2019-07-22 16:33:07,446|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 13|base.save(var,value) - PASS stored '2' as ${length}
2019-07-22 16:33:08,047|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 14|base.save(var,value) - executing save(var,value)(mulValue, 0)
2019-07-22 16:33:08,049|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 14|base.save(var,value) - PASS stored '0' as ${mulValue}
2019-07-22 16:33:08,650|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 15|base.verbose(text) - executing verbose(text)(${unit_costList})
2019-07-22 16:33:08,651|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 15|base.verbose(text) - [LIST["$10.47","$8.74"] => replaceRegex([$],)]
2019-07-22 16:33:08,652|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 15|base.verbose(text) - PASS 
2019-07-22 16:33:09,253|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 16|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(6, -1)
2019-07-22 16:33:09,254|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #1 --------------------------------------------->
2019-07-22 16:33:09,254|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-22 16:33:09,255|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 18|base.save(var,value) - executing save(var,value)(unit_cost, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:33:09,257|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 18|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${unit_cost}
2019-07-22 16:33:09,258|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 19|base.save(var,value) - executing save(var,value)(quantity, $(array|item|${quantityList}|${counter}))
2019-07-22 16:33:09,259|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 19|base.save(var,value) - [repeat-until] PASS stored '261' as ${quantity}
2019-07-22 16:33:09,259|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 20|base.save(var,value) - executing save(var,value)(mulValue, [NUMBER(${unit_cost}) => multiply(${quantity})])
2019-07-22 16:33:09,270|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 20|base.save(var,value) - [repeat-until] PASS stored '2732.67' as ${mulValue}
2019-07-22 16:33:09,272|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 21|base.save(var,value) - executing save(var,value)(sumTotal, [NUMBER(${sumTotal}) => add(${mulValue})])
2019-07-22 16:33:09,276|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 21|base.save(var,value) - [repeat-until] PASS stored '2732.67' as ${sumTotal}
2019-07-22 16:33:09,277|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 16:33:09,279|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2019-07-22 16:33:09,280|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #2 --------------------------------------------->
2019-07-22 16:33:09,280|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-22 16:33:09,281|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 18|base.save(var,value) - executing save(var,value)(unit_cost, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:33:09,282|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 18|base.save(var,value) - [repeat-until] PASS stored '"$8.74"' as ${unit_cost}
2019-07-22 16:33:09,283|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 19|base.save(var,value) - executing save(var,value)(quantity, $(array|item|${quantityList}|${counter}))
2019-07-22 16:33:09,283|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 19|base.save(var,value) - [repeat-until] PASS stored '292' as ${quantity}
2019-07-22 16:33:09,284|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 20|base.save(var,value) - executing save(var,value)(mulValue, [NUMBER(${unit_cost}) => multiply(${quantity})])
2019-07-22 16:33:09,285|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 20|base.save(var,value) - [repeat-until] PASS stored '2552.08' as ${mulValue}
2019-07-22 16:33:09,292|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 21|base.save(var,value) - executing save(var,value)(sumTotal, [NUMBER(${sumTotal}) => add(${mulValue})])
2019-07-22 16:33:09,296|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 21|base.save(var,value) - [repeat-until] PASS stored '5284.75' as ${sumTotal}
2019-07-22 16:33:09,297|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 16:33:09,298|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2019-07-22 16:33:09,301|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #3 --------------------------------------------->
2019-07-22 16:33:09,301|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-22 16:33:09,303|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 16|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2019-07-22 16:33:09,906|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 23|base.verbose(text) - executing verbose(text)(${sumTotal})
2019-07-22 16:33:09,906|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 23|base.verbose(text) - 5284.75
2019-07-22 16:33:09,906|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 2|# 23|base.verbose(text) - PASS 
2019-07-22 16:33:09,911|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 3 - executing activity
2019-07-22 16:33:10,511|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 3|# 24|base.save(var,value) - executing save(var,value)(jsonFile, $(syspath|data|fullpath)/example_2.json)
2019-07-22 16:33:10,514|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 3|# 24|base.save(var,value) - PASS stored 'C:\projects\firstEvaluation\artifact\data\example_2.json' as ${jsonFile}
2019-07-22 16:33:11,116|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 3|# 25|base.save(var,value) - executing save(var,value)(var, [JSON(${jsonFile} => extract(products[unit_cost => ascending])])
2019-07-22 16:33:11,117|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 3|# 25|base.save(var,value) - PASS stored '[JSON(C:\projects\firstEvaluation\artifact\data\example_2.json => extract(products[unit_cost => ascending])]' as ${var}
2019-07-22 16:33:11,719|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 3|# 26|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)(var, products.product_name, result)
2019-07-22 16:33:11,722|E|Thread-1|Error converting string to JSON object: A JSONObject text must begin with '{' at 1 [character 2 line 1]
org.json.JSONException: A JSONObject text must begin with '{' at 1 [character 2 line 1]
	at org.json.JSONTokener.syntaxError(JSONTokener.java:505)
	at org.json.JSONObject.<init>(JSONObject.java:214)
	at org.json.JSONObject.<init>(JSONObject.java:357)
	at org.nexial.core.utils.JsonUtils.toJSONObject(JsonUtils.java:75)
	at org.nexial.core.plugins.json.JsonCommand.resolveToJSONObject(JsonCommand.java:323)
	at org.nexial.core.plugins.json.JsonCommand.toJSONObject(JsonCommand.java:441)
	at org.nexial.core.plugins.json.JsonCommand.sanityCheck(JsonCommand.java:445)
	at org.nexial.core.plugins.json.JsonCommand.find(JsonCommand.java:449)
	at org.nexial.core.plugins.json.JsonCommand.extractJsonValue(JsonCommand.java:384)
	at org.nexial.core.plugins.json.JsonCommand.storeValues(JsonCommand.java:123)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.nexial.core.plugins.base.BaseCommand.execute(BaseCommand.java:156)
	at org.nexial.core.model.TestStep.invokeCommand(TestStep.java:327)
	at org.nexial.core.model.TestStep.execute(TestStep.java:169)
	at org.nexial.core.model.TestCase.execute(TestCase.java:94)
	at org.nexial.core.model.TestScenario.execute(TestScenario.java:130)
	at org.nexial.core.model.ExecutionContext.execute(ExecutionContext.java:1184)
	at org.nexial.core.ExecutionThread.run(ExecutionThread.java:174)
2019-07-22 16:33:11,724|E|Thread-1|JSON string in error is as follows:
var
2019-07-22 16:33:11,726|E|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 3|# 26|json.storeValues(json,jso - FAIL EXPECTED match against 'products.product_name' was not found
2019-07-22 16:33:12,326|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 3|# 27|base.verbose(text) - executing verbose(text)(result)
2019-07-22 16:33:12,326|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 3|# 27|base.verbose(text) - result
2019-07-22 16:33:12,328|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 3|# 27|base.verbose(text) - PASS 
2019-07-22 16:33:12,329|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 4 - executing activity
2019-07-22 16:33:12,930|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 4|# 28|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[product_name=Dextromathorphan HBr].supplier, supplierList)
2019-07-22 16:33:12,932|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 4|# 28|json.storeValues(json,jso - PASS EXPECTED match against 'products[product_name=Dextromathorphan HBr].supplier' stored to ${supplierList}
2019-07-22 16:33:13,534|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 4|# 29|base.verbose(text) - executing verbose(text)(${supplierList})
2019-07-22 16:33:13,534|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 4|# 29|base.verbose(text) - ["Schmitt-Weissnat","SC-Pharmacy"]
2019-07-22 16:33:13,536|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 4|# 29|base.verbose(text) - PASS 
2019-07-22 16:33:13,537|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5 - executing activity
2019-07-22 16:33:14,138|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 30|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products.product_name, productList)
2019-07-22 16:33:14,169|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 30|json.storeValues(json,jso - PASS EXPECTED match against 'products.product_name' stored to ${productList}
2019-07-22 16:33:14,771|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 31|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products.unit_cost, costList)
2019-07-22 16:33:14,773|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 31|json.storeValues(json,jso - PASS EXPECTED match against 'products.unit_cost' stored to ${costList}
2019-07-22 16:33:15,375|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 32|base.save(var,value) - executing save(var,value)(unit_costList, [LIST${costList} => replaceRegex([$],)])
2019-07-22 16:33:15,377|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 32|base.save(var,value) - PASS stored '[LIST["$10.47","$8.74","$20.53","$20.53"] => replaceRegex([$],)]' as ${unit_costList}
2019-07-22 16:33:15,978|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 33|base.save(var,value) - executing save(var,value)(counter, 0)
2019-07-22 16:33:15,980|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 33|base.save(var,value) - PASS stored '0' as ${counter}
2019-07-22 16:33:16,582|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 34|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(7, -1)
2019-07-22 16:33:16,583|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #1 --------------------------------------------->
2019-07-22 16:33:16,584|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:33:16,584|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:33:16,585|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:33:16,586|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-22 16:33:16,589|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '10.47' as ${cost}
2019-07-22 16:33:16,589|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 38|base .save(var,value) - executing save(var,value)(cost, [NUMBER(${cost}) => multiply(1)])
2019-07-22 16:33:16,590|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:33:16,590|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 10.47
2019-07-22 16:33:16,590|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 10.47
2019-07-22 16:33:16,591|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(${finalList}) => append($(array|item|${productList}|${counter}))])
2019-07-22 16:33:16,596|I|Thread-1|evaluating flow control:	SkipIf(10.47>20)		=> NOT MATCHED
2019-07-22 16:33:16,596|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [LIST() => append("sildenafil citrate")]
2019-07-22 16:33:16,597|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] PASS [LIST() => append("sildenafil citrate")]
2019-07-22 16:33:16,598|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 16:33:16,599|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2019-07-22 16:33:16,601|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #2 --------------------------------------------->
2019-07-22 16:33:16,602|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:33:16,602|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:33:16,606|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$8.74"' as ${value}
2019-07-22 16:33:16,607|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-22 16:33:16,607|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '8.74' as ${cost}
2019-07-22 16:33:16,608|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 38|base .save(var,value) - executing save(var,value)(cost, [NUMBER(${cost}) => multiply(1)])
2019-07-22 16:33:16,608|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:33:16,608|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 8.74
2019-07-22 16:33:16,608|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 8.74
2019-07-22 16:33:16,609|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(${finalList}) => append($(array|item|${productList}|${counter}))])
2019-07-22 16:33:16,609|I|Thread-1|evaluating flow control:	SkipIf(8.74>20)		=> NOT MATCHED
2019-07-22 16:33:16,610|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [LIST() => append("Mountain Juniperus ashei")]
2019-07-22 16:33:16,610|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] PASS [LIST() => append("Mountain Juniperus ashei")]
2019-07-22 16:33:16,610|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 16:33:16,611|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2019-07-22 16:33:16,611|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #3 --------------------------------------------->
2019-07-22 16:33:16,611|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:33:16,612|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:33:16,625|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$20.53"' as ${value}
2019-07-22 16:33:16,626|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-22 16:33:16,627|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '20.53' as ${cost}
2019-07-22 16:33:16,627|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 38|base .save(var,value) - executing save(var,value)(cost, [NUMBER(${cost}) => multiply(1)])
2019-07-22 16:33:16,628|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:33:16,628|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 20.53
2019-07-22 16:33:16,629|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 20.53
2019-07-22 16:33:16,629|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(${finalList}) => append($(array|item|${productList}|${counter}))])
2019-07-22 16:33:16,630|I|Thread-1|evaluating flow control:	SkipIf(20.53>20)		=> MATCHED
2019-07-22 16:33:16,632|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] SKIPPED current step skipped: SkipIf(${cost} > 20)
2019-07-22 16:33:16,632|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 16:33:16,637|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 3
2019-07-22 16:33:16,638|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #4 --------------------------------------------->
2019-07-22 16:33:16,638|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:33:16,639|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:33:16,640|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$20.53"' as ${value}
2019-07-22 16:33:16,640|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-22 16:33:16,641|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored '20.53' as ${cost}
2019-07-22 16:33:16,642|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 38|base .save(var,value) - executing save(var,value)(cost, [NUMBER(${cost}) => multiply(1)])
2019-07-22 16:33:16,642|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:33:16,642|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 39|base.verbose(text) - 20.53
2019-07-22 16:33:16,643|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS 20.53
2019-07-22 16:33:16,643|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 40|base.verbose(text) - executing verbose(text)([LIST(${finalList}) => append($(array|item|${productList}|${counter}))])
2019-07-22 16:33:16,643|I|Thread-1|evaluating flow control:	SkipIf(20.53>20)		=> MATCHED
2019-07-22 16:33:16,643|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 40|base.verbose(text) - [repeat-until] SKIPPED current step skipped: SkipIf(${cost} > 20)
2019-07-22 16:33:16,644|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 16:33:16,644|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 41|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 4
2019-07-22 16:33:16,644|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #5 --------------------------------------------->
2019-07-22 16:33:16,645|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:33:16,646|I|Thread-1|firstEvaluation.20190722_163300.001|JsonScenario|Activity 5|# 34|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2019-07-22 16:33:16,843|I|Thread-1|[firstEvaluation.20190722_163300.001|JsonScenario] saving test scenario
2019-07-22 16:33:16,931|I|Thread-1|firstEvaluation.20190722_163300.001|XMLScenario - executing test scenario
2019-07-22 16:33:16,933|I|Thread-1|firstEvaluation.20190722_163300.001|XMLScenario|Activity 1 - executing activity
2019-07-22 16:33:17,535|I|Thread-1|firstEvaluation.20190722_163300.001|XMLScenario|Activity 1|#  5|xml.storeValues(xml,xpath - executing storeValues(xml,xpath,var)($(syspath|data|fullpath)/example_1.xml)
2019-07-22 16:33:17,539|E|Thread-1|firstEvaluation.20190722_163300.001|XMLScenario|Activity 1|#  5|xml.storeValues(xml,xpath - FAIL MISMATCHED parameters - xml.storeValues EXPECTS 3 but found 1
2019-07-22 16:33:17,560|I|Thread-1|[firstEvaluation.20190722_163300.001|XMLScenario] saving test scenario
2019-07-22 16:33:17,625|I|Thread-1|[20190722_163259] 
/-TEST COMPLETE-----------------------------------------------------------------
| Test Output:    C:\projects\firstEvaluation\output\20190722_163259\firstEvaluation.20190722_163300.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 15828 ms
» Test Steps:     25
» Error(s):       2



2019-07-22 16:33:19,519|I|Thread-1|[20190722_163259] 
/-TEST COMPLETE-----------------------------------------------------------------
| Test Script:    C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 19679 ms
» Iterations:     [1] total 1
» Test Steps:     25
» Passed:         23
» Error(s):       2
» Iteration 1 of 1: C:\projects\firstEvaluation\output\20190722_163259\firstEvaluation.20190722_163300.001.xlsx



2019-07-22 16:33:19,805|I|main|[20190722_163259] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] now completed
2019-07-22 16:33:19,806|I|main|[20190722_163259] all execution thread(s) have terminated
2019-07-22 16:33:19,806|I|main|[20190722_163259] test run completed in about 20 seconds
2019-07-22 16:33:19,854|I|main|No predefined nexial-setup found
2019-07-22 16:33:19,872|I|main|outputBase not set; output-to-cloud DISABLED!
2019-07-22 16:33:19,872|I|main|accessKey not set; output-to-cloud DISABLED!
2019-07-22 16:33:19,872|I|main|secretKey not set; output-to-cloud DISABLED!
2019-07-22 16:33:19,875|I|main|generating HTML output for this execution to C:\projects\firstEvaluation\output\20190722_163259\execution-output.html
2019-07-22 16:33:20,484|I|main|generating JUnit XML output for this execution to C:\projects\firstEvaluation\output\20190722_163259\junit.xml
2019-07-22 16:33:20,530|I|main|generated JUnit report for this execution: C:\projects\firstEvaluation\output\20190722_163259\junit.xml
2019-07-22 16:33:20,634|I|main|nexial mailer not enabled: nexial.enableEmail=false
2019-07-22 16:33:20,635|I|main|skipped email notification as configured
2019-07-22 16:33:20,636|I|main|exiting Nexial...
2019-07-22 16:33:20,637|I|main|

/-END OF EXECUTION--------------------------------------------------------------
| » Execution Time: 20 sec.
| » Test Steps....: 25
| » Passed........: 23
| » Failed........: 2
| » Success Rate..: 92.00%
\----------------------------------------------------------nexial-core dev_0581-

2019-07-22 16:33:20,637|E|main|failure found; success rate is 92.00%
2019-07-22 16:33:20,637|I|main|End of Execution:
NEXIAL_OUTPUT:         C:\projects\firstEvaluation\output\20190722_163259
NEXIAL_EXECUTION_HTML: C:\projects\firstEvaluation\output\20190722_163259\execution-output.html
NEXIAL_JUNIT_XML:      C:\projects\firstEvaluation\output\20190722_163259\junit.xml
NEXIAL_SUCCESS_RATE:   92.00%
NEXIAL_EXIT_STATUS:    -13
