2019-07-23 11:36:31,465|I|Thread-1|(DELAYED) nexial-core 2.4_0567 starting up...
2019-07-23 11:36:31,472|I|Thread-1|(DELAYED) data file resolved as C:\Users\DEEPAN~1.PAT\AppData\Local\Temp\jkPAE\firstEvaluation.data.xlsx
2019-07-23 11:36:31,472|I|Thread-1|(DELAYED) input files and output directory resolved...
2019-07-23 11:36:31,472|I|Thread-1|(DELAYED) No predefined nexial-setup found
2019-07-23 11:36:31,472|I|Thread-1|(DELAYED) [20190723_113631] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] resolve RUN ID as 20190723_113631
2019-07-23 11:36:31,472|I|Thread-1|(DELAYED) [20190723_113631] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] new thread started
2019-07-23 11:36:31,473|I|Thread-1|No predefined nexial-setup found
2019-07-23 11:36:31,547|I|Thread-1|outputBase not set; output-to-cloud DISABLED!
2019-07-23 11:36:31,548|I|Thread-1|accessKey not set; output-to-cloud DISABLED!
2019-07-23 11:36:31,549|I|Thread-1|secretKey not set; output-to-cloud DISABLED!
2019-07-23 11:36:31,577|I|Thread-1|missing REQUIRED configuration; sms DISABLED!
2019-07-23 11:36:32,345|I|Thread-1|[20190723_113631] executing C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx with 1 iteration(s)
2019-07-23 11:36:32,350|I|Thread-1|[20190723_113631] create directory C:\projects\firstEvaluation\output\20190723_113631\captures
2019-07-23 11:36:32,352|I|Thread-1|[20190723_113631] create directory C:\projects\firstEvaluation\output\20190723_113631\logs
2019-07-23 11:36:33,191|I|Thread-1|[20190723_113631] merging test data to tmp file C:\projects\firstEvaluation\output\20190723_113631\firstEvaluation.20190723_113632.001.xlsx
2019-07-23 11:36:33,193|I|Thread-1|refetching data from C:\projects\firstEvaluation\artifact\data\firstEvaluation.data.xlsx
2019-07-23 11:36:33,480|I|Thread-1|[20190723_113631] test script and test data merged to C:\projects\firstEvaluation\output\20190723_113631\firstEvaluation.20190723_113632.001.xlsx
2019-07-23 11:36:34,093|I|Thread-1|STARTS
2019-07-23 11:36:34,134|I|Thread-1|firstEvaluation.20190723_113632.001 - executing iteration #1 of 1; Iteration Id 1
2019-07-23 11:36:34,143|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario - executing test scenario
2019-07-23 11:36:34,145|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 1 - executing activity
2019-07-23 11:36:34,748|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 1|#  5|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].product_name, productNames)
2019-07-23 11:36:34,858|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 1|#  5|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].product_name' stored to ${productNames}
2019-07-23 11:36:35,483|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 1|#  6|base.verbose(text) - executing verbose(text)(${productNames})
2019-07-23 11:36:35,483|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 1|#  6|base.verbose(text) - ["sildenafil citrate","Mountain Juniperus ashei"]
2019-07-23 11:36:35,639|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 1|#  6|base.verbose(text) - PASS 
2019-07-23 11:36:35,639|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2 - executing activity
2019-07-23 11:36:36,239|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|#  7|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].quantity, quantityList)
2019-07-23 11:36:36,259|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|#  7|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].quantity' stored to ${quantityList}
2019-07-23 11:36:36,870|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|#  8|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].unit_cost, costList)
2019-07-23 11:36:36,874|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|#  8|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].unit_cost' stored to ${costList}
2019-07-23 11:36:37,476|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|#  9|base.save(var,value) - executing save(var,value)(unit_costList, [LIST${costList} => replaceRegex([$],)])
2019-07-23 11:36:37,489|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|#  9|base.save(var,value) - PASS stored '[LIST["$10.47","$8.74"] => replaceRegex([$],)]' as ${unit_costList}
2019-07-23 11:36:38,093|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 10|base.verbose(text) - executing verbose(text)(${unit_costList})
2019-07-23 11:36:38,097|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 10|base.verbose(text) - [LIST["$10.47","$8.74"] => replaceRegex([$],)]
2019-07-23 11:36:38,106|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 10|base.verbose(text) - PASS 
2019-07-23 11:36:38,711|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 11|base.save(var,value) - executing save(var,value)(sumTotal, 0)
2019-07-23 11:36:38,718|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 11|base.save(var,value) - PASS stored '0' as ${sumTotal}
2019-07-23 11:36:39,322|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 12|base.save(var,value) - executing save(var,value)(counter, 0)
2019-07-23 11:36:39,328|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 12|base.save(var,value) - PASS stored '0' as ${counter}
2019-07-23 11:36:39,932|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 13|base.save(var,value) - executing save(var,value)(length, $(array|length|${quantityList}))
2019-07-23 11:36:39,945|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 13|base.save(var,value) - PASS stored '2' as ${length}
2019-07-23 11:36:40,550|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 14|base.save(var,value) - executing save(var,value)(mulValue, 0)
2019-07-23 11:36:40,555|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 14|base.save(var,value) - PASS stored '0' as ${mulValue}
2019-07-23 11:36:41,160|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 15|base.verbose(text) - executing verbose(text)(${unit_costList})
2019-07-23 11:36:41,165|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 15|base.verbose(text) - [LIST["$10.47","$8.74"] => replaceRegex([$],)]
2019-07-23 11:36:41,176|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 15|base.verbose(text) - PASS 
2019-07-23 11:36:41,780|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 16|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(6, -1)
2019-07-23 11:36:41,784|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #1 --------------------------------------------->
2019-07-23 11:36:41,789|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-23 11:36:41,799|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 18|base.save(var,value) - executing save(var,value)(unit_cost, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:36:41,806|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 18|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${unit_cost}
2019-07-23 11:36:41,812|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 19|base.save(var,value) - executing save(var,value)(quantity, $(array|item|${quantityList}|${counter}))
2019-07-23 11:36:41,816|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 19|base.save(var,value) - [repeat-until] PASS stored '261' as ${quantity}
2019-07-23 11:36:41,820|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 20|base.save(var,value) - executing save(var,value)(mulValue, [NUMBER(${unit_cost}) => multiply(${quantity})])
2019-07-23 11:36:41,843|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 20|base.save(var,value) - [repeat-until] PASS stored '2732.67' as ${mulValue}
2019-07-23 11:36:41,846|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 21|base.save(var,value) - executing save(var,value)(sumTotal, [NUMBER(${sumTotal}) => add(${mulValue})])
2019-07-23 11:36:41,848|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 21|base.save(var,value) - [repeat-until] PASS stored '2732.67' as ${sumTotal}
2019-07-23 11:36:41,849|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:36:41,853|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2019-07-23 11:36:41,855|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #2 --------------------------------------------->
2019-07-23 11:36:41,858|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-23 11:36:41,860|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 18|base.save(var,value) - executing save(var,value)(unit_cost, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:36:41,862|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 18|base.save(var,value) - [repeat-until] PASS stored '"$8.74"' as ${unit_cost}
2019-07-23 11:36:41,865|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 19|base.save(var,value) - executing save(var,value)(quantity, $(array|item|${quantityList}|${counter}))
2019-07-23 11:36:41,868|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 19|base.save(var,value) - [repeat-until] PASS stored '292' as ${quantity}
2019-07-23 11:36:41,880|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 20|base.save(var,value) - executing save(var,value)(mulValue, [NUMBER(${unit_cost}) => multiply(${quantity})])
2019-07-23 11:36:41,883|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 20|base.save(var,value) - [repeat-until] PASS stored '2552.08' as ${mulValue}
2019-07-23 11:36:41,884|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 21|base.save(var,value) - executing save(var,value)(sumTotal, [NUMBER(${sumTotal}) => add(${mulValue})])
2019-07-23 11:36:41,886|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 21|base.save(var,value) - [repeat-until] PASS stored '5284.75' as ${sumTotal}
2019-07-23 11:36:41,888|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:36:41,891|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2019-07-23 11:36:41,894|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #3 --------------------------------------------->
2019-07-23 11:36:41,896|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-23 11:36:41,898|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 16|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2019-07-23 11:36:42,508|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 23|base.verbose(text) - executing verbose(text)(${sumTotal})
2019-07-23 11:36:42,508|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 23|base.verbose(text) - 5284.75
2019-07-23 11:36:42,523|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 2|# 23|base.verbose(text) - PASS 
2019-07-23 11:36:42,523|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 4 - executing activity
2019-07-23 11:36:43,139|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 4|# 24|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[product_name=Dextromathorphan HBr].supplier, supplierList)
2019-07-23 11:36:43,159|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 4|# 24|json.storeValues(json,jso - PASS EXPECTED match against 'products[product_name=Dextromathorphan HBr].supplier' stored to ${supplierList}
2019-07-23 11:36:43,774|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 4|# 25|base.verbose(text) - executing verbose(text)(${supplierList})
2019-07-23 11:36:43,774|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 4|# 25|base.verbose(text) - ["Schmitt-Weissnat","SC-Pharmacy"]
2019-07-23 11:36:43,774|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 4|# 25|base.verbose(text) - PASS 
2019-07-23 11:36:43,774|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5 - executing activity
2019-07-23 11:36:44,399|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 26|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products.product_name, productList)
2019-07-23 11:36:44,430|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 26|json.storeValues(json,jso - PASS EXPECTED match against 'products.product_name' stored to ${productList}
2019-07-23 11:36:45,046|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 27|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products.unit_cost, costList)
2019-07-23 11:36:45,056|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 27|json.storeValues(json,jso - PASS EXPECTED match against 'products.unit_cost' stored to ${costList}
2019-07-23 11:36:45,674|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 28|base.save(var,value) - executing save(var,value)(unit_costList, [LIST${costList} => replaceRegex([$],)])
2019-07-23 11:36:45,674|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 28|base.save(var,value) - PASS stored '[LIST["$10.47","$8.74","$20.53","$20.53"] => replaceRegex([$],)]' as ${unit_costList}
2019-07-23 11:36:46,303|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 29|base.save(var,value) - executing save(var,value)(counter, 0)
2019-07-23 11:36:46,303|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 29|base.save(var,value) - PASS stored '0' as ${counter}
2019-07-23 11:36:46,914|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 30|base.save(var,value) - executing save(var,value)(finalList, abcd)
2019-07-23 11:36:46,914|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 30|base.save(var,value) - PASS stored 'abcd' as ${finalList}
2019-07-23 11:36:47,524|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 31|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(6, -1)
2019-07-23 11:36:47,524|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - 
<[repeat-until] entering loop #1 --------------------------------------------->
2019-07-23 11:36:47,524|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-23 11:36:47,524|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 33|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:36:47,539|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 33|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-23 11:36:47,539|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 34|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-23 11:36:47,555|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 34|base.save(var,value) - [repeat-until] PASS stored '10.47' as ${cost}
2019-07-23 11:36:47,555|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 35|base.verbose(text) - executing verbose(text)(${cost})
2019-07-23 11:36:47,555|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 35|base.verbose(text) - 10.47
2019-07-23 11:36:47,555|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 35|base.verbose(text) - [repeat-until] PASS 10.47
2019-07-23 11:36:47,570|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 36|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-23 11:36:47,570|I|Thread-1|evaluating flow control:	SkipIf(10.47>20)		=> NOT MATCHED
2019-07-23 11:36:47,570|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 36|base.verbose(text) - finalList,"sildenafil citrate"
2019-07-23 11:36:47,570|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 36|base.verbose(text) - [repeat-until] PASS finalList,"sildenafil citrate"
2019-07-23 11:36:47,570|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:36:47,570|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2019-07-23 11:36:47,570|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - 
<[repeat-until] entering loop #2 --------------------------------------------->
2019-07-23 11:36:47,586|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-23 11:36:47,586|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 33|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:36:47,586|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 33|base.save(var,value) - [repeat-until] PASS stored '"$8.74"' as ${value}
2019-07-23 11:36:47,586|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 34|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-23 11:36:47,586|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 34|base.save(var,value) - [repeat-until] PASS stored '8.74' as ${cost}
2019-07-23 11:36:47,586|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 35|base.verbose(text) - executing verbose(text)(${cost})
2019-07-23 11:36:47,586|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 35|base.verbose(text) - 8.74
2019-07-23 11:36:47,586|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 35|base.verbose(text) - [repeat-until] PASS 8.74
2019-07-23 11:36:47,586|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 36|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-23 11:36:47,586|I|Thread-1|evaluating flow control:	SkipIf(8.74>20)		=> NOT MATCHED
2019-07-23 11:36:47,586|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 36|base.verbose(text) - finalList,"Mountain Juniperus ashei"
2019-07-23 11:36:47,586|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 36|base.verbose(text) - [repeat-until] PASS finalList,"Mountain Juniperus ashei"
2019-07-23 11:36:47,586|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:36:47,586|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2019-07-23 11:36:47,586|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - 
<[repeat-until] entering loop #3 --------------------------------------------->
2019-07-23 11:36:47,602|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-23 11:36:47,602|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 33|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:36:47,602|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 33|base.save(var,value) - [repeat-until] PASS stored '"$20.53"' as ${value}
2019-07-23 11:36:47,602|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 34|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-23 11:36:47,602|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 34|base.save(var,value) - [repeat-until] PASS stored '20.53' as ${cost}
2019-07-23 11:36:47,602|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 35|base.verbose(text) - executing verbose(text)(${cost})
2019-07-23 11:36:47,602|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 35|base.verbose(text) - 20.53
2019-07-23 11:36:47,602|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 35|base.verbose(text) - [repeat-until] PASS 20.53
2019-07-23 11:36:47,602|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 36|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-23 11:36:47,602|I|Thread-1|evaluating flow control:	SkipIf(20.53>20)		=> MATCHED
2019-07-23 11:36:47,602|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 36|base.verbose(text) - skipped due to flow control SkipIf(${cost} > 20)
2019-07-23 11:36:47,602|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 36|base.verbose(text) - [repeat-until] SKIPPED current step skipped: SkipIf(${cost} > 20)
2019-07-23 11:36:47,602|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:36:47,617|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 3
2019-07-23 11:36:47,617|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - 
<[repeat-until] entering loop #4 --------------------------------------------->
2019-07-23 11:36:47,617|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-23 11:36:47,617|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 33|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:36:47,617|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 33|base.save(var,value) - [repeat-until] PASS stored '"$20.53"' as ${value}
2019-07-23 11:36:47,617|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 34|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-23 11:36:47,617|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 34|base.save(var,value) - [repeat-until] PASS stored '20.53' as ${cost}
2019-07-23 11:36:47,617|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 35|base.verbose(text) - executing verbose(text)(${cost})
2019-07-23 11:36:47,617|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 35|base.verbose(text) - 20.53
2019-07-23 11:36:47,617|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 35|base.verbose(text) - [repeat-until] PASS 20.53
2019-07-23 11:36:47,633|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 36|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-23 11:36:47,633|I|Thread-1|evaluating flow control:	SkipIf(20.53>20)		=> MATCHED
2019-07-23 11:36:47,633|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 36|base.verbose(text) - skipped due to flow control SkipIf(${cost} > 20)
2019-07-23 11:36:47,633|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 36|base.verbose(text) - [repeat-until] SKIPPED current step skipped: SkipIf(${cost} > 20)
2019-07-23 11:36:47,633|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:36:47,633|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 4
2019-07-23 11:36:47,633|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - 
<[repeat-until] entering loop #5 --------------------------------------------->
2019-07-23 11:36:47,633|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-23 11:36:47,633|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 31|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2019-07-23 11:36:48,233|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${finalList})
2019-07-23 11:36:48,237|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 38|base.verbose(text) - abcd
2019-07-23 11:36:48,243|I|Thread-1|firstEvaluation.20190723_113632.001|JsonScenario|Activity 5|# 38|base.verbose(text) - PASS 
2019-07-23 11:36:48,820|I|Thread-1|[firstEvaluation.20190723_113632.001|JsonScenario] saving test scenario
2019-07-23 11:36:48,937|I|Thread-1|firstEvaluation.20190723_113632.001|XMLScenario - executing test scenario
2019-07-23 11:36:48,939|I|Thread-1|firstEvaluation.20190723_113632.001|XMLScenario|Activity 1 - executing activity
2019-07-23 11:36:49,542|I|Thread-1|firstEvaluation.20190723_113632.001|XMLScenario|Activity 1|#  5|io.readFile(var,file) - executing readFile(var,file)(xmlFile, $(syspath|data|fullpath)/example_1.xml)
2019-07-23 11:36:49,557|I|Thread-1|firstEvaluation.20190723_113632.001|XMLScenario|Activity 1|#  5|io.readFile(var,file) - PASS Content read from 'C:\projects\firstEvaluation\artifact\data\example_1.xml' to ${xmlFile}
2019-07-23 11:36:50,166|I|Thread-1|firstEvaluation.20190723_113632.001|XMLScenario|Activity 1|#  6|xml.storeValues(xml,xpath - executing storeValues(xml,xpath,var)($(syspath|data|fullpath)/example_1.xml, /catalog/book[publish_date[starts-with(.,"2000-12-")] and ./title/text()]/title, bookList)
2019-07-23 11:36:50,353|I|Thread-1|firstEvaluation.20190723_113632.001|XMLScenario|Activity 1|#  6|xml.storeValues(xml,xpath - PASS XML matches saved to 'bookList'
2019-07-23 11:36:50,963|I|Thread-1|firstEvaluation.20190723_113632.001|XMLScenario|Activity 1|#  7|base.verbose(text) - executing verbose(text)(${bookList})
2019-07-23 11:36:50,963|I|Thread-1|firstEvaluation.20190723_113632.001|XMLScenario|Activity 1|#  7|base.verbose(text) - Midnight Rain,Creepy Crawlies,Microsoft .NET: The Programming Bible,MSXML3: A Comprehensive Guide
2019-07-23 11:36:50,963|I|Thread-1|firstEvaluation.20190723_113632.001|XMLScenario|Activity 1|#  7|base.verbose(text) - PASS 
2019-07-23 11:36:50,978|I|Thread-1|firstEvaluation.20190723_113632.001|XMLScenario|Activity 2 - executing activity
2019-07-23 11:36:51,587|I|Thread-1|firstEvaluation.20190723_113632.001|XMLScenario|Activity 2|#  8|xml.storeValue(xml,xpath, - executing storeValue(xml,xpath,var)($(syspath|data|fullpath)/example_1.xml, sum(/catalog/book[*]/price), totalPrice)
2019-07-23 11:36:51,603|I|Thread-1|firstEvaluation.20190723_113632.001|XMLScenario|Activity 2|#  8|xml.storeValue(xml,xpath, - PASS XML matches saved to 'totalPrice'
2019-07-23 11:36:52,212|I|Thread-1|firstEvaluation.20190723_113632.001|XMLScenario|Activity 2|#  9|base.verbose(text) - executing verbose(text)(${totalPrice})
2019-07-23 11:36:52,212|I|Thread-1|firstEvaluation.20190723_113632.001|XMLScenario|Activity 2|#  9|base.verbose(text) - 214.40000000000003
2019-07-23 11:36:52,212|I|Thread-1|firstEvaluation.20190723_113632.001|XMLScenario|Activity 2|#  9|base.verbose(text) - PASS 
2019-07-23 11:36:52,212|I|Thread-1|firstEvaluation.20190723_113632.001|XMLScenario|Activity 4 - executing activity
2019-07-23 11:36:52,831|I|Thread-1|firstEvaluation.20190723_113632.001|XMLScenario|Activity 4|# 10|xml.storeValues(xml,xpath - executing storeValues(xml,xpath,var)($(syspath|data|fullpath)/example_1.xml, /catalog/book[genre="Computer"]/title|/catalog/book[genre="Computer"]/author, list)
2019-07-23 11:36:52,846|I|Thread-1|firstEvaluation.20190723_113632.001|XMLScenario|Activity 4|# 10|xml.storeValues(xml,xpath - PASS XML matches saved to 'list'
2019-07-23 11:36:53,471|I|Thread-1|firstEvaluation.20190723_113632.001|XMLScenario|Activity 4|# 11|base.verbose(text) - executing verbose(text)(${list})
2019-07-23 11:36:53,471|I|Thread-1|firstEvaluation.20190723_113632.001|XMLScenario|Activity 4|# 11|base.verbose(text) - Gambardella, Matthew,XML Developer's Guide,O'Brien, Tim,Microsoft .NET: The Programming Bible,O'Brien, Tim,MSXML3: A Comprehensive Guide,Galos, Mike,Visual Studio 7: A Comprehensive Guide
2019-07-23 11:36:53,471|I|Thread-1|firstEvaluation.20190723_113632.001|XMLScenario|Activity 4|# 11|base.verbose(text) - PASS 
2019-07-23 11:36:53,487|I|Thread-1|firstEvaluation.20190723_113632.001|XMLScenario|Activity 5 - executing activity
2019-07-23 11:36:54,087|I|Thread-1|firstEvaluation.20190723_113632.001|XMLScenario|Activity 5|# 12|xml.storeValues(xml,xpath - executing storeValues(xml,xpath,var)($(syspath|data|fullpath)/example_1.xml, /catalog/book[author = "Corets, Eva"]/title, titleList)
2019-07-23 11:36:54,107|I|Thread-1|firstEvaluation.20190723_113632.001|XMLScenario|Activity 5|# 12|xml.storeValues(xml,xpath - PASS XML matches saved to 'titleList'
2019-07-23 11:36:54,713|I|Thread-1|firstEvaluation.20190723_113632.001|XMLScenario|Activity 5|# 13|base.verbose(text) - executing verbose(text)(${titleList})
2019-07-23 11:36:54,718|I|Thread-1|firstEvaluation.20190723_113632.001|XMLScenario|Activity 5|# 13|base.verbose(text) - Maeve Ascendant,Oberon's Legacy,The Sundered Grail
2019-07-23 11:36:54,725|I|Thread-1|firstEvaluation.20190723_113632.001|XMLScenario|Activity 5|# 13|base.verbose(text) - PASS 
2019-07-23 11:36:54,875|I|Thread-1|[firstEvaluation.20190723_113632.001|XMLScenario] saving test scenario
2019-07-23 11:36:54,965|I|Thread-1|firstEvaluation.20190723_113632.001|CSVScenario - executing test scenario
2019-07-23 11:36:54,967|I|Thread-1|firstEvaluation.20190723_113632.001|CSVScenario|Activity 1 - executing activity
2019-07-23 11:36:55,570|I|Thread-1|firstEvaluation.20190723_113632.001|CSVScenario|Activity 1|#  5|io.readFile(var,file) - executing readFile(var,file)(input, $(syspath|data|fullpath)/example_3.csv)
2019-07-23 11:36:55,611|I|Thread-1|firstEvaluation.20190723_113632.001|CSVScenario|Activity 1|#  5|io.readFile(var,file) - PASS Content read from 'C:\projects\firstEvaluation\artifact\data\example_3.csv' to ${input}
2019-07-23 11:36:56,217|I|Thread-1|firstEvaluation.20190723_113632.001|CSVScenario|Activity 1|#  6|base.save(var,value) - executing save(var,value)(rowcount, [CSV(${input}) => parse(header=false) rowCount])
2019-07-23 11:36:56,373|I|Thread-1|firstEvaluation.20190723_113632.001|CSVScenario|Activity 1|#  6|base.save(var,value) - PASS stored '24' as ${rowcount}
2019-07-23 11:36:56,973|I|Thread-1|firstEvaluation.20190723_113632.001|CSVScenario|Activity 1|#  7|base.verbose(text) - executing verbose(text)(${rowcount})
2019-07-23 11:36:56,977|I|Thread-1|firstEvaluation.20190723_113632.001|CSVScenario|Activity 1|#  7|base.verbose(text) - 24
2019-07-23 11:36:56,985|I|Thread-1|firstEvaluation.20190723_113632.001|CSVScenario|Activity 1|#  7|base.verbose(text) - PASS 
2019-07-23 11:36:57,590|I|Thread-1|firstEvaluation.20190723_113632.001|CSVScenario|Activity 1|#  8|base.save(var,value) - executing save(var,value)(columnCount, [CSV(${input}) => parse(header=false) columnCount])
2019-07-23 11:36:57,620|I|Thread-1|firstEvaluation.20190723_113632.001|CSVScenario|Activity 1|#  8|base.save(var,value) - PASS stored '14' as ${columnCount}
2019-07-23 11:36:58,223|I|Thread-1|firstEvaluation.20190723_113632.001|CSVScenario|Activity 1|#  9|base.verbose(text) - executing verbose(text)(${columnCount})
2019-07-23 11:36:58,227|I|Thread-1|firstEvaluation.20190723_113632.001|CSVScenario|Activity 1|#  9|base.verbose(text) - 14
2019-07-23 11:36:58,238|I|Thread-1|firstEvaluation.20190723_113632.001|CSVScenario|Activity 1|#  9|base.verbose(text) - PASS 
2019-07-23 11:36:58,386|I|Thread-1|[firstEvaluation.20190723_113632.001|CSVScenario] saving test scenario
2019-07-23 11:36:58,455|I|Thread-1|[20190723_113631] 
/-TEST COMPLETE-----------------------------------------------------------------
| Test Output:    C:\projects\firstEvaluation\output\20190723_113631\firstEvaluation.20190723_113632.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 24314 ms
» Test Steps:     36
» Error(s):       0



2019-07-23 11:37:04,474|I|Thread-1|[20190723_113631] 
/-TEST COMPLETE-----------------------------------------------------------------
| Test Script:    C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 33191 ms
» Iterations:     [1] total 1
» Test Steps:     36
» Passed:         36
» Error(s):       0
» Iteration 1 of 1: C:\projects\firstEvaluation\output\20190723_113631\firstEvaluation.20190723_113632.001.xlsx



2019-07-23 11:37:05,323|I|main|[20190723_113631] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] now completed
2019-07-23 11:37:05,327|I|main|[20190723_113631] all execution thread(s) have terminated
2019-07-23 11:37:05,329|I|main|[20190723_113631] test run completed in about 34 seconds
2019-07-23 11:37:05,447|I|main|No predefined nexial-setup found
2019-07-23 11:37:05,500|I|main|outputBase not set; output-to-cloud DISABLED!
2019-07-23 11:37:05,500|I|main|accessKey not set; output-to-cloud DISABLED!
2019-07-23 11:37:05,501|I|main|secretKey not set; output-to-cloud DISABLED!
2019-07-23 11:37:05,502|I|main|generating HTML output for this execution to C:\projects\firstEvaluation\output\20190723_113631\execution-output.html
2019-07-23 11:37:06,192|I|main|generating JUnit XML output for this execution to C:\projects\firstEvaluation\output\20190723_113631\junit.xml
2019-07-23 11:37:06,218|I|main|generated JUnit report for this execution: C:\projects\firstEvaluation\output\20190723_113631\junit.xml
2019-07-23 11:37:06,222|I|main|nexial mailer not enabled: nexial.enableEmail=false
2019-07-23 11:37:06,223|I|main|skipped email notification as configured
2019-07-23 11:37:06,224|I|main|exiting Nexial...
2019-07-23 11:37:06,228|I|main|

/-END OF EXECUTION--------------------------------------------------------------
| » Execution Time: 34 sec.
| » Test Steps....: 36
| » Passed........: 36
| » Failed........: 0
| » Success Rate..: 100.00%
\----------------------------------------------------------nexial-core 2.4_0567-

2019-07-23 11:37:06,229|I|main|ALL PASSED!
2019-07-23 11:37:06,233|I|main|End of Execution:
NEXIAL_OUTPUT:         C:\projects\firstEvaluation\output\20190723_113631
NEXIAL_EXECUTION_HTML: C:\projects\firstEvaluation\output\20190723_113631\execution-output.html
NEXIAL_JUNIT_XML:      C:\projects\firstEvaluation\output\20190723_113631\junit.xml
NEXIAL_SUCCESS_RATE:   100.00%
NEXIAL_EXIT_STATUS:    0
