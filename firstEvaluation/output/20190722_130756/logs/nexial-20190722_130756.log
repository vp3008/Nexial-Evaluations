2019-07-22 13:07:56,409|I|Thread-1|(DELAYED) nexial-core dev_0581 starting up...
2019-07-22 13:07:56,411|I|Thread-1|(DELAYED) data file resolved as C:\Users\DEEPAN~1\AppData\Local\Temp\ZbOjh\firstEvaluation.data.xlsx
2019-07-22 13:07:56,412|I|Thread-1|(DELAYED) input files and output directory resolved...
2019-07-22 13:07:56,412|I|Thread-1|(DELAYED) No predefined nexial-setup found
2019-07-22 13:07:56,412|I|Thread-1|(DELAYED) [20190722_130756] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] resolve RUN ID as 20190722_130756
2019-07-22 13:07:56,412|I|Thread-1|(DELAYED) [20190722_130756] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] new thread started
2019-07-22 13:07:56,445|I|Thread-1|No predefined nexial-setup found
2019-07-22 13:07:56,493|I|Thread-1|outputBase not set; output-to-cloud DISABLED!
2019-07-22 13:07:56,493|I|Thread-1|accessKey not set; output-to-cloud DISABLED!
2019-07-22 13:07:56,493|I|Thread-1|secretKey not set; output-to-cloud DISABLED!
2019-07-22 13:07:56,513|I|Thread-1|missing REQUIRED configuration; sms DISABLED!
2019-07-22 13:07:57,205|I|Thread-1|[20190722_130756] executing C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx with 1 iteration(s)
2019-07-22 13:07:57,209|I|Thread-1|[20190722_130756] create directory C:\projects\firstEvaluation\output\20190722_130756\captures
2019-07-22 13:07:57,209|I|Thread-1|[20190722_130756] create directory C:\projects\firstEvaluation\output\20190722_130756\logs
2019-07-22 13:07:57,555|I|Thread-1|[20190722_130756] merging test data to tmp file C:\projects\firstEvaluation\output\20190722_130756\firstEvaluation.20190722_130757.001.xlsx
2019-07-22 13:07:57,555|I|Thread-1|refetching data from C:\projects\firstEvaluation\artifact\data\firstEvaluation.data.xlsx
2019-07-22 13:07:57,709|I|Thread-1|[20190722_130756] test script and test data merged to C:\projects\firstEvaluation\output\20190722_130756\firstEvaluation.20190722_130757.001.xlsx
2019-07-22 13:07:58,260|I|Thread-1|STARTS
2019-07-22 13:07:58,295|I|Thread-1|firstEvaluation.20190722_130757.001 - executing iteration #1 of 1; Iteration Id 1
2019-07-22 13:07:58,301|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario - executing test scenario
2019-07-22 13:07:58,301|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 1 - executing activity
2019-07-22 13:07:58,902|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 1|#  5|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].product_name, productNames)
2019-07-22 13:07:58,973|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 1|#  5|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].product_name' stored to ${productNames}
2019-07-22 13:07:59,574|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 1|#  6|base.verbose(text) - executing verbose(text)(${productNames})
2019-07-22 13:07:59,575|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 1|#  6|base.verbose(text) - ["sildenafil citrate","Mountain Juniperus ashei"]
2019-07-22 13:07:59,714|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 1|#  6|base.verbose(text) - PASS 
2019-07-22 13:07:59,716|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2 - executing activity
2019-07-22 13:08:00,316|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|#  7|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].quantity, quantityList)
2019-07-22 13:08:00,320|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|#  7|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].quantity' stored to ${quantityList}
2019-07-22 13:08:00,921|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|#  8|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].unit_cost, costList)
2019-07-22 13:08:00,924|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|#  8|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].unit_cost' stored to ${costList}
2019-07-22 13:08:01,526|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|#  9|base.save(var,value) - executing save(var,value)(unit_costList, [LIST${costList} => replaceRegex([$],)])
2019-07-22 13:08:01,535|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|#  9|base.save(var,value) - PASS stored '[LIST["$10.47","$8.74"] => replaceRegex([$],)]' as ${unit_costList}
2019-07-22 13:08:02,137|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 10|base.verbose(text) - executing verbose(text)(${unit_costList})
2019-07-22 13:08:02,138|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 10|base.verbose(text) - [LIST["$10.47","$8.74"] => replaceRegex([$],)]
2019-07-22 13:08:02,139|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 10|base.verbose(text) - PASS 
2019-07-22 13:08:02,741|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 11|base.save(var,value) - executing save(var,value)(sumTotal, 0)
2019-07-22 13:08:02,741|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 11|base.save(var,value) - PASS stored '0' as ${sumTotal}
2019-07-22 13:08:03,343|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 12|base.save(var,value) - executing save(var,value)(counter, 0)
2019-07-22 13:08:03,344|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 12|base.save(var,value) - PASS stored '0' as ${counter}
2019-07-22 13:08:03,946|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 13|base.save(var,value) - executing save(var,value)(length, $(array|length|${quantityList}))
2019-07-22 13:08:03,948|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 13|base.save(var,value) - PASS stored '2' as ${length}
2019-07-22 13:08:04,549|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 14|base.save(var,value) - executing save(var,value)(mulValue, 0)
2019-07-22 13:08:04,550|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 14|base.save(var,value) - PASS stored '0' as ${mulValue}
2019-07-22 13:08:05,152|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 15|base.verbose(text) - executing verbose(text)(${unit_costList})
2019-07-22 13:08:05,154|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 15|base.verbose(text) - [LIST["$10.47","$8.74"] => replaceRegex([$],)]
2019-07-22 13:08:05,155|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 15|base.verbose(text) - PASS 
2019-07-22 13:08:05,757|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 16|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(6, -1)
2019-07-22 13:08:05,757|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #1 --------------------------------------------->
2019-07-22 13:08:05,758|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-22 13:08:05,759|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 18|base.save(var,value) - executing save(var,value)(unit_cost, $(array|item|${unit_costList}|${counter}))
2019-07-22 13:08:05,760|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 18|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${unit_cost}
2019-07-22 13:08:05,761|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 19|base.save(var,value) - executing save(var,value)(quantity, $(array|item|${quantityList}|${counter}))
2019-07-22 13:08:05,762|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 19|base.save(var,value) - [repeat-until] PASS stored '261' as ${quantity}
2019-07-22 13:08:05,763|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 20|base.save(var,value) - executing save(var,value)(mulValue, [NUMBER(${unit_cost}) => multiply(${quantity})])
2019-07-22 13:08:05,777|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 20|base.save(var,value) - [repeat-until] PASS stored '2732.67' as ${mulValue}
2019-07-22 13:08:05,778|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 21|base.save(var,value) - executing save(var,value)(sumTotal, [NUMBER(${sumTotal}) => add(${mulValue})])
2019-07-22 13:08:05,779|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 21|base.save(var,value) - [repeat-until] PASS stored '2732.67' as ${sumTotal}
2019-07-22 13:08:05,780|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 13:08:05,787|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2019-07-22 13:08:05,789|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #2 --------------------------------------------->
2019-07-22 13:08:05,790|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-22 13:08:05,794|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 18|base.save(var,value) - executing save(var,value)(unit_cost, $(array|item|${unit_costList}|${counter}))
2019-07-22 13:08:05,796|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 18|base.save(var,value) - [repeat-until] PASS stored '"$8.74"' as ${unit_cost}
2019-07-22 13:08:05,797|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 19|base.save(var,value) - executing save(var,value)(quantity, $(array|item|${quantityList}|${counter}))
2019-07-22 13:08:05,798|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 19|base.save(var,value) - [repeat-until] PASS stored '292' as ${quantity}
2019-07-22 13:08:05,799|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 20|base.save(var,value) - executing save(var,value)(mulValue, [NUMBER(${unit_cost}) => multiply(${quantity})])
2019-07-22 13:08:05,803|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 20|base.save(var,value) - [repeat-until] PASS stored '2552.08' as ${mulValue}
2019-07-22 13:08:05,805|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 21|base.save(var,value) - executing save(var,value)(sumTotal, [NUMBER(${sumTotal}) => add(${mulValue})])
2019-07-22 13:08:05,806|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 21|base.save(var,value) - [repeat-until] PASS stored '5284.75' as ${sumTotal}
2019-07-22 13:08:05,807|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 13:08:05,808|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2019-07-22 13:08:05,808|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #3 --------------------------------------------->
2019-07-22 13:08:05,809|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-22 13:08:05,810|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 16|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2019-07-22 13:08:06,411|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 23|base.verbose(text) - executing verbose(text)(${sumTotal})
2019-07-22 13:08:06,411|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 23|base.verbose(text) - 5284.75
2019-07-22 13:08:06,414|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 2|# 23|base.verbose(text) - PASS 
2019-07-22 13:08:06,415|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 3 - executing activity
2019-07-22 13:08:07,016|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 3|# 24|base.save(var,value) - executing save(var,value)(jsonFile, $(syspath|data|fullpath)/example_2.json)
2019-07-22 13:08:07,018|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 3|# 24|base.save(var,value) - PASS stored 'C:\projects\firstEvaluation\artifact\data\example_2.json' as ${jsonFile}
2019-07-22 13:08:07,619|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 3|# 25|base.save(var,value) - executing save(var,value)(var, [JSON(${jsonFile} => extract(products[unit_cost => ascending])])
2019-07-22 13:08:07,622|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 3|# 25|base.save(var,value) - PASS stored '[JSON(C:\projects\firstEvaluation\artifact\data\example_2.json => extract(products[unit_cost => ascending])]' as ${var}
2019-07-22 13:08:08,222|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 3|# 26|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)(var, products.product_name, result)
2019-07-22 13:08:08,225|E|Thread-1|Error converting string to JSON object: A JSONObject text must begin with '{' at 1 [character 2 line 1]
org.json.JSONException: A JSONObject text must begin with '{' at 1 [character 2 line 1]
	at org.json.JSONTokener.syntaxError(JSONTokener.java:505)
	at org.json.JSONObject.<init>(JSONObject.java:214)
	at org.json.JSONObject.<init>(JSONObject.java:357)
	at org.nexial.core.utils.JsonUtils.toJSONObject(JsonUtils.java:75)
	at org.nexial.core.plugins.json.JsonCommand.resolveToJSONObject(JsonCommand.java:323)
	at org.nexial.core.plugins.json.JsonCommand.toJSONObject(JsonCommand.java:441)
	at org.nexial.core.plugins.json.JsonCommand.sanityCheck(JsonCommand.java:445)
	at org.nexial.core.plugins.json.JsonCommand.find(JsonCommand.java:449)
	at org.nexial.core.plugins.json.JsonCommand.extractJsonValue(JsonCommand.java:384)
	at org.nexial.core.plugins.json.JsonCommand.storeValues(JsonCommand.java:123)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.nexial.core.plugins.base.BaseCommand.execute(BaseCommand.java:156)
	at org.nexial.core.model.TestStep.invokeCommand(TestStep.java:327)
	at org.nexial.core.model.TestStep.execute(TestStep.java:169)
	at org.nexial.core.model.TestCase.execute(TestCase.java:94)
	at org.nexial.core.model.TestScenario.execute(TestScenario.java:130)
	at org.nexial.core.model.ExecutionContext.execute(ExecutionContext.java:1184)
	at org.nexial.core.ExecutionThread.run(ExecutionThread.java:174)
2019-07-22 13:08:08,227|E|Thread-1|JSON string in error is as follows:
var
2019-07-22 13:08:08,229|E|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 3|# 26|json.storeValues(json,jso - FAIL EXPECTED match against 'products.product_name' was not found
2019-07-22 13:08:08,831|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 3|# 27|base.verbose(text) - executing verbose(text)(result)
2019-07-22 13:08:08,832|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 3|# 27|base.verbose(text) - result
2019-07-22 13:08:08,833|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 3|# 27|base.verbose(text) - PASS 
2019-07-22 13:08:08,834|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 4 - executing activity
2019-07-22 13:08:09,435|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 4|# 28|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[product_name=Dextromathorphan HBr].supplier, supplierList)
2019-07-22 13:08:09,437|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 4|# 28|json.storeValues(json,jso - PASS EXPECTED match against 'products[product_name=Dextromathorphan HBr].supplier' stored to ${supplierList}
2019-07-22 13:08:10,038|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 4|# 29|base.verbose(text) - executing verbose(text)(${supplierList})
2019-07-22 13:08:10,039|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 4|# 29|base.verbose(text) - ["Schmitt-Weissnat","SC-Pharmacy"]
2019-07-22 13:08:10,040|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 4|# 29|base.verbose(text) - PASS 
2019-07-22 13:08:10,041|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 5 - executing activity
2019-07-22 13:08:10,642|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 5|# 30|json.assertEqual(expected - executing assertEqual(expected,actual)($(syspath|data|fullpath)/example_2.json, products.product_name, productList)
2019-07-22 13:08:10,725|E|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 5|# 30|json.assertEqual(expected - FAIL MISMATCHED parameters - json.assertEqual EXPECTS 2 but found 3
2019-07-22 13:08:11,327|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 5|# 31|json.assertEqual(expected - executing assertEqual(expected,actual)($(syspath|data|fullpath)/example_2.json, products.unit_cost, costList)
2019-07-22 13:08:11,329|E|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 5|# 31|json.assertEqual(expected - FAIL MISMATCHED parameters - json.assertEqual EXPECTS 2 but found 3
2019-07-22 13:08:11,930|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 5|# 32|base.save(var,value) - executing save(var,value)(unit_costList, [LIST${costList} => replaceRegex([$],)])
2019-07-22 13:08:11,932|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 5|# 32|base.save(var,value) - PASS stored '[LIST["$10.47","$8.74"] => replaceRegex([$],)]' as ${unit_costList}
2019-07-22 13:08:12,534|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 5|# 33|base.save(var,value) - executing save(var,value)(counter, 0)
2019-07-22 13:08:12,536|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 5|# 33|base.save(var,value) - PASS stored '0' as ${counter}
2019-07-22 13:08:13,138|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 5|# 34|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(4, -1)
2019-07-22 13:08:13,140|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #1 --------------------------------------------->
2019-07-22 13:08:13,140|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 13:08:13,141|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 13:08:13,141|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 13:08:13,143|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 5|# 37|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}), 20)
2019-07-22 13:08:13,144|E|Thread-1|evaluating flow control:	SkipIf [<] - NOT A NUMBER: value
2019-07-22 13:08:13,145|I|Thread-1|evaluating flow control:	SkipIf(value<20)		=> NOT MATCHED
2019-07-22 13:08:13,146|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 5|# 38|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 13:08:13,148|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 5|# 38|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2019-07-22 13:08:13,151|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #2 --------------------------------------------->
2019-07-22 13:08:13,151|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 13:08:13,152|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 13:08:13,153|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$8.74"' as ${value}
2019-07-22 13:08:13,153|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 5|# 37|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}), 20)
2019-07-22 13:08:13,153|E|Thread-1|evaluating flow control:	SkipIf [<] - NOT A NUMBER: value
2019-07-22 13:08:13,154|I|Thread-1|evaluating flow control:	SkipIf(value<20)		=> NOT MATCHED
2019-07-22 13:08:13,154|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 5|# 38|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 13:08:13,154|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 5|# 38|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2019-07-22 13:08:13,154|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #3 --------------------------------------------->
2019-07-22 13:08:13,155|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 13:08:13,155|I|Thread-1|firstEvaluation.20190722_130757.001|JsonScenario|Activity 5|# 34|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2019-07-22 13:08:13,345|I|Thread-1|[firstEvaluation.20190722_130757.001|JsonScenario] saving test scenario
2019-07-22 13:08:13,425|I|Thread-1|firstEvaluation.20190722_130757.001|XMLScenario - executing test scenario
2019-07-22 13:08:13,429|I|Thread-1|firstEvaluation.20190722_130757.001|XMLScenario|Activity 1 - executing activity
2019-07-22 13:08:14,031|I|Thread-1|firstEvaluation.20190722_130757.001|XMLScenario|Activity 1|#  5|xml.storeValues(xml,xpath - executing storeValues(xml,xpath,var)($(syspath|data|fullpath)/example_1.xml)
2019-07-22 13:08:14,036|E|Thread-1|firstEvaluation.20190722_130757.001|XMLScenario|Activity 1|#  5|xml.storeValues(xml,xpath - FAIL MISMATCHED parameters - xml.storeValues EXPECTS 3 but found 1
2019-07-22 13:08:14,056|I|Thread-1|[firstEvaluation.20190722_130757.001|XMLScenario] saving test scenario
2019-07-22 13:08:14,120|I|Thread-1|[20190722_130756] 
/-TEST COMPLETE-----------------------------------------------------------------
| Test Output:    C:\projects\firstEvaluation\output\20190722_130756\firstEvaluation.20190722_130757.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 15820 ms
» Test Steps:     25
» Error(s):       4



2019-07-22 13:08:16,090|I|Thread-1|[20190722_130756] 
/-TEST COMPLETE-----------------------------------------------------------------
| Test Script:    C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 19785 ms
» Iterations:     [1] total 1
» Test Steps:     25
» Passed:         21
» Error(s):       4
» Iteration 1 of 1: C:\projects\firstEvaluation\output\20190722_130756\firstEvaluation.20190722_130757.001.xlsx



2019-07-22 13:08:16,281|I|main|[20190722_130756] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] now completed
2019-07-22 13:08:16,282|I|main|[20190722_130756] all execution thread(s) have terminated
2019-07-22 13:08:16,283|I|main|[20190722_130756] test run completed in about 20 seconds
2019-07-22 13:08:16,338|I|main|No predefined nexial-setup found
2019-07-22 13:08:16,357|I|main|outputBase not set; output-to-cloud DISABLED!
2019-07-22 13:08:16,358|I|main|accessKey not set; output-to-cloud DISABLED!
2019-07-22 13:08:16,358|I|main|secretKey not set; output-to-cloud DISABLED!
2019-07-22 13:08:16,359|I|main|generating HTML output for this execution to C:\projects\firstEvaluation\output\20190722_130756\execution-output.html
2019-07-22 13:08:17,015|I|main|generating JUnit XML output for this execution to C:\projects\firstEvaluation\output\20190722_130756\junit.xml
2019-07-22 13:08:17,064|I|main|generated JUnit report for this execution: C:\projects\firstEvaluation\output\20190722_130756\junit.xml
2019-07-22 13:08:17,113|I|main|nexial mailer not enabled: nexial.enableEmail=false
2019-07-22 13:08:17,114|I|main|skipped email notification as configured
2019-07-22 13:08:17,115|I|main|exiting Nexial...
2019-07-22 13:08:17,116|I|main|

/-END OF EXECUTION--------------------------------------------------------------
| » Execution Time: 20 sec.
| » Test Steps....: 25
| » Passed........: 21
| » Failed........: 4
| » Success Rate..: 84.00%
\----------------------------------------------------------nexial-core dev_0581-

2019-07-22 13:08:17,116|E|main|failure found; success rate is 84.00%
2019-07-22 13:08:17,116|I|main|End of Execution:
NEXIAL_OUTPUT:         C:\projects\firstEvaluation\output\20190722_130756
NEXIAL_EXECUTION_HTML: C:\projects\firstEvaluation\output\20190722_130756\execution-output.html
NEXIAL_JUNIT_XML:      C:\projects\firstEvaluation\output\20190722_130756\junit.xml
NEXIAL_SUCCESS_RATE:   84.00%
NEXIAL_EXIT_STATUS:    -13
