2019-07-23 11:32:11,204|I|Thread-1|(DELAYED) nexial-core 2.4_0567 starting up...
2019-07-23 11:32:11,204|I|Thread-1|(DELAYED) data file resolved as C:\Users\DEEPAN~1.PAT\AppData\Local\Temp\tloSO\firstEvaluation.data.xlsx
2019-07-23 11:32:11,204|I|Thread-1|(DELAYED) input files and output directory resolved...
2019-07-23 11:32:11,204|I|Thread-1|(DELAYED) No predefined nexial-setup found
2019-07-23 11:32:11,204|I|Thread-1|(DELAYED) [20190723_113210] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] resolve RUN ID as 20190723_113210
2019-07-23 11:32:11,204|I|Thread-1|(DELAYED) [20190723_113210] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] new thread started
2019-07-23 11:32:11,204|I|Thread-1|No predefined nexial-setup found
2019-07-23 11:32:11,283|I|Thread-1|outputBase not set; output-to-cloud DISABLED!
2019-07-23 11:32:11,283|I|Thread-1|accessKey not set; output-to-cloud DISABLED!
2019-07-23 11:32:11,283|I|Thread-1|secretKey not set; output-to-cloud DISABLED!
2019-07-23 11:32:11,298|I|Thread-1|missing REQUIRED configuration; sms DISABLED!
2019-07-23 11:32:12,102|I|Thread-1|[20190723_113210] executing C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx with 1 iteration(s)
2019-07-23 11:32:12,106|I|Thread-1|[20190723_113210] create directory C:\projects\firstEvaluation\output\20190723_113210\captures
2019-07-23 11:32:12,107|I|Thread-1|[20190723_113210] create directory C:\projects\firstEvaluation\output\20190723_113210\logs
2019-07-23 11:32:12,940|I|Thread-1|[20190723_113210] merging test data to tmp file C:\projects\firstEvaluation\output\20190723_113210\firstEvaluation.20190723_113212.001.xlsx
2019-07-23 11:32:12,940|I|Thread-1|refetching data from C:\projects\firstEvaluation\artifact\data\firstEvaluation.data.xlsx
2019-07-23 11:32:13,236|I|Thread-1|[20190723_113210] test script and test data merged to C:\projects\firstEvaluation\output\20190723_113210\firstEvaluation.20190723_113212.001.xlsx
2019-07-23 11:32:13,861|I|Thread-1|STARTS
2019-07-23 11:32:13,908|I|Thread-1|firstEvaluation.20190723_113212.001 - executing iteration #1 of 1; Iteration Id 1
2019-07-23 11:32:13,908|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario - executing test scenario
2019-07-23 11:32:13,908|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 1 - executing activity
2019-07-23 11:32:14,523|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 1|#  5|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].product_name, productNames)
2019-07-23 11:32:14,601|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 1|#  5|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].product_name' stored to ${productNames}
2019-07-23 11:32:15,210|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 1|#  6|base.verbose(text) - executing verbose(text)(${productNames})
2019-07-23 11:32:15,210|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 1|#  6|base.verbose(text) - ["sildenafil citrate","Mountain Juniperus ashei"]
2019-07-23 11:32:15,414|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 1|#  6|base.verbose(text) - PASS 
2019-07-23 11:32:15,429|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2 - executing activity
2019-07-23 11:32:16,039|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|#  7|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].quantity, quantityList)
2019-07-23 11:32:16,054|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|#  7|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].quantity' stored to ${quantityList}
2019-07-23 11:32:16,663|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|#  8|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].unit_cost, costList)
2019-07-23 11:32:16,663|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|#  8|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].unit_cost' stored to ${costList}
2019-07-23 11:32:17,279|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|#  9|base.save(var,value) - executing save(var,value)(unit_costList, [LIST${costList} => replaceRegex([$],)])
2019-07-23 11:32:17,292|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|#  9|base.save(var,value) - PASS stored '[LIST["$10.47","$8.74"] => replaceRegex([$],)]' as ${unit_costList}
2019-07-23 11:32:17,896|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 10|base.verbose(text) - executing verbose(text)(${unit_costList})
2019-07-23 11:32:17,902|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 10|base.verbose(text) - [LIST["$10.47","$8.74"] => replaceRegex([$],)]
2019-07-23 11:32:17,914|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 10|base.verbose(text) - PASS 
2019-07-23 11:32:18,519|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 11|base.save(var,value) - executing save(var,value)(sumTotal, 0)
2019-07-23 11:32:18,527|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 11|base.save(var,value) - PASS stored '0' as ${sumTotal}
2019-07-23 11:32:19,134|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 12|base.save(var,value) - executing save(var,value)(counter, 0)
2019-07-23 11:32:19,140|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 12|base.save(var,value) - PASS stored '0' as ${counter}
2019-07-23 11:32:19,746|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 13|base.save(var,value) - executing save(var,value)(length, $(array|length|${quantityList}))
2019-07-23 11:32:19,760|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 13|base.save(var,value) - PASS stored '2' as ${length}
2019-07-23 11:32:20,365|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 14|base.save(var,value) - executing save(var,value)(mulValue, 0)
2019-07-23 11:32:20,372|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 14|base.save(var,value) - PASS stored '0' as ${mulValue}
2019-07-23 11:32:20,979|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 15|base.verbose(text) - executing verbose(text)(${unit_costList})
2019-07-23 11:32:20,983|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 15|base.verbose(text) - [LIST["$10.47","$8.74"] => replaceRegex([$],)]
2019-07-23 11:32:20,991|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 15|base.verbose(text) - PASS 
2019-07-23 11:32:21,595|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 16|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(6, -1)
2019-07-23 11:32:21,600|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #1 --------------------------------------------->
2019-07-23 11:32:21,609|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-23 11:32:21,615|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 18|base.save(var,value) - executing save(var,value)(unit_cost, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:32:21,625|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 18|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${unit_cost}
2019-07-23 11:32:21,629|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 19|base.save(var,value) - executing save(var,value)(quantity, $(array|item|${quantityList}|${counter}))
2019-07-23 11:32:21,638|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 19|base.save(var,value) - [repeat-until] PASS stored '261' as ${quantity}
2019-07-23 11:32:21,643|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 20|base.save(var,value) - executing save(var,value)(mulValue, [NUMBER(${unit_cost}) => multiply(${quantity})])
2019-07-23 11:32:21,670|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 20|base.save(var,value) - [repeat-until] PASS stored '2732.67' as ${mulValue}
2019-07-23 11:32:21,675|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 21|base.save(var,value) - executing save(var,value)(sumTotal, [NUMBER(${sumTotal}) => add(${mulValue})])
2019-07-23 11:32:21,678|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 21|base.save(var,value) - [repeat-until] PASS stored '2732.67' as ${sumTotal}
2019-07-23 11:32:21,680|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:32:21,684|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2019-07-23 11:32:21,686|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #2 --------------------------------------------->
2019-07-23 11:32:21,687|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-23 11:32:21,689|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 18|base.save(var,value) - executing save(var,value)(unit_cost, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:32:21,692|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 18|base.save(var,value) - [repeat-until] PASS stored '"$8.74"' as ${unit_cost}
2019-07-23 11:32:21,694|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 19|base.save(var,value) - executing save(var,value)(quantity, $(array|item|${quantityList}|${counter}))
2019-07-23 11:32:21,696|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 19|base.save(var,value) - [repeat-until] PASS stored '292' as ${quantity}
2019-07-23 11:32:21,697|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 20|base.save(var,value) - executing save(var,value)(mulValue, [NUMBER(${unit_cost}) => multiply(${quantity})])
2019-07-23 11:32:21,702|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 20|base.save(var,value) - [repeat-until] PASS stored '2552.08' as ${mulValue}
2019-07-23 11:32:21,703|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 21|base.save(var,value) - executing save(var,value)(sumTotal, [NUMBER(${sumTotal}) => add(${mulValue})])
2019-07-23 11:32:21,708|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 21|base.save(var,value) - [repeat-until] PASS stored '5284.75' as ${sumTotal}
2019-07-23 11:32:21,709|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:32:21,713|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2019-07-23 11:32:21,715|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #3 --------------------------------------------->
2019-07-23 11:32:21,717|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-23 11:32:21,719|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 16|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2019-07-23 11:32:22,324|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 23|base.verbose(text) - executing verbose(text)(${sumTotal})
2019-07-23 11:32:22,328|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 23|base.verbose(text) - 5284.75
2019-07-23 11:32:22,348|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 2|# 23|base.verbose(text) - PASS 
2019-07-23 11:32:22,365|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 4 - executing activity
2019-07-23 11:32:22,966|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 4|# 24|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[product_name=Dextromathorphan HBr].supplier, supplierList)
2019-07-23 11:32:22,990|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 4|# 24|json.storeValues(json,jso - PASS EXPECTED match against 'products[product_name=Dextromathorphan HBr].supplier' stored to ${supplierList}
2019-07-23 11:32:23,597|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 4|# 25|base.verbose(text) - executing verbose(text)(${supplierList})
2019-07-23 11:32:23,601|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 4|# 25|base.verbose(text) - ["Schmitt-Weissnat","SC-Pharmacy"]
2019-07-23 11:32:23,613|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 4|# 25|base.verbose(text) - PASS 
2019-07-23 11:32:23,618|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5 - executing activity
2019-07-23 11:32:24,224|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 26|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products.product_name, productList)
2019-07-23 11:32:24,275|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 26|json.storeValues(json,jso - PASS EXPECTED match against 'products.product_name' stored to ${productList}
2019-07-23 11:32:24,878|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 27|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products.unit_cost, costList)
2019-07-23 11:32:24,893|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 27|json.storeValues(json,jso - PASS EXPECTED match against 'products.unit_cost' stored to ${costList}
2019-07-23 11:32:25,497|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 28|base.save(var,value) - executing save(var,value)(unit_costList, [LIST${costList} => replaceRegex([$],)])
2019-07-23 11:32:25,510|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 28|base.save(var,value) - PASS stored '[LIST["$10.47","$8.74","$20.53","$20.53"] => replaceRegex([$],)]' as ${unit_costList}
2019-07-23 11:32:26,113|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 29|base.save(var,value) - executing save(var,value)(counter, 0)
2019-07-23 11:32:26,120|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 29|base.save(var,value) - PASS stored '0' as ${counter}
2019-07-23 11:32:26,727|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 30|base.save(var,value) - executing save(var,value)(finalList, abcd)
2019-07-23 11:32:26,733|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 30|base.save(var,value) - PASS stored 'abcd' as ${finalList}
2019-07-23 11:32:27,340|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 31|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(6, -1)
2019-07-23 11:32:27,343|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - 
<[repeat-until] entering loop #1 --------------------------------------------->
2019-07-23 11:32:27,348|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-23 11:32:27,358|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 33|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:32:27,363|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 33|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-23 11:32:27,369|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 34|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-23 11:32:27,386|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 34|base.save(var,value) - [repeat-until] PASS stored '10.47' as ${cost}
2019-07-23 11:32:27,394|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 35|base.verbose(text) - executing verbose(text)(${cost})
2019-07-23 11:32:27,398|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 35|base.verbose(text) - 10.47
2019-07-23 11:32:27,402|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 35|base.verbose(text) - [repeat-until] PASS 10.47
2019-07-23 11:32:27,406|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 36|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-23 11:32:27,411|I|Thread-1|evaluating flow control:	SkipIf(10.47>20)		=> NOT MATCHED
2019-07-23 11:32:27,419|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 36|base.verbose(text) - finalList,"sildenafil citrate"
2019-07-23 11:32:27,421|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 36|base.verbose(text) - [repeat-until] PASS finalList,"sildenafil citrate"
2019-07-23 11:32:27,424|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:32:27,427|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2019-07-23 11:32:27,429|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - 
<[repeat-until] entering loop #2 --------------------------------------------->
2019-07-23 11:32:27,432|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-23 11:32:27,433|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 33|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:32:27,437|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 33|base.save(var,value) - [repeat-until] PASS stored '"$8.74"' as ${value}
2019-07-23 11:32:27,439|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 34|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-23 11:32:27,440|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 34|base.save(var,value) - [repeat-until] PASS stored '8.74' as ${cost}
2019-07-23 11:32:27,441|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 35|base.verbose(text) - executing verbose(text)(${cost})
2019-07-23 11:32:27,442|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 35|base.verbose(text) - 8.74
2019-07-23 11:32:27,443|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 35|base.verbose(text) - [repeat-until] PASS 8.74
2019-07-23 11:32:27,443|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 36|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-23 11:32:27,444|I|Thread-1|evaluating flow control:	SkipIf(8.74>20)		=> NOT MATCHED
2019-07-23 11:32:27,445|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 36|base.verbose(text) - finalList,"Mountain Juniperus ashei"
2019-07-23 11:32:27,449|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 36|base.verbose(text) - [repeat-until] PASS finalList,"Mountain Juniperus ashei"
2019-07-23 11:32:27,450|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:32:27,451|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2019-07-23 11:32:27,452|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - 
<[repeat-until] entering loop #3 --------------------------------------------->
2019-07-23 11:32:27,453|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-23 11:32:27,454|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 33|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:32:27,458|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 33|base.save(var,value) - [repeat-until] PASS stored '"$20.53"' as ${value}
2019-07-23 11:32:27,460|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 34|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-23 11:32:27,461|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 34|base.save(var,value) - [repeat-until] PASS stored '20.53' as ${cost}
2019-07-23 11:32:27,462|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 35|base.verbose(text) - executing verbose(text)(${cost})
2019-07-23 11:32:27,463|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 35|base.verbose(text) - 20.53
2019-07-23 11:32:27,464|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 35|base.verbose(text) - [repeat-until] PASS 20.53
2019-07-23 11:32:27,465|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 36|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-23 11:32:27,468|I|Thread-1|evaluating flow control:	SkipIf(20.53>20)		=> MATCHED
2019-07-23 11:32:27,470|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 36|base.verbose(text) - skipped due to flow control SkipIf(${cost} > 20)
2019-07-23 11:32:27,471|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 36|base.verbose(text) - [repeat-until] SKIPPED current step skipped: SkipIf(${cost} > 20)
2019-07-23 11:32:27,472|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:32:27,473|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 3
2019-07-23 11:32:27,473|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - 
<[repeat-until] entering loop #4 --------------------------------------------->
2019-07-23 11:32:27,475|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-23 11:32:27,478|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 33|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-23 11:32:27,481|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 33|base.save(var,value) - [repeat-until] PASS stored '"$20.53"' as ${value}
2019-07-23 11:32:27,482|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 34|base.save(var,value) - executing save(var,value)(cost, [TEXT(${value}) => remove($) remove(") ])
2019-07-23 11:32:27,484|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 34|base.save(var,value) - [repeat-until] PASS stored '20.53' as ${cost}
2019-07-23 11:32:27,485|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 35|base.verbose(text) - executing verbose(text)(${cost})
2019-07-23 11:32:27,494|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 35|base.verbose(text) - 20.53
2019-07-23 11:32:27,494|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 35|base.verbose(text) - [repeat-until] PASS 20.53
2019-07-23 11:32:27,495|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 36|base.verbose(text) - executing verbose(text)([LIST(finalList) => append($(array|item|${productList}|${counter}))])
2019-07-23 11:32:27,496|I|Thread-1|evaluating flow control:	SkipIf(20.53>20)		=> MATCHED
2019-07-23 11:32:27,496|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 36|base.verbose(text) - skipped due to flow control SkipIf(${cost} > 20)
2019-07-23 11:32:27,498|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 36|base.verbose(text) - [repeat-until] SKIPPED current step skipped: SkipIf(${cost} > 20)
2019-07-23 11:32:27,499|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-23 11:32:27,502|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 37|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 4
2019-07-23 11:32:27,503|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - 
<[repeat-until] entering loop #5 --------------------------------------------->
2019-07-23 11:32:27,504|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 32|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-23 11:32:27,505|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 31|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2019-07-23 11:32:28,106|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${finalList})
2019-07-23 11:32:28,110|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 38|base.verbose(text) - abcd
2019-07-23 11:32:28,117|I|Thread-1|firstEvaluation.20190723_113212.001|JsonScenario|Activity 5|# 38|base.verbose(text) - PASS 
2019-07-23 11:32:28,626|I|Thread-1|[firstEvaluation.20190723_113212.001|JsonScenario] saving test scenario
2019-07-23 11:32:28,745|I|Thread-1|firstEvaluation.20190723_113212.001|XMLScenario - executing test scenario
2019-07-23 11:32:28,747|I|Thread-1|firstEvaluation.20190723_113212.001|XMLScenario|Activity 1 - executing activity
2019-07-23 11:32:29,350|I|Thread-1|firstEvaluation.20190723_113212.001|XMLScenario|Activity 1|#  5|io.readFile(var,file) - executing readFile(var,file)(xmlFile, $(syspath|data|fullpath)/example_1.xml)
2019-07-23 11:32:29,361|I|Thread-1|firstEvaluation.20190723_113212.001|XMLScenario|Activity 1|#  5|io.readFile(var,file) - PASS Content read from 'C:\projects\firstEvaluation\artifact\data\example_1.xml' to ${xmlFile}
2019-07-23 11:32:29,968|I|Thread-1|firstEvaluation.20190723_113212.001|XMLScenario|Activity 1|#  6|xml.storeValues(xml,xpath - executing storeValues(xml,xpath,var)($(syspath|data|fullpath)/example_1.xml, /catalog/book[publish_date[starts-with(.,"2000-12-")] and ./title/text()]/title, bookList)
2019-07-23 11:32:30,094|I|Thread-1|firstEvaluation.20190723_113212.001|XMLScenario|Activity 1|#  6|xml.storeValues(xml,xpath - PASS XML matches saved to 'bookList'
2019-07-23 11:32:30,708|I|Thread-1|firstEvaluation.20190723_113212.001|XMLScenario|Activity 1|#  7|base.verbose(text) - executing verbose(text)(${bookList})
2019-07-23 11:32:30,713|I|Thread-1|firstEvaluation.20190723_113212.001|XMLScenario|Activity 1|#  7|base.verbose(text) - Midnight Rain,Creepy Crawlies,Microsoft .NET: The Programming Bible,MSXML3: A Comprehensive Guide
2019-07-23 11:32:30,726|I|Thread-1|firstEvaluation.20190723_113212.001|XMLScenario|Activity 1|#  7|base.verbose(text) - PASS 
2019-07-23 11:32:30,730|I|Thread-1|firstEvaluation.20190723_113212.001|XMLScenario|Activity 2 - executing activity
2019-07-23 11:32:31,336|I|Thread-1|firstEvaluation.20190723_113212.001|XMLScenario|Activity 2|#  8|xml.storeValue(xml,xpath, - executing storeValue(xml,xpath,var)($(syspath|data|fullpath)/example_1.xml, sum(/catalog/book[*]/price), totalPrice)
2019-07-23 11:32:31,362|I|Thread-1|firstEvaluation.20190723_113212.001|XMLScenario|Activity 2|#  8|xml.storeValue(xml,xpath, - PASS XML matches saved to 'totalPrice'
2019-07-23 11:32:31,978|I|Thread-1|firstEvaluation.20190723_113212.001|XMLScenario|Activity 2|#  9|base.verbose(text) - executing verbose(text)(${totalPrice})
2019-07-23 11:32:31,978|I|Thread-1|firstEvaluation.20190723_113212.001|XMLScenario|Activity 2|#  9|base.verbose(text) - 214.40000000000003
2019-07-23 11:32:31,978|I|Thread-1|firstEvaluation.20190723_113212.001|XMLScenario|Activity 2|#  9|base.verbose(text) - PASS 
2019-07-23 11:32:31,978|I|Thread-1|firstEvaluation.20190723_113212.001|XMLScenario|Activity 4 - executing activity
2019-07-23 11:32:32,606|I|Thread-1|firstEvaluation.20190723_113212.001|XMLScenario|Activity 4|# 10|xml.storeValues(xml,xpath - executing storeValues(xml,xpath,var)($(syspath|data|fullpath)/example_1.xml, /catalog/book[genre="Computer"]/title|/catalog/book[genre="Computer"]/author, list)
2019-07-23 11:32:32,637|I|Thread-1|firstEvaluation.20190723_113212.001|XMLScenario|Activity 4|# 10|xml.storeValues(xml,xpath - PASS XML matches saved to 'list'
2019-07-23 11:32:33,247|I|Thread-1|firstEvaluation.20190723_113212.001|XMLScenario|Activity 4|# 11|base.verbose(text) - executing verbose(text)(${list})
2019-07-23 11:32:33,247|I|Thread-1|firstEvaluation.20190723_113212.001|XMLScenario|Activity 4|# 11|base.verbose(text) - Gambardella, Matthew,XML Developer's Guide,O'Brien, Tim,Microsoft .NET: The Programming Bible,O'Brien, Tim,MSXML3: A Comprehensive Guide,Galos, Mike,Visual Studio 7: A Comprehensive Guide
2019-07-23 11:32:33,247|I|Thread-1|firstEvaluation.20190723_113212.001|XMLScenario|Activity 4|# 11|base.verbose(text) - PASS 
2019-07-23 11:32:33,263|I|Thread-1|firstEvaluation.20190723_113212.001|XMLScenario|Activity 5 - executing activity
2019-07-23 11:32:33,872|I|Thread-1|firstEvaluation.20190723_113212.001|XMLScenario|Activity 5|# 12|xml.storeValues(xml,xpath - executing storeValues(xml,xpath,var)($(syspath|data|fullpath)/example_1.xml, /catalog/book[author = "Corets, Eva"]/title, titleList)
2019-07-23 11:32:33,888|I|Thread-1|firstEvaluation.20190723_113212.001|XMLScenario|Activity 5|# 12|xml.storeValues(xml,xpath - PASS XML matches saved to 'titleList'
2019-07-23 11:32:34,497|I|Thread-1|firstEvaluation.20190723_113212.001|XMLScenario|Activity 5|# 13|base.verbose(text) - executing verbose(text)(${titleList})
2019-07-23 11:32:34,497|I|Thread-1|firstEvaluation.20190723_113212.001|XMLScenario|Activity 5|# 13|base.verbose(text) - Maeve Ascendant,Oberon's Legacy,The Sundered Grail
2019-07-23 11:32:34,497|I|Thread-1|firstEvaluation.20190723_113212.001|XMLScenario|Activity 5|# 13|base.verbose(text) - PASS 
2019-07-23 11:32:34,638|I|Thread-1|[firstEvaluation.20190723_113212.001|XMLScenario] saving test scenario
2019-07-23 11:32:34,731|I|Thread-1|[20190723_113210] 
/-TEST COMPLETE-----------------------------------------------------------------
| Test Output:    C:\projects\firstEvaluation\output\20190723_113210\firstEvaluation.20190723_113212.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 20818 ms
» Test Steps:     31
» Error(s):       0



2019-07-23 11:32:38,808|I|Thread-1|[20190723_113210] 
/-TEST COMPLETE-----------------------------------------------------------------
| Test Script:    C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 27789 ms
» Iterations:     [1] total 1
» Test Steps:     31
» Passed:         31
» Error(s):       0
» Iteration 1 of 1: C:\projects\firstEvaluation\output\20190723_113210\firstEvaluation.20190723_113212.001.xlsx



2019-07-23 11:32:39,030|I|main|[20190723_113210] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] now completed
2019-07-23 11:32:39,033|I|main|[20190723_113210] all execution thread(s) have terminated
2019-07-23 11:32:39,036|I|main|[20190723_113210] test run completed in about 28 seconds
2019-07-23 11:32:39,146|I|main|No predefined nexial-setup found
2019-07-23 11:32:39,183|I|main|outputBase not set; output-to-cloud DISABLED!
2019-07-23 11:32:39,184|I|main|accessKey not set; output-to-cloud DISABLED!
2019-07-23 11:32:39,185|I|main|secretKey not set; output-to-cloud DISABLED!
2019-07-23 11:32:39,186|I|main|generating HTML output for this execution to C:\projects\firstEvaluation\output\20190723_113210\execution-output.html
2019-07-23 11:32:39,939|I|main|generating JUnit XML output for this execution to C:\projects\firstEvaluation\output\20190723_113210\junit.xml
2019-07-23 11:32:39,970|I|main|generated JUnit report for this execution: C:\projects\firstEvaluation\output\20190723_113210\junit.xml
2019-07-23 11:32:39,970|I|main|nexial mailer not enabled: nexial.enableEmail=false
2019-07-23 11:32:39,970|I|main|skipped email notification as configured
2019-07-23 11:32:39,985|I|main|exiting Nexial...
2019-07-23 11:32:39,985|I|main|

/-END OF EXECUTION--------------------------------------------------------------
| » Execution Time: 28 sec.
| » Test Steps....: 31
| » Passed........: 31
| » Failed........: 0
| » Success Rate..: 100.00%
\----------------------------------------------------------nexial-core 2.4_0567-

2019-07-23 11:32:39,985|I|main|ALL PASSED!
2019-07-23 11:32:39,985|I|main|End of Execution:
NEXIAL_OUTPUT:         C:\projects\firstEvaluation\output\20190723_113210
NEXIAL_EXECUTION_HTML: C:\projects\firstEvaluation\output\20190723_113210\execution-output.html
NEXIAL_JUNIT_XML:      C:\projects\firstEvaluation\output\20190723_113210\junit.xml
NEXIAL_SUCCESS_RATE:   100.00%
NEXIAL_EXIT_STATUS:    0
