2019-07-22 16:07:44,569|I|Thread-1|(DELAYED) nexial-core dev_0581 starting up...
2019-07-22 16:07:44,571|I|Thread-1|(DELAYED) data file resolved as C:\Users\DEEPAN~1\AppData\Local\Temp\HAMju\firstEvaluation.data.xlsx
2019-07-22 16:07:44,571|I|Thread-1|(DELAYED) input files and output directory resolved...
2019-07-22 16:07:44,571|I|Thread-1|(DELAYED) No predefined nexial-setup found
2019-07-22 16:07:44,572|I|Thread-1|(DELAYED) [20190722_160744] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] resolve RUN ID as 20190722_160744
2019-07-22 16:07:44,572|I|Thread-1|(DELAYED) [20190722_160744] [C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx] new thread started
2019-07-22 16:07:44,572|I|Thread-1|No predefined nexial-setup found
2019-07-22 16:07:44,624|I|Thread-1|outputBase not set; output-to-cloud DISABLED!
2019-07-22 16:07:44,625|I|Thread-1|accessKey not set; output-to-cloud DISABLED!
2019-07-22 16:07:44,625|I|Thread-1|secretKey not set; output-to-cloud DISABLED!
2019-07-22 16:07:44,639|I|Thread-1|missing REQUIRED configuration; sms DISABLED!
2019-07-22 16:07:45,334|I|Thread-1|[20190722_160744] executing C:\projects\firstEvaluation\artifact\script\firstEvaluation.xlsx with 1 iteration(s)
2019-07-22 16:07:45,338|I|Thread-1|[20190722_160744] create directory C:\projects\firstEvaluation\output\20190722_160744\captures
2019-07-22 16:07:45,338|I|Thread-1|[20190722_160744] create directory C:\projects\firstEvaluation\output\20190722_160744\logs
2019-07-22 16:07:45,684|I|Thread-1|[20190722_160744] merging test data to tmp file C:\projects\firstEvaluation\output\20190722_160744\firstEvaluation.20190722_160745.001.xlsx
2019-07-22 16:07:45,685|I|Thread-1|refetching data from C:\projects\firstEvaluation\artifact\data\firstEvaluation.data.xlsx
2019-07-22 16:07:45,836|I|Thread-1|[20190722_160744] test script and test data merged to C:\projects\firstEvaluation\output\20190722_160744\firstEvaluation.20190722_160745.001.xlsx
2019-07-22 16:07:46,382|I|Thread-1|STARTS
2019-07-22 16:07:46,411|I|Thread-1|firstEvaluation.20190722_160745.001 - executing iteration #1 of 1; Iteration Id 1
2019-07-22 16:07:46,420|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario - executing test scenario
2019-07-22 16:07:46,421|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 1 - executing activity
2019-07-22 16:07:47,022|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 1|#  5|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].product_name, productNames)
2019-07-22 16:07:47,098|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 1|#  5|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].product_name' stored to ${productNames}
2019-07-22 16:07:47,699|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 1|#  6|base.verbose(text) - executing verbose(text)(${productNames})
2019-07-22 16:07:47,700|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 1|#  6|base.verbose(text) - ["sildenafil citrate","Mountain Juniperus ashei"]
2019-07-22 16:07:47,839|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 1|#  6|base.verbose(text) - PASS 
2019-07-22 16:07:47,841|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2 - executing activity
2019-07-22 16:07:48,441|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|#  7|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].quantity, quantityList)
2019-07-22 16:07:48,444|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|#  7|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].quantity' stored to ${quantityList}
2019-07-22 16:07:49,046|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|#  8|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[supplier=Wisozk Inc].unit_cost, costList)
2019-07-22 16:07:49,049|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|#  8|json.storeValues(json,jso - PASS EXPECTED match against 'products[supplier=Wisozk Inc].unit_cost' stored to ${costList}
2019-07-22 16:07:49,651|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|#  9|base.save(var,value) - executing save(var,value)(unit_costList, [LIST${costList} => replaceRegex([$],)])
2019-07-22 16:07:49,652|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|#  9|base.save(var,value) - PASS stored '[LIST["$10.47","$8.74"] => replaceRegex([$],)]' as ${unit_costList}
2019-07-22 16:07:50,255|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 10|base.verbose(text) - executing verbose(text)(${unit_costList})
2019-07-22 16:07:50,255|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 10|base.verbose(text) - [LIST["$10.47","$8.74"] => replaceRegex([$],)]
2019-07-22 16:07:50,257|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 10|base.verbose(text) - PASS 
2019-07-22 16:07:50,858|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 11|base.save(var,value) - executing save(var,value)(sumTotal, 0)
2019-07-22 16:07:50,859|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 11|base.save(var,value) - PASS stored '0' as ${sumTotal}
2019-07-22 16:07:51,461|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 12|base.save(var,value) - executing save(var,value)(counter, 0)
2019-07-22 16:07:51,463|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 12|base.save(var,value) - PASS stored '0' as ${counter}
2019-07-22 16:07:52,064|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 13|base.save(var,value) - executing save(var,value)(length, $(array|length|${quantityList}))
2019-07-22 16:07:52,066|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 13|base.save(var,value) - PASS stored '2' as ${length}
2019-07-22 16:07:52,668|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 14|base.save(var,value) - executing save(var,value)(mulValue, 0)
2019-07-22 16:07:52,669|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 14|base.save(var,value) - PASS stored '0' as ${mulValue}
2019-07-22 16:07:53,270|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 15|base.verbose(text) - executing verbose(text)(${unit_costList})
2019-07-22 16:07:53,271|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 15|base.verbose(text) - [LIST["$10.47","$8.74"] => replaceRegex([$],)]
2019-07-22 16:07:53,272|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 15|base.verbose(text) - PASS 
2019-07-22 16:07:53,874|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 16|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(6, -1)
2019-07-22 16:07:53,875|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #1 --------------------------------------------->
2019-07-22 16:07:53,875|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-22 16:07:53,876|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 18|base.save(var,value) - executing save(var,value)(unit_cost, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:07:53,878|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 18|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${unit_cost}
2019-07-22 16:07:53,878|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 19|base.save(var,value) - executing save(var,value)(quantity, $(array|item|${quantityList}|${counter}))
2019-07-22 16:07:53,879|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 19|base.save(var,value) - [repeat-until] PASS stored '261' as ${quantity}
2019-07-22 16:07:53,880|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 20|base.save(var,value) - executing save(var,value)(mulValue, [NUMBER(${unit_cost}) => multiply(${quantity})])
2019-07-22 16:07:53,892|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 20|base.save(var,value) - [repeat-until] PASS stored '2732.67' as ${mulValue}
2019-07-22 16:07:53,894|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 21|base.save(var,value) - executing save(var,value)(sumTotal, [NUMBER(${sumTotal}) => add(${mulValue})])
2019-07-22 16:07:53,896|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 21|base.save(var,value) - [repeat-until] PASS stored '2732.67' as ${sumTotal}
2019-07-22 16:07:53,897|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 16:07:53,899|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2019-07-22 16:07:53,900|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #2 --------------------------------------------->
2019-07-22 16:07:53,901|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-22 16:07:53,901|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 18|base.save(var,value) - executing save(var,value)(unit_cost, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:07:53,902|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 18|base.save(var,value) - [repeat-until] PASS stored '"$8.74"' as ${unit_cost}
2019-07-22 16:07:53,902|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 19|base.save(var,value) - executing save(var,value)(quantity, $(array|item|${quantityList}|${counter}))
2019-07-22 16:07:53,903|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 19|base.save(var,value) - [repeat-until] PASS stored '292' as ${quantity}
2019-07-22 16:07:53,903|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 20|base.save(var,value) - executing save(var,value)(mulValue, [NUMBER(${unit_cost}) => multiply(${quantity})])
2019-07-22 16:07:53,904|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 20|base.save(var,value) - [repeat-until] PASS stored '2552.08' as ${mulValue}
2019-07-22 16:07:53,904|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 21|base.save(var,value) - executing save(var,value)(sumTotal, [NUMBER(${sumTotal}) => add(${mulValue})])
2019-07-22 16:07:53,916|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 21|base.save(var,value) - [repeat-until] PASS stored '5284.75' as ${sumTotal}
2019-07-22 16:07:53,917|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2019-07-22 16:07:53,918|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 22|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2019-07-22 16:07:53,918|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #3 --------------------------------------------->
2019-07-22 16:07:53,919|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${length}, ${counter})
2019-07-22 16:07:53,920|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 16|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2019-07-22 16:07:54,522|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 23|base.verbose(text) - executing verbose(text)(${sumTotal})
2019-07-22 16:07:54,523|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 23|base.verbose(text) - 5284.75
2019-07-22 16:07:54,525|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 2|# 23|base.verbose(text) - PASS 
2019-07-22 16:07:54,526|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 3 - executing activity
2019-07-22 16:07:55,127|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 3|# 24|base.save(var,value) - executing save(var,value)(jsonFile, $(syspath|data|fullpath)/example_2.json)
2019-07-22 16:07:55,129|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 3|# 24|base.save(var,value) - PASS stored 'C:\projects\firstEvaluation\artifact\data\example_2.json' as ${jsonFile}
2019-07-22 16:07:55,730|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 3|# 25|base.save(var,value) - executing save(var,value)(var, [JSON(${jsonFile} => extract(products[unit_cost => ascending])])
2019-07-22 16:07:55,733|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 3|# 25|base.save(var,value) - PASS stored '[JSON(C:\projects\firstEvaluation\artifact\data\example_2.json => extract(products[unit_cost => ascending])]' as ${var}
2019-07-22 16:07:56,335|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 3|# 26|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)(var, products.product_name, result)
2019-07-22 16:07:56,342|E|Thread-1|Error converting string to JSON object: A JSONObject text must begin with '{' at 1 [character 2 line 1]
org.json.JSONException: A JSONObject text must begin with '{' at 1 [character 2 line 1]
	at org.json.JSONTokener.syntaxError(JSONTokener.java:505)
	at org.json.JSONObject.<init>(JSONObject.java:214)
	at org.json.JSONObject.<init>(JSONObject.java:357)
	at org.nexial.core.utils.JsonUtils.toJSONObject(JsonUtils.java:75)
	at org.nexial.core.plugins.json.JsonCommand.resolveToJSONObject(JsonCommand.java:323)
	at org.nexial.core.plugins.json.JsonCommand.toJSONObject(JsonCommand.java:441)
	at org.nexial.core.plugins.json.JsonCommand.sanityCheck(JsonCommand.java:445)
	at org.nexial.core.plugins.json.JsonCommand.find(JsonCommand.java:449)
	at org.nexial.core.plugins.json.JsonCommand.extractJsonValue(JsonCommand.java:384)
	at org.nexial.core.plugins.json.JsonCommand.storeValues(JsonCommand.java:123)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.nexial.core.plugins.base.BaseCommand.execute(BaseCommand.java:156)
	at org.nexial.core.model.TestStep.invokeCommand(TestStep.java:327)
	at org.nexial.core.model.TestStep.execute(TestStep.java:169)
	at org.nexial.core.model.TestCase.execute(TestCase.java:94)
	at org.nexial.core.model.TestScenario.execute(TestScenario.java:130)
	at org.nexial.core.model.ExecutionContext.execute(ExecutionContext.java:1184)
	at org.nexial.core.ExecutionThread.run(ExecutionThread.java:174)
2019-07-22 16:07:56,345|E|Thread-1|JSON string in error is as follows:
var
2019-07-22 16:07:56,349|E|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 3|# 26|json.storeValues(json,jso - FAIL EXPECTED match against 'products.product_name' was not found
2019-07-22 16:07:56,952|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 3|# 27|base.verbose(text) - executing verbose(text)(result)
2019-07-22 16:07:56,955|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 3|# 27|base.verbose(text) - result
2019-07-22 16:07:56,959|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 3|# 27|base.verbose(text) - PASS 
2019-07-22 16:07:56,960|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 4 - executing activity
2019-07-22 16:07:57,560|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 4|# 28|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products[product_name=Dextromathorphan HBr].supplier, supplierList)
2019-07-22 16:07:57,566|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 4|# 28|json.storeValues(json,jso - PASS EXPECTED match against 'products[product_name=Dextromathorphan HBr].supplier' stored to ${supplierList}
2019-07-22 16:07:58,168|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 4|# 29|base.verbose(text) - executing verbose(text)(${supplierList})
2019-07-22 16:07:58,168|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 4|# 29|base.verbose(text) - ["Schmitt-Weissnat","SC-Pharmacy"]
2019-07-22 16:07:58,170|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 4|# 29|base.verbose(text) - PASS 
2019-07-22 16:07:58,171|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5 - executing activity
2019-07-22 16:07:58,772|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 30|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products.product_name, productList)
2019-07-22 16:07:58,801|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 30|json.storeValues(json,jso - PASS EXPECTED match against 'products.product_name' stored to ${productList}
2019-07-22 16:07:59,402|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 31|json.storeValues(json,jso - executing storeValues(json,jsonpath,var)($(syspath|data|fullpath)/example_2.json, products.unit_cost, costList)
2019-07-22 16:07:59,405|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 31|json.storeValues(json,jso - PASS EXPECTED match against 'products.unit_cost' stored to ${costList}
2019-07-22 16:08:00,006|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 32|base.save(var,value) - executing save(var,value)(unit_costList, [LIST${costList} => replaceRegex([$],)])
2019-07-22 16:08:00,008|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 32|base.save(var,value) - PASS stored '[LIST["$10.47","$8.74","$20.53","$20.53"] => replaceRegex([$],)]' as ${unit_costList}
2019-07-22 16:08:00,609|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 33|base.save(var,value) - executing save(var,value)(counter, 0)
2019-07-22 16:08:00,610|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 33|base.save(var,value) - PASS stored '0' as ${counter}
2019-07-22 16:08:01,212|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 34|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(5, -1)
2019-07-22 16:08:01,214|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #1 --------------------------------------------->
2019-07-22 16:08:01,214|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,215|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,216|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,216|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,222|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,224|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,224|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,224|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,225|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,227|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,227|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,227|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,227|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,228|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #2 --------------------------------------------->
2019-07-22 16:08:01,228|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,229|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,230|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,230|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,231|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,231|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,231|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,243|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,243|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,244|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,244|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,245|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,246|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,246|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #3 --------------------------------------------->
2019-07-22 16:08:01,246|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,247|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,247|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,247|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,248|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,248|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,249|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,249|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,249|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,249|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,249|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,250|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,257|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,257|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #4 --------------------------------------------->
2019-07-22 16:08:01,257|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,258|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,259|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,259|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,260|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,260|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,260|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,261|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,261|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,261|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,261|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,262|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,262|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,262|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #5 --------------------------------------------->
2019-07-22 16:08:01,262|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,263|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,263|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,264|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,264|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,264|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,265|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,276|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,276|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,277|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,277|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,278|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,278|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,279|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #6 --------------------------------------------->
2019-07-22 16:08:01,279|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,280|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,280|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,280|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,281|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,281|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,281|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,282|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,282|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,282|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,282|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,284|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,290|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,290|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #7 --------------------------------------------->
2019-07-22 16:08:01,291|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,291|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,292|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,292|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,293|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,294|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,294|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,294|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,295|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,295|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,295|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,295|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,296|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,296|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #8 --------------------------------------------->
2019-07-22 16:08:01,296|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,297|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,298|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,298|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,299|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,310|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,311|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,311|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,311|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,312|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,312|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,312|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,312|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,313|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #9 --------------------------------------------->
2019-07-22 16:08:01,313|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,313|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,314|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,314|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,315|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,315|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,315|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,316|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,316|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,316|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,316|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,318|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,325|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,326|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #10 -------------------------------------------->
2019-07-22 16:08:01,326|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,326|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,327|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,327|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,327|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,328|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,328|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,328|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,328|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,329|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,329|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,329|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,329|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,330|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #11 -------------------------------------------->
2019-07-22 16:08:01,330|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,330|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,331|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,331|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,332|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,332|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,332|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,332|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,343|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,344|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,344|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,344|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,345|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,345|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #12 -------------------------------------------->
2019-07-22 16:08:01,345|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,346|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,347|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,347|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,347|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,347|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,348|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,348|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,348|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,348|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,348|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,349|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,349|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,349|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #13 -------------------------------------------->
2019-07-22 16:08:01,350|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,353|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,359|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,359|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,360|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,361|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,362|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,362|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,362|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,362|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,362|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,363|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,363|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,363|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #14 -------------------------------------------->
2019-07-22 16:08:01,363|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,364|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,364|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,364|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,365|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,365|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,365|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,365|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,366|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,377|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,378|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,378|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,379|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,379|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #15 -------------------------------------------->
2019-07-22 16:08:01,379|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,380|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,381|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,381|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,382|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,382|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,383|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,383|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,384|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,391|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,391|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,391|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,391|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,392|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #16 -------------------------------------------->
2019-07-22 16:08:01,392|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,393|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,394|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,394|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,395|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,395|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,395|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,396|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,396|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,396|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,396|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,397|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,397|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,397|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #17 -------------------------------------------->
2019-07-22 16:08:01,397|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,398|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,398|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,399|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,411|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,412|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,413|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,414|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,414|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,414|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,414|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,414|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,414|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,415|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #18 -------------------------------------------->
2019-07-22 16:08:01,415|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,415|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,416|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,416|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,417|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,419|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,420|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,424|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,424|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,425|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,425|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,425|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,426|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,426|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #19 -------------------------------------------->
2019-07-22 16:08:01,426|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,427|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,427|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,428|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,428|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,428|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,429|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,429|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,429|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,429|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,430|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,430|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,430|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,430|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #20 -------------------------------------------->
2019-07-22 16:08:01,431|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,431|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,432|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,432|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,433|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,444|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,444|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,444|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,444|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,445|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,445|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,445|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,445|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,446|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #21 -------------------------------------------->
2019-07-22 16:08:01,446|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,446|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,446|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,447|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,447|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,447|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,448|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,448|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,448|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,448|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,449|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,449|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,449|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,449|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #22 -------------------------------------------->
2019-07-22 16:08:01,450|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,452|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,459|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,459|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,460|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,460|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,460|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,460|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,460|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,461|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,461|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,461|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,461|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,462|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #23 -------------------------------------------->
2019-07-22 16:08:01,462|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,462|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,462|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,463|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,463|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,463|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,464|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,464|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,464|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,464|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,464|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,465|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,465|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,465|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #24 -------------------------------------------->
2019-07-22 16:08:01,465|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,466|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,467|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,476|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,477|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,477|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,478|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,478|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,478|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,478|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,478|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,479|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,479|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,479|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #25 -------------------------------------------->
2019-07-22 16:08:01,479|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,479|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,480|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,480|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,481|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,481|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,481|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,481|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,481|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,482|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,482|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,482|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,482|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,482|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #26 -------------------------------------------->
2019-07-22 16:08:01,483|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,484|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,486|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,492|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,493|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,493|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,493|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,493|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,493|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,494|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,494|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,494|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,494|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,494|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #27 -------------------------------------------->
2019-07-22 16:08:01,495|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,495|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,495|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,496|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,496|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,496|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,496|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,497|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,497|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,497|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,497|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,497|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,498|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,498|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #28 -------------------------------------------->
2019-07-22 16:08:01,498|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,498|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,499|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,499|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,499|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,500|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,509|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,509|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,509|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,510|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,510|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,510|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,510|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,511|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #29 -------------------------------------------->
2019-07-22 16:08:01,511|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,511|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,511|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,512|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,512|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,512|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,512|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,513|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,513|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,513|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,513|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,513|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,514|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,514|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #30 -------------------------------------------->
2019-07-22 16:08:01,514|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,514|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,515|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,515|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,515|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,516|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,517|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,517|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,526|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,526|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,526|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,526|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,527|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,527|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #31 -------------------------------------------->
2019-07-22 16:08:01,527|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,527|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,528|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,528|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,528|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,529|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,529|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,529|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,529|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,529|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,530|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,530|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,530|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,531|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #32 -------------------------------------------->
2019-07-22 16:08:01,531|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,531|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,532|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,532|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,532|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,533|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,542|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,542|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,542|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,543|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,543|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,543|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,543|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,544|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #33 -------------------------------------------->
2019-07-22 16:08:01,544|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,544|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,545|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,547|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,548|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,548|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,548|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,548|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,549|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,549|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,556|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,556|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,557|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,557|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #34 -------------------------------------------->
2019-07-22 16:08:01,557|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,558|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,558|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,558|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,559|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,559|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,560|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,560|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,560|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,560|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,561|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,561|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,561|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,561|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #35 -------------------------------------------->
2019-07-22 16:08:01,562|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,578|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,579|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,579|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,580|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,580|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,580|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,581|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,581|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,581|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,581|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,582|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,582|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,582|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #36 -------------------------------------------->
2019-07-22 16:08:01,583|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,589|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,589|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,590|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,590|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,590|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,591|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,591|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,591|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,591|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,592|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,592|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,592|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,592|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #37 -------------------------------------------->
2019-07-22 16:08:01,593|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,593|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,593|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,594|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,594|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,594|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,595|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,595|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,595|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,596|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,596|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,596|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,596|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,596|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #38 -------------------------------------------->
2019-07-22 16:08:01,597|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,607|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,608|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,608|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,609|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,609|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,609|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,609|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,610|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,610|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,610|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,611|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,611|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,611|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #39 -------------------------------------------->
2019-07-22 16:08:01,611|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,612|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,612|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,612|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,613|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,613|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,613|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,614|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,614|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,614|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,614|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,614|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,614|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,615|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #40 -------------------------------------------->
2019-07-22 16:08:01,615|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,615|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,616|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,625|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,626|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,626|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,626|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,627|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,627|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,628|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,628|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,628|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,628|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,628|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #41 -------------------------------------------->
2019-07-22 16:08:01,629|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,629|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,629|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,630|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,630|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,630|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,630|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,630|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,631|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,631|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,631|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,631|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,631|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,632|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #42 -------------------------------------------->
2019-07-22 16:08:01,632|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,633|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,634|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,642|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,642|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,642|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,643|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,643|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,643|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,644|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,644|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,644|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,644|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,645|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #43 -------------------------------------------->
2019-07-22 16:08:01,645|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,645|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,646|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,646|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,646|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,647|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,647|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,647|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,647|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,648|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,648|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,648|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,648|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,648|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #44 -------------------------------------------->
2019-07-22 16:08:01,649|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,650|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,659|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,660|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,660|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,661|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,661|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,661|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,661|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,662|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,662|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,662|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,662|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,663|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #45 -------------------------------------------->
2019-07-22 16:08:01,663|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,663|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,663|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,664|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,664|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,664|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,664|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,664|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,665|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,665|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,665|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,665|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,665|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,666|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #46 -------------------------------------------->
2019-07-22 16:08:01,666|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,666|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,668|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,676|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,676|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,677|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,677|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,677|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,677|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,678|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,678|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,678|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,678|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,679|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #47 -------------------------------------------->
2019-07-22 16:08:01,679|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,679|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,680|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,680|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,680|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,681|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,681|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,681|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,681|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,682|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,682|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,682|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,682|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,682|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #48 -------------------------------------------->
2019-07-22 16:08:01,683|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,683|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,692|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,693|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,693|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,693|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,694|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,694|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,694|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,695|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,695|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,695|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,695|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,696|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #49 -------------------------------------------->
2019-07-22 16:08:01,696|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,696|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,697|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,697|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,697|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,698|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,698|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,698|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,698|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,699|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,699|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,699|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,699|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,699|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #50 -------------------------------------------->
2019-07-22 16:08:01,700|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,702|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,709|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,710|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,710|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,711|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,711|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,711|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,711|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,712|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,712|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,712|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,712|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,713|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #51 -------------------------------------------->
2019-07-22 16:08:01,713|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,713|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,714|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,714|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,714|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,715|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,715|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,715|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,715|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,716|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,716|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,717|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,718|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,725|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #52 -------------------------------------------->
2019-07-22 16:08:01,725|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,726|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,726|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,727|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,727|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,727|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,728|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,728|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,728|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,729|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,729|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,729|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,729|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,729|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #53 -------------------------------------------->
2019-07-22 16:08:01,729|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,730|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,730|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,730|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,731|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,731|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,731|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,731|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,731|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,732|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,732|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,732|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,732|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,742|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #54 -------------------------------------------->
2019-07-22 16:08:01,742|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,742|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,743|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,743|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,744|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,744|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,744|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,745|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,745|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,745|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,745|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,746|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,746|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,746|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #55 -------------------------------------------->
2019-07-22 16:08:01,746|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,746|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,747|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,747|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,747|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,747|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,748|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,748|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,748|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,748|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,748|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,749|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,749|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,749|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #56 -------------------------------------------->
2019-07-22 16:08:01,759|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,760|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,761|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,761|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,761|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,762|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,762|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,762|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,762|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,762|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,762|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,763|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,763|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,763|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #57 -------------------------------------------->
2019-07-22 16:08:01,763|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,763|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,764|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,764|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,764|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,765|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,765|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,765|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,765|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,766|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,766|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,767|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,775|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,775|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #58 -------------------------------------------->
2019-07-22 16:08:01,775|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,776|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,776|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,776|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,777|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,777|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,777|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,777|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,778|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,778|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,778|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,778|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,778|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,778|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #59 -------------------------------------------->
2019-07-22 16:08:01,779|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,779|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,779|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,779|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,780|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,780|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,780|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,780|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,780|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,781|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,781|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,781|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,781|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,781|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #60 -------------------------------------------->
2019-07-22 16:08:01,782|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,782|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,783|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,792|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,793|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,793|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,793|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,793|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,794|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,794|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,794|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,794|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,795|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,795|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #61 -------------------------------------------->
2019-07-22 16:08:01,795|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,796|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,796|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,796|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,797|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,797|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,797|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,797|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,797|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,798|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,798|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,798|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,798|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,798|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #62 -------------------------------------------->
2019-07-22 16:08:01,799|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,800|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,801|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,809|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,809|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,809|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,810|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,810|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,810|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,811|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,811|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,811|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,811|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,811|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #63 -------------------------------------------->
2019-07-22 16:08:01,812|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,812|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,812|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,813|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,813|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,813|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,814|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,814|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,814|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,814|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,814|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,815|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,815|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,815|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #64 -------------------------------------------->
2019-07-22 16:08:01,815|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,816|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,817|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,825|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,825|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,826|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,826|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,826|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,826|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,827|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,827|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,827|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,828|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,828|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #65 -------------------------------------------->
2019-07-22 16:08:01,828|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,828|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,829|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,829|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,830|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,830|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,830|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,830|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,830|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,831|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,831|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,831|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,831|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,831|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #66 -------------------------------------------->
2019-07-22 16:08:01,831|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,832|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,841|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,842|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,843|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,843|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,843|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,844|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,844|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,844|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,845|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,845|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,845|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,845|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #67 -------------------------------------------->
2019-07-22 16:08:01,845|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,846|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,846|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,847|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,847|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,847|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,848|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,848|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,848|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,848|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,848|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,848|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,849|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,849|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #68 -------------------------------------------->
2019-07-22 16:08:01,849|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,849|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,858|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,860|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,860|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,860|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,862|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,863|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,863|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,863|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,863|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,864|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,864|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,864|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #69 -------------------------------------------->
2019-07-22 16:08:01,864|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,865|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,865|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,865|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,866|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,872|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,873|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,873|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,873|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,873|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,874|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,874|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,874|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,874|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #70 -------------------------------------------->
2019-07-22 16:08:01,874|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,875|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,875|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,876|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,876|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,876|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,877|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,877|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,877|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,877|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,877|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,878|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,878|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,878|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #71 -------------------------------------------->
2019-07-22 16:08:01,878|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,879|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,879|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,879|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,880|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,880|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,880|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,892|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,892|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,893|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,893|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,893|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,894|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,894|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #72 -------------------------------------------->
2019-07-22 16:08:01,894|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,894|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,895|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,895|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,895|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,895|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,896|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,896|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,896|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,896|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,896|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,897|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,897|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,897|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #73 -------------------------------------------->
2019-07-22 16:08:01,897|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,897|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,898|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,898|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,898|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,898|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,899|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,899|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,899|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,899|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,899|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,900|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,909|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,910|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #74 -------------------------------------------->
2019-07-22 16:08:01,910|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,911|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,911|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,911|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,912|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,912|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,912|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,912|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,912|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,913|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,913|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,913|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,913|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,913|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #75 -------------------------------------------->
2019-07-22 16:08:01,913|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,914|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,914|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,914|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,914|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,915|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,915|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,915|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,915|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,915|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,915|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,916|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,916|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,916|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #76 -------------------------------------------->
2019-07-22 16:08:01,917|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,918|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,926|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,926|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,927|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,927|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,928|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,928|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,928|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,928|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,929|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,929|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,929|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,929|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #77 -------------------------------------------->
2019-07-22 16:08:01,929|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,930|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,930|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,931|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,931|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,931|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,931|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,932|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,932|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,932|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,932|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,933|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,941|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,942|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #78 -------------------------------------------->
2019-07-22 16:08:01,942|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,942|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,943|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,943|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,944|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,944|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,944|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,944|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,944|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,945|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,945|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,945|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,945|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,945|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #79 -------------------------------------------->
2019-07-22 16:08:01,945|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,946|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,946|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,946|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,947|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,947|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,947|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,947|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,947|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,948|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,948|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,948|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,948|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,948|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #80 -------------------------------------------->
2019-07-22 16:08:01,948|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,949|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,949|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,959|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,959|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,959|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,960|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,960|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,960|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,960|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,961|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,961|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,961|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,961|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #81 -------------------------------------------->
2019-07-22 16:08:01,961|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,962|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,962|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,963|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,963|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,963|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,963|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,964|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,964|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,964|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,964|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,964|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,964|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,965|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #82 -------------------------------------------->
2019-07-22 16:08:01,965|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,965|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,967|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,975|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,975|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,975|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,976|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,976|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,976|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,977|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,977|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,977|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,977|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,977|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #83 -------------------------------------------->
2019-07-22 16:08:01,978|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,978|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,979|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,979|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,979|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,979|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,980|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,980|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,980|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,980|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,980|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,981|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,981|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,981|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #84 -------------------------------------------->
2019-07-22 16:08:01,981|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,981|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,982|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,983|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,992|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,992|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,992|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,993|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,993|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,993|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,993|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,994|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,994|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,994|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #85 -------------------------------------------->
2019-07-22 16:08:01,994|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,995|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,995|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:01,995|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:01,996|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:01,996|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:01,996|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:01,997|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:01,997|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:01,997|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:01,997|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:01,997|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:01,998|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:01,998|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #86 -------------------------------------------->
2019-07-22 16:08:01,998|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:01,998|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:01,999|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,008|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,008|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,008|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,009|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,009|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,009|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,010|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,010|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,010|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,010|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,011|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #87 -------------------------------------------->
2019-07-22 16:08:02,011|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,011|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,011|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,012|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,012|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,012|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,012|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,013|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,013|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,013|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,013|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,013|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,013|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,014|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #88 -------------------------------------------->
2019-07-22 16:08:02,014|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,014|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,014|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,015|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,015|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,025|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,025|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,025|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,025|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,026|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,026|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,026|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,027|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,027|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #89 -------------------------------------------->
2019-07-22 16:08:02,027|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,028|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,028|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,028|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,029|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,029|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,029|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,029|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,029|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,030|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,030|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,030|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,030|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,030|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #90 -------------------------------------------->
2019-07-22 16:08:02,031|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,031|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,031|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,031|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,032|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,042|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,042|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,043|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,043|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,043|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,043|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,043|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,044|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,044|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #91 -------------------------------------------->
2019-07-22 16:08:02,044|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,044|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,045|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,045|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,045|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,046|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,046|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,046|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,046|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,047|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,047|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,047|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,047|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,047|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #92 -------------------------------------------->
2019-07-22 16:08:02,048|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,048|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,048|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,049|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,052|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,059|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,060|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,060|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,060|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,061|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,061|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,061|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,061|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,061|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #93 -------------------------------------------->
2019-07-22 16:08:02,062|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,062|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,062|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,062|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,063|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,063|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,063|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,064|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,064|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,064|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,064|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,064|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,065|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,065|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #94 -------------------------------------------->
2019-07-22 16:08:02,065|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,066|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,069|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,075|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,076|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,076|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,076|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,076|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,076|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,077|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,077|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,077|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,077|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,078|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #95 -------------------------------------------->
2019-07-22 16:08:02,078|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,078|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,078|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,079|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,079|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,079|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,080|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,080|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,080|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,080|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,080|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,081|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,081|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,081|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #96 -------------------------------------------->
2019-07-22 16:08:02,081|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,082|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,083|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,092|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,093|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,093|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,094|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,094|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,094|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,095|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,095|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,095|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,095|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,095|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #97 -------------------------------------------->
2019-07-22 16:08:02,096|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,096|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,097|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,097|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,097|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,098|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,098|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,098|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,098|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,100|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,101|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,103|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,108|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,109|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #98 -------------------------------------------->
2019-07-22 16:08:02,109|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,109|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,110|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,110|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,110|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,111|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,111|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,111|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,111|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,112|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,112|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,112|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,112|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,112|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #99 -------------------------------------------->
2019-07-22 16:08:02,113|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,113|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,114|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,114|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,114|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,114|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,115|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,115|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,115|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,115|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,115|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,116|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,116|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,128|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #100 ------------------------------------------->
2019-07-22 16:08:02,128|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,128|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,129|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,129|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,129|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,130|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,130|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,130|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,130|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,131|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,131|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,132|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,132|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,132|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #101 ------------------------------------------->
2019-07-22 16:08:02,132|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,133|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,134|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,142|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,142|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,143|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,143|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,143|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,143|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,144|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,144|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,144|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,144|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,144|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #102 ------------------------------------------->
2019-07-22 16:08:02,145|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,145|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,146|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,146|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,146|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,146|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,147|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,147|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,147|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,147|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,147|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,148|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,148|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,148|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #103 ------------------------------------------->
2019-07-22 16:08:02,148|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,149|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,149|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,160|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,161|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,161|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,161|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,162|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,162|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,162|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,162|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,164|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,164|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,164|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #104 ------------------------------------------->
2019-07-22 16:08:02,164|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,165|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,165|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,165|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,166|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,167|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,167|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,168|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,173|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,174|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,174|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,174|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,174|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,174|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #105 ------------------------------------------->
2019-07-22 16:08:02,174|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,175|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,175|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,175|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,176|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,176|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,176|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,176|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,176|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,177|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,177|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,177|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,177|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,177|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #106 ------------------------------------------->
2019-07-22 16:08:02,177|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,178|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,178|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,178|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,178|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,179|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,179|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,179|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,179|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,179|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,179|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,180|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,180|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,180|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #107 ------------------------------------------->
2019-07-22 16:08:02,180|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,180|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,181|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,181|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,181|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,181|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,194|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,194|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,194|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,194|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,195|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,195|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,195|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,195|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #108 ------------------------------------------->
2019-07-22 16:08:02,195|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,196|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,196|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,196|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,197|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,197|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,197|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,197|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,197|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,198|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,198|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,198|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,198|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,198|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #109 ------------------------------------------->
2019-07-22 16:08:02,198|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,199|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,200|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,201|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,202|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,209|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,209|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,209|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,209|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,210|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,210|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,210|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,210|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,210|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #110 ------------------------------------------->
2019-07-22 16:08:02,211|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,211|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,211|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,211|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,212|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,212|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,212|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,212|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,212|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,213|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,213|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,213|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,213|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,213|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #111 ------------------------------------------->
2019-07-22 16:08:02,214|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,214|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,214|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,214|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,215|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,215|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,215|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,215|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,216|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,217|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,217|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,218|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,226|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,226|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #112 ------------------------------------------->
2019-07-22 16:08:02,226|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,227|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,227|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,227|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,228|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,228|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,229|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,229|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,229|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,229|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,229|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,230|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,230|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,230|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #113 ------------------------------------------->
2019-07-22 16:08:02,230|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,230|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,231|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,231|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,231|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,231|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,232|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,232|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,232|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,233|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,233|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,235|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,242|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,242|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #114 ------------------------------------------->
2019-07-22 16:08:02,242|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,242|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,243|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,243|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,243|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,244|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,244|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,244|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,244|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,244|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,245|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,245|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,245|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,245|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #115 ------------------------------------------->
2019-07-22 16:08:02,245|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,245|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,246|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,246|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,246|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,247|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,247|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,247|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,247|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,247|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,247|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,248|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,248|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,248|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #116 ------------------------------------------->
2019-07-22 16:08:02,248|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,248|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,249|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,259|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,259|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,259|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,260|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,260|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,260|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,260|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,261|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,261|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,261|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,261|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #117 ------------------------------------------->
2019-07-22 16:08:02,261|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,262|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,262|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,263|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,263|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,263|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,264|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,264|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,264|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,264|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,265|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,265|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,265|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,265|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #118 ------------------------------------------->
2019-07-22 16:08:02,266|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,275|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,275|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,275|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,276|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,276|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,277|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,277|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,277|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,277|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,278|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,278|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,278|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,278|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #119 ------------------------------------------->
2019-07-22 16:08:02,279|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,279|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,280|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,281|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,281|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,281|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,282|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,282|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,282|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,290|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,290|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,290|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,290|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,291|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #120 ------------------------------------------->
2019-07-22 16:08:02,291|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,291|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,291|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,292|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,292|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,292|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,292|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,292|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,293|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,293|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,293|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,293|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,293|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,293|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #121 ------------------------------------------->
2019-07-22 16:08:02,294|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,294|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,294|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,294|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,295|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,295|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,295|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,295|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,295|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,296|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,296|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,296|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,296|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,296|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #122 ------------------------------------------->
2019-07-22 16:08:02,296|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,297|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,297|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,297|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,297|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,309|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,309|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,309|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,310|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,310|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,310|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,311|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,311|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,311|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #123 ------------------------------------------->
2019-07-22 16:08:02,311|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,312|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,312|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,312|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,313|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,313|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,313|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,313|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,313|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,313|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,314|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,314|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,314|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,314|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #124 ------------------------------------------->
2019-07-22 16:08:02,314|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,314|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,315|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,315|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,316|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,317|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,317|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,325|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,325|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,326|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,326|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,326|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,326|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,327|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #125 ------------------------------------------->
2019-07-22 16:08:02,327|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,327|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,328|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,328|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,329|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,329|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,330|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,330|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,330|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,330|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,330|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,330|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,331|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,331|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #126 ------------------------------------------->
2019-07-22 16:08:02,331|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,331|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,332|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,333|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,334|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,341|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,341|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,342|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,342|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,342|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,342|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,343|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,343|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,343|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #127 ------------------------------------------->
2019-07-22 16:08:02,343|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,344|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,344|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,344|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,344|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,345|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,345|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,345|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,345|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,345|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,345|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,346|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,346|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,346|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #128 ------------------------------------------->
2019-07-22 16:08:02,346|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,346|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,347|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,347|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,347|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,347|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,348|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,348|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,348|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,349|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,349|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,350|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,358|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,358|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #129 ------------------------------------------->
2019-07-22 16:08:02,359|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,359|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,360|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,360|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,360|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,361|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,361|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,361|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,361|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,362|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,362|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,362|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,362|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,362|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #130 ------------------------------------------->
2019-07-22 16:08:02,362|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,363|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,363|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,363|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,364|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,364|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,364|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,364|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,364|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,365|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,365|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,365|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,366|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,366|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #131 ------------------------------------------->
2019-07-22 16:08:02,375|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,375|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,376|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,376|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,376|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,377|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,377|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,377|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,377|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,378|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,378|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,378|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,378|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,378|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #132 ------------------------------------------->
2019-07-22 16:08:02,379|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,379|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,381|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,381|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,381|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,381|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,381|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,382|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,382|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,382|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,382|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,382|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,383|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,383|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #133 ------------------------------------------->
2019-07-22 16:08:02,391|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,391|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,392|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,392|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,392|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,393|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,393|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,393|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,393|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,394|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,394|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,394|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,394|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,394|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #134 ------------------------------------------->
2019-07-22 16:08:02,395|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,395|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,395|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,396|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,396|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,396|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,396|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,397|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,397|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,397|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,397|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,397|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,398|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,398|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #135 ------------------------------------------->
2019-07-22 16:08:02,398|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,399|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,409|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,409|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,410|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,410|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,410|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,410|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,411|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,411|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,411|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,411|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,412|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,412|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #136 ------------------------------------------->
2019-07-22 16:08:02,412|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,412|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,412|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,413|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,413|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,413|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,413|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,413|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,414|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,414|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,414|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,414|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,414|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,414|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #137 ------------------------------------------->
2019-07-22 16:08:02,415|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,415|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,416|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,416|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,425|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,426|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,426|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,426|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,426|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,427|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,427|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,427|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,427|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,428|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #138 ------------------------------------------->
2019-07-22 16:08:02,428|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,428|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,429|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,429|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,430|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,430|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,430|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,430|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,430|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,431|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,431|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,431|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,431|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,431|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #139 ------------------------------------------->
2019-07-22 16:08:02,432|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,438|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,442|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,442|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,443|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,443|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,443|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,444|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,444|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,444|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,444|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,444|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,444|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,445|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #140 ------------------------------------------->
2019-07-22 16:08:02,445|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,445|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,445|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,446|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,446|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,446|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,446|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,446|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,446|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,447|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,447|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,447|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,447|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,447|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #141 ------------------------------------------->
2019-07-22 16:08:02,448|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,448|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,448|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,448|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,449|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,450|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,459|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,459|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,459|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,459|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,460|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,460|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,460|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,460|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #142 ------------------------------------------->
2019-07-22 16:08:02,460|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,461|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,461|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,462|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,462|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,462|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,463|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,463|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,463|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,463|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,463|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,464|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,464|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,464|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #143 ------------------------------------------->
2019-07-22 16:08:02,464|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,465|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,465|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,465|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,467|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,475|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,475|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,475|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,476|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,476|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,476|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,476|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,477|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,477|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #144 ------------------------------------------->
2019-07-22 16:08:02,477|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,477|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,478|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,478|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,479|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,479|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,479|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,479|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,480|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,480|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,480|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,480|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,480|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,481|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #145 ------------------------------------------->
2019-07-22 16:08:02,481|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,481|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,482|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,482|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,482|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,483|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,484|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,492|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,492|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,493|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,493|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,493|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,493|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,493|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #146 ------------------------------------------->
2019-07-22 16:08:02,493|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,494|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,494|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,494|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,495|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,495|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,495|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,496|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,496|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,496|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,496|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,496|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,496|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,496|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #147 ------------------------------------------->
2019-07-22 16:08:02,497|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,497|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,497|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,497|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,498|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,498|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,498|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,498|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,498|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,499|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,508|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,508|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,509|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,509|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #148 ------------------------------------------->
2019-07-22 16:08:02,509|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,510|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,510|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,510|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,511|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,511|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,511|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,511|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,512|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,512|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,512|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,512|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,513|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,513|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #149 ------------------------------------------->
2019-07-22 16:08:02,513|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,513|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,514|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,514|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,514|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,514|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,515|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,515|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,515|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,516|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,516|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,517|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,525|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,525|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #150 ------------------------------------------->
2019-07-22 16:08:02,525|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,526|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,526|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,527|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,527|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,527|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,527|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,528|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,528|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,528|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,528|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,528|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,528|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,529|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #151 ------------------------------------------->
2019-07-22 16:08:02,529|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,529|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,529|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,530|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,530|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,530|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,530|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,530|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,530|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,531|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,531|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,531|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,531|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,531|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #152 ------------------------------------------->
2019-07-22 16:08:02,531|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,532|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,533|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,542|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,542|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,542|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,543|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,543|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,543|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,544|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,544|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,544|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,544|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,544|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #153 ------------------------------------------->
2019-07-22 16:08:02,545|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,545|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,545|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,546|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,546|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,546|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,546|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,547|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,547|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,547|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,547|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,547|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,548|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,548|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #154 ------------------------------------------->
2019-07-22 16:08:02,548|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,548|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,549|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,549|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,558|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,558|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,558|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,559|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,559|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,559|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,559|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,560|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,560|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,560|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #155 ------------------------------------------->
2019-07-22 16:08:02,560|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,561|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,561|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,561|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,562|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,562|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,562|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,562|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,563|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,563|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,563|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,563|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,563|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,563|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #156 ------------------------------------------->
2019-07-22 16:08:02,564|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,564|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,564|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,564|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,565|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,566|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,575|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,575|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,575|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,576|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,576|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,576|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,576|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,577|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #157 ------------------------------------------->
2019-07-22 16:08:02,577|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,577|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,578|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,578|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,578|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,579|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,579|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,579|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,579|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,580|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,580|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,580|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,580|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,580|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #158 ------------------------------------------->
2019-07-22 16:08:02,580|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,581|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,581|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,581|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,582|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,583|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,591|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,591|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,592|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,592|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,592|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,593|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,593|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,593|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #159 ------------------------------------------->
2019-07-22 16:08:02,593|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,594|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,594|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,594|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,594|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,595|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,595|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,595|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,595|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,595|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,595|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,596|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,596|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,596|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #160 ------------------------------------------->
2019-07-22 16:08:02,596|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,596|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,597|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,597|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,597|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,597|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,597|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,598|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,598|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,598|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,599|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,599|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,608|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,609|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #161 ------------------------------------------->
2019-07-22 16:08:02,609|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,609|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,610|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,610|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,610|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,611|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,611|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,611|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,611|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,612|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,612|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,612|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,612|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,612|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #162 ------------------------------------------->
2019-07-22 16:08:02,613|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,613|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,613|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,614|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,614|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,614|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,615|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,615|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,615|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,616|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,616|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,617|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,625|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,625|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #163 ------------------------------------------->
2019-07-22 16:08:02,625|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,626|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,626|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,626|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,627|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,627|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,627|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,627|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,628|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,628|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,628|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,628|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,628|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,629|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #164 ------------------------------------------->
2019-07-22 16:08:02,629|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,629|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,629|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,630|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,630|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,630|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,630|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,630|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,631|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,631|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,631|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,631|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,631|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,632|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #165 ------------------------------------------->
2019-07-22 16:08:02,632|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,633|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,642|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,642|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,642|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,642|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,643|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,643|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,643|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,643|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,645|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,645|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,645|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,645|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #166 ------------------------------------------->
2019-07-22 16:08:02,646|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,646|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,646|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,647|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,647|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,647|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,648|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,648|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,648|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,648|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,648|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,648|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,648|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,649|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #167 ------------------------------------------->
2019-07-22 16:08:02,649|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,650|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,651|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,659|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,659|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,659|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,660|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,660|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,660|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,661|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,661|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,661|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,661|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,661|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #168 ------------------------------------------->
2019-07-22 16:08:02,662|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,662|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,662|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,662|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,663|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,663|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,663|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,663|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,663|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,664|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,664|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,664|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,664|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,664|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #169 ------------------------------------------->
2019-07-22 16:08:02,664|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,665|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,665|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,665|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,666|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,675|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,675|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,675|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,676|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,676|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,676|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,676|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,677|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,677|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #170 ------------------------------------------->
2019-07-22 16:08:02,677|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,677|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,678|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,678|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,678|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,679|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,679|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,679|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,679|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,679|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,679|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,680|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,680|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,680|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #171 ------------------------------------------->
2019-07-22 16:08:02,680|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,680|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,681|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,681|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,681|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,681|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,682|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,682|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,683|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,692|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,692|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,692|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,692|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,693|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #172 ------------------------------------------->
2019-07-22 16:08:02,693|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,693|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,694|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,694|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,694|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,694|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,695|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,695|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,695|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,695|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,695|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,695|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,696|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,696|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #173 ------------------------------------------->
2019-07-22 16:08:02,696|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,696|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,696|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,697|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,697|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,697|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,697|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,697|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,698|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,698|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,698|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,698|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,699|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,700|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #174 ------------------------------------------->
2019-07-22 16:08:02,708|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,709|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,711|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,711|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,711|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,712|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,712|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,712|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,712|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,713|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,713|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,713|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,713|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,713|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #175 ------------------------------------------->
2019-07-22 16:08:02,714|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,714|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,715|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,715|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,725|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,726|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,726|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,726|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,726|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,726|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,726|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,727|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,727|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,727|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #176 ------------------------------------------->
2019-07-22 16:08:02,727|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,727|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,728|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,728|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,728|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,728|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,729|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,729|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,729|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,729|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,729|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,730|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,730|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,730|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #177 ------------------------------------------->
2019-07-22 16:08:02,730|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,730|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,739|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,740|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,740|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,740|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,741|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,741|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,741|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,741|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,741|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,742|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,742|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,742|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #178 ------------------------------------------->
2019-07-22 16:08:02,742|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,743|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,743|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,743|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,744|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,744|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,744|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,745|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,745|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,745|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,745|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,745|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,746|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,746|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #179 ------------------------------------------->
2019-07-22 16:08:02,746|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,746|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,746|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,747|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,747|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,747|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,747|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,747|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,759|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,759|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,759|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,760|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,760|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,760|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #180 ------------------------------------------->
2019-07-22 16:08:02,760|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,761|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,761|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,761|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,762|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,762|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,762|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,762|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,763|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,763|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,763|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,763|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,764|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,764|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #181 ------------------------------------------->
2019-07-22 16:08:02,764|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,764|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,764|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,765|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,765|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,766|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,766|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,775|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,776|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,776|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,776|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,777|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,777|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,777|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #182 ------------------------------------------->
2019-07-22 16:08:02,777|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,778|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,778|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,778|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,779|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,779|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,779|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,780|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,780|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,780|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,780|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,780|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,780|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,782|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #183 ------------------------------------------->
2019-07-22 16:08:02,782|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,783|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,785|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,790|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,791|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,791|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,791|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,791|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,792|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,792|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,792|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,792|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,793|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,793|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #184 ------------------------------------------->
2019-07-22 16:08:02,793|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,793|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,794|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,794|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,794|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,794|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,795|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,795|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,795|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,795|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,795|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,795|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,795|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,796|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #185 ------------------------------------------->
2019-07-22 16:08:02,796|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,796|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,796|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,796|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,797|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,797|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,797|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,797|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,797|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,798|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,798|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,798|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,798|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,798|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #186 ------------------------------------------->
2019-07-22 16:08:02,798|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,810|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,810|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,811|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,811|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,811|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,812|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,812|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,812|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,812|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,812|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,813|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,813|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,813|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #187 ------------------------------------------->
2019-07-22 16:08:02,813|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,814|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,814|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,814|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,815|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,816|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,817|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,824|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,825|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,826|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,826|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,826|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,827|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,828|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #188 ------------------------------------------->
2019-07-22 16:08:02,828|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,828|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,828|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,829|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,829|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,829|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,829|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,829|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,829|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,830|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,830|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,830|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,830|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,830|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #189 ------------------------------------------->
2019-07-22 16:08:02,831|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,831|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,831|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,831|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,832|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,833|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,840|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,840|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,840|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,841|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,841|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,841|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,841|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,842|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #190 ------------------------------------------->
2019-07-22 16:08:02,842|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,842|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,843|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,843|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,843|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,844|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,844|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,844|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,844|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,844|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,845|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,845|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,845|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,845|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #191 ------------------------------------------->
2019-07-22 16:08:02,845|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,845|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,846|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,846|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,846|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,846|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,847|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,847|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,847|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,847|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,847|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,847|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,847|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,848|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #192 ------------------------------------------->
2019-07-22 16:08:02,848|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,848|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,849|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,859|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,860|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,860|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,860|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,860|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,861|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,861|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,861|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,862|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,862|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,862|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #193 ------------------------------------------->
2019-07-22 16:08:02,862|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,863|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,863|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,863|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,863|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,864|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,864|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,864|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,864|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,864|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,864|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,865|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,865|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,865|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #194 ------------------------------------------->
2019-07-22 16:08:02,866|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,867|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,869|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,875|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,875|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,876|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,877|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,877|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,877|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,878|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,878|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,878|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,878|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,878|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #195 ------------------------------------------->
2019-07-22 16:08:02,879|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,879|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,879|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,879|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,880|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,880|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,880|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,880|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,880|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,881|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,881|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,881|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,881|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,881|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #196 ------------------------------------------->
2019-07-22 16:08:02,881|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,882|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,883|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,884|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,892|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,892|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,892|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,892|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,893|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,893|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,893|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,893|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,894|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,894|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #197 ------------------------------------------->
2019-07-22 16:08:02,894|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,894|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,895|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,895|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,895|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,896|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,896|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,896|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,896|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,896|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,896|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,897|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,897|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,897|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #198 ------------------------------------------->
2019-07-22 16:08:02,897|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,897|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,898|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,898|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,898|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,899|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,900|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,908|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,908|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,909|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,909|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,909|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,909|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,909|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #199 ------------------------------------------->
2019-07-22 16:08:02,910|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,910|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,911|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,911|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,911|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,911|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,912|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,912|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,912|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,912|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,913|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,913|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,913|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,913|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #200 ------------------------------------------->
2019-07-22 16:08:02,913|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,914|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,914|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,914|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,915|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,915|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,916|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,924|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,925|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,925|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,925|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,926|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,956|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,958|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #201 ------------------------------------------->
2019-07-22 16:08:02,958|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,958|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,959|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,959|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,960|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,960|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,960|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,960|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,961|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,961|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,961|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,961|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,962|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,962|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #202 ------------------------------------------->
2019-07-22 16:08:02,962|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,962|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,963|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,963|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,963|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,963|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,964|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,964|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,964|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,964|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,964|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,965|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,965|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,976|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #203 ------------------------------------------->
2019-07-22 16:08:02,978|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,978|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,979|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,979|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,979|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,979|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,980|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,980|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,980|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,981|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,981|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,981|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,981|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,981|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #204 ------------------------------------------->
2019-07-22 16:08:02,981|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,982|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,983|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,985|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,985|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,990|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,990|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,990|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,990|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,991|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,991|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,991|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,991|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,992|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #205 ------------------------------------------->
2019-07-22 16:08:02,992|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,992|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,993|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,993|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,993|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,994|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,994|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,994|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,994|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,994|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,994|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,995|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,995|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:02,995|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #206 ------------------------------------------->
2019-07-22 16:08:02,995|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:02,995|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:02,996|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:02,996|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:02,996|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:02,996|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:02,997|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:02,997|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:02,997|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:02,997|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:02,997|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:02,997|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:02,998|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,010|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #207 ------------------------------------------->
2019-07-22 16:08:03,010|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,011|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,011|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,011|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,012|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,012|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,012|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,012|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,013|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,013|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,013|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,013|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,014|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,014|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #208 ------------------------------------------->
2019-07-22 16:08:03,014|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,014|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,015|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,016|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,018|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,018|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,018|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,018|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,018|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,025|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,025|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,025|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,026|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,026|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #209 ------------------------------------------->
2019-07-22 16:08:03,026|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,026|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,027|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,027|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,028|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,028|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,030|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,030|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,030|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,031|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,031|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,031|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,032|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,032|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #210 ------------------------------------------->
2019-07-22 16:08:03,033|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,034|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,040|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,040|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,042|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,042|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,042|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,042|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,042|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,042|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,042|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,043|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,043|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,043|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #211 ------------------------------------------->
2019-07-22 16:08:03,043|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,043|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,044|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,044|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,044|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,044|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,044|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,045|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,045|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,045|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,045|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,045|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,045|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,045|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #212 ------------------------------------------->
2019-07-22 16:08:03,046|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,046|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,046|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,046|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,047|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,047|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,047|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,047|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,060|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,060|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,060|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,061|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,061|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,061|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #213 ------------------------------------------->
2019-07-22 16:08:03,061|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,062|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,062|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,062|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,063|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,063|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,063|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,063|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,064|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,064|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,064|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,064|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,064|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,065|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #214 ------------------------------------------->
2019-07-22 16:08:03,065|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,066|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,066|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,067|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,075|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,076|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,076|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,076|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,077|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,077|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,077|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,077|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,077|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,078|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #215 ------------------------------------------->
2019-07-22 16:08:03,078|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,078|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,078|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,078|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,079|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,079|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,079|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,079|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,080|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,080|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,080|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,080|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,080|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,080|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #216 ------------------------------------------->
2019-07-22 16:08:03,081|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,081|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,089|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,089|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,090|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,090|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,091|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,091|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,091|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,091|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,092|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,092|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,092|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,092|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #217 ------------------------------------------->
2019-07-22 16:08:03,092|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,093|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,093|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,094|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,094|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,094|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,094|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,094|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,095|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,095|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,095|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,095|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,095|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,095|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #218 ------------------------------------------->
2019-07-22 16:08:03,096|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,096|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,096|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,096|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,097|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,097|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,097|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,097|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,097|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,109|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,109|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,109|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,109|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,110|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #219 ------------------------------------------->
2019-07-22 16:08:03,110|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,110|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,111|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,111|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,111|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,111|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,112|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,112|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,112|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,112|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,112|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,112|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,112|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,113|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #220 ------------------------------------------->
2019-07-22 16:08:03,113|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,113|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,113|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,114|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,114|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,114|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,114|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,114|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,115|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,116|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,116|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,116|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,125|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,125|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #221 ------------------------------------------->
2019-07-22 16:08:03,125|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,126|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,126|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,126|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,127|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,127|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,127|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,127|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,128|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,128|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,128|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,128|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,128|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,128|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #222 ------------------------------------------->
2019-07-22 16:08:03,129|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,129|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,129|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,129|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,130|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,130|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,130|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,130|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,130|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,131|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,131|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,131|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,131|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,132|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #223 ------------------------------------------->
2019-07-22 16:08:03,133|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,142|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,142|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,142|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,143|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,143|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,143|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,143|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,144|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,144|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,144|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,144|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,144|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,145|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #224 ------------------------------------------->
2019-07-22 16:08:03,145|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,145|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,146|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,146|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,146|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,146|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,147|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,147|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,147|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,147|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,147|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,147|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,147|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,148|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #225 ------------------------------------------->
2019-07-22 16:08:03,148|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,149|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,151|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,158|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,158|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,158|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,159|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,159|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,159|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,160|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,160|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,160|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,160|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,160|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #226 ------------------------------------------->
2019-07-22 16:08:03,161|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,161|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,161|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,162|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,162|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,162|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,163|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,163|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,163|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,163|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,163|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,163|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,163|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,164|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #227 ------------------------------------------->
2019-07-22 16:08:03,164|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,164|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,165|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,165|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,174|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,174|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,175|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,175|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,175|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,176|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,176|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,176|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,176|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,176|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #228 ------------------------------------------->
2019-07-22 16:08:03,177|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,177|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,177|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,178|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,178|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,178|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,178|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,179|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,179|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,179|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,179|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,179|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,179|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,180|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #229 ------------------------------------------->
2019-07-22 16:08:03,180|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,180|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,180|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,180|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,181|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,181|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,182|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,182|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,183|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,191|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,192|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,192|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,192|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,192|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #230 ------------------------------------------->
2019-07-22 16:08:03,192|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,193|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,193|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,193|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,194|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,194|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,194|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,195|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,195|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,195|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,195|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,196|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,196|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,196|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #231 ------------------------------------------->
2019-07-22 16:08:03,196|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,196|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,197|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,197|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,197|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,197|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,198|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,198|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,199|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,207|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,207|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,208|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,209|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,209|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #232 ------------------------------------------->
2019-07-22 16:08:03,209|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,210|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,210|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,210|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,211|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,211|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,211|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,211|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,212|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,212|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,212|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,212|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,212|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,212|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #233 ------------------------------------------->
2019-07-22 16:08:03,213|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,213|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,213|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,213|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,214|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,214|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,214|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,214|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,214|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,215|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,215|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,215|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,216|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,217|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #234 ------------------------------------------->
2019-07-22 16:08:03,225|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,225|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,226|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,226|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,226|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,227|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,227|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,227|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,227|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,228|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,228|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,228|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,228|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,228|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #235 ------------------------------------------->
2019-07-22 16:08:03,229|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,229|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,229|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,230|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,230|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,230|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,231|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,231|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,231|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,231|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,231|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,231|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,232|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,232|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #236 ------------------------------------------->
2019-07-22 16:08:03,241|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,241|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,242|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,242|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,243|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,243|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,243|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,243|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,244|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,244|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,244|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,244|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,245|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,245|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #237 ------------------------------------------->
2019-07-22 16:08:03,245|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,245|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,246|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,246|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,246|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,247|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,247|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,247|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,247|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,247|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,247|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,248|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,248|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,248|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #238 ------------------------------------------->
2019-07-22 16:08:03,248|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,249|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,258|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,258|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,259|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,259|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,259|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,259|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,260|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,260|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,260|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,261|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,261|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,261|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #239 ------------------------------------------->
2019-07-22 16:08:03,261|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,261|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,262|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,262|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,262|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,262|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,263|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,263|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,263|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,263|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,263|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,263|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,263|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,264|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #240 ------------------------------------------->
2019-07-22 16:08:03,264|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,264|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,264|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,265|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,266|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,274|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,274|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,274|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,275|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,275|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,275|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,275|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,276|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,276|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #241 ------------------------------------------->
2019-07-22 16:08:03,276|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,276|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,277|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,277|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,277|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,278|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,278|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,278|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,278|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,278|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,278|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,278|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,279|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,279|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #242 ------------------------------------------->
2019-07-22 16:08:03,279|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,279|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,280|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,280|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,280|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,280|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,281|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,281|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,291|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,291|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,291|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,292|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,292|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,292|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #243 ------------------------------------------->
2019-07-22 16:08:03,292|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,293|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,293|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,293|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,294|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,294|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,294|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,295|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,295|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,295|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,295|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,295|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,296|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,296|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #244 ------------------------------------------->
2019-07-22 16:08:03,296|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,296|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,296|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,297|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,297|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,297|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,297|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,297|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,298|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,298|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,307|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,309|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,310|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,310|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #245 ------------------------------------------->
2019-07-22 16:08:03,310|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,310|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,311|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,311|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,312|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,312|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,312|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,312|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,312|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,313|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,313|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,313|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,313|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,313|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #246 ------------------------------------------->
2019-07-22 16:08:03,313|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,314|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,315|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,322|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,322|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,322|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,323|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,323|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,323|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,323|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,324|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,324|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,324|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,324|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #247 ------------------------------------------->
2019-07-22 16:08:03,324|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,325|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,325|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,325|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,327|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,327|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,327|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,328|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,328|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,328|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,328|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,328|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,329|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,329|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #248 ------------------------------------------->
2019-07-22 16:08:03,329|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,329|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,330|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,330|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,330|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,330|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,330|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,331|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,342|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,343|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,343|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,343|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,343|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,343|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #249 ------------------------------------------->
2019-07-22 16:08:03,344|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,344|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,344|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,345|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,345|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,345|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,345|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,346|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,346|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,346|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,346|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,346|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,346|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,347|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #250 ------------------------------------------->
2019-07-22 16:08:03,347|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,347|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,347|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,347|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,348|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,348|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,349|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,349|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,350|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,358|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,358|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,358|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,358|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,359|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #251 ------------------------------------------->
2019-07-22 16:08:03,359|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,359|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,360|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,360|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,360|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,361|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,361|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,361|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,361|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,362|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,362|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,362|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,362|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,362|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #252 ------------------------------------------->
2019-07-22 16:08:03,362|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,363|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,363|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,363|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,363|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,364|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,364|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,364|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,364|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,364|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,364|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,365|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,365|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,366|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #253 ------------------------------------------->
2019-07-22 16:08:03,366|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,368|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,375|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,375|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,376|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,376|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,376|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,376|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,377|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,377|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,377|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,377|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,378|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,378|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #254 ------------------------------------------->
2019-07-22 16:08:03,378|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,378|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,379|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,379|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,379|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,379|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,380|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,380|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,380|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,380|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,380|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,380|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,381|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,381|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #255 ------------------------------------------->
2019-07-22 16:08:03,381|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,381|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,382|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,391|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,391|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,391|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,392|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,392|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,392|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,393|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,393|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,393|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,393|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,393|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #256 ------------------------------------------->
2019-07-22 16:08:03,394|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,394|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,394|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,394|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,395|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,395|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,395|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,396|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,396|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,396|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,396|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,396|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,396|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,396|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #257 ------------------------------------------->
2019-07-22 16:08:03,397|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,397|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,397|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,397|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,398|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,407|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,408|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,408|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,408|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,409|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,409|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,409|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,409|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,409|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #258 ------------------------------------------->
2019-07-22 16:08:03,409|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,410|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,410|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,410|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,410|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,411|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,411|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,411|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,411|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,411|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,411|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,412|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,412|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,412|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #259 ------------------------------------------->
2019-07-22 16:08:03,412|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,412|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,413|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,413|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,413|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,413|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,413|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,414|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,414|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,414|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,414|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,414|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,415|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,415|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #260 ------------------------------------------->
2019-07-22 16:08:03,424|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,425|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,425|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,426|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,426|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,426|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,427|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,427|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,427|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,428|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,428|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,428|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,428|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,428|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #261 ------------------------------------------->
2019-07-22 16:08:03,429|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,429|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,429|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,430|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,430|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,430|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,430|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,431|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,431|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,432|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,432|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,432|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,440|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,441|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #262 ------------------------------------------->
2019-07-22 16:08:03,441|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,441|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,442|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,442|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,442|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,443|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,443|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,443|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,443|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,444|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,444|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,444|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,444|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,444|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #263 ------------------------------------------->
2019-07-22 16:08:03,445|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,445|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,445|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,445|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,446|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,446|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,446|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,446|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,446|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,447|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,447|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,447|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,447|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,447|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #264 ------------------------------------------->
2019-07-22 16:08:03,447|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,448|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,457|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,458|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,458|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,458|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,459|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,459|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,459|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,460|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,460|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,460|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,460|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,460|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #265 ------------------------------------------->
2019-07-22 16:08:03,461|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,461|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,461|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,462|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,462|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,462|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,462|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,462|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,462|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,463|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,463|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,463|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,463|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,463|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #266 ------------------------------------------->
2019-07-22 16:08:03,463|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,464|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,464|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,465|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,466|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,474|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,474|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,475|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,475|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,475|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,475|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,476|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,476|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,476|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #267 ------------------------------------------->
2019-07-22 16:08:03,476|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,477|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,477|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,477|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,478|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,478|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,478|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,478|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,479|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,479|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,479|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,479|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,479|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,479|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #268 ------------------------------------------->
2019-07-22 16:08:03,480|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,480|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,480|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,480|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,481|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,481|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,482|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,482|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,491|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,491|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,492|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,492|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,492|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,492|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #269 ------------------------------------------->
2019-07-22 16:08:03,493|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,493|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,493|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,493|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,494|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,494|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,494|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,494|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,494|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,495|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,495|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,495|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,495|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,495|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #270 ------------------------------------------->
2019-07-22 16:08:03,495|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,496|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,496|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,496|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,497|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,497|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,497|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,497|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,497|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,498|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,499|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,499|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,507|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,507|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #271 ------------------------------------------->
2019-07-22 16:08:03,507|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,508|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,508|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,508|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,509|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,509|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,509|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,509|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,509|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,509|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,510|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,510|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,510|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,510|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #272 ------------------------------------------->
2019-07-22 16:08:03,510|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,510|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,511|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,511|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,511|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,511|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,512|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,512|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,512|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,512|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,512|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,512|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,513|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,513|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #273 ------------------------------------------->
2019-07-22 16:08:03,513|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,513|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,513|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,514|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,515|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,515|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,524|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,525|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,525|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,525|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,525|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,526|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,526|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,526|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #274 ------------------------------------------->
2019-07-22 16:08:03,526|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,527|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,527|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,527|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,528|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,528|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,528|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,528|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,528|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,529|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,529|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,529|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,529|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,529|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #275 ------------------------------------------->
2019-07-22 16:08:03,529|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,530|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,530|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,530|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,531|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,532|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,532|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,540|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,540|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,541|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,541|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,541|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,541|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,541|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #276 ------------------------------------------->
2019-07-22 16:08:03,541|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,542|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,542|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,542|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,542|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,543|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,543|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,543|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,543|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,543|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,543|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,544|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,544|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,544|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #277 ------------------------------------------->
2019-07-22 16:08:03,544|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,544|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,545|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,545|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,545|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,545|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,545|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,546|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,546|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,546|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,546|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,546|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,546|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,547|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #278 ------------------------------------------->
2019-07-22 16:08:03,547|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,547|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,548|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,557|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,558|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,558|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,559|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,559|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,559|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,559|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,559|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,560|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,560|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,560|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #279 ------------------------------------------->
2019-07-22 16:08:03,560|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,562|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,562|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,562|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,563|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,563|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,563|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,563|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,564|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,564|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,564|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,564|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,564|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,564|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #280 ------------------------------------------->
2019-07-22 16:08:03,565|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,570|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,575|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,575|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,576|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,576|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,576|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,576|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,576|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,577|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,577|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,577|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,577|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,577|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #281 ------------------------------------------->
2019-07-22 16:08:03,577|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,578|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,578|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,578|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,579|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,579|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,579|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,579|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,579|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,579|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,580|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,580|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,580|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,580|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #282 ------------------------------------------->
2019-07-22 16:08:03,580|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,580|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,581|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,581|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,582|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,582|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,583|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,584|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,591|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,592|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,592|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,592|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,592|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,593|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #283 ------------------------------------------->
2019-07-22 16:08:03,593|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,593|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,594|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,594|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,594|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,595|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,595|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,595|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,595|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,595|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,595|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,596|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,596|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,596|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #284 ------------------------------------------->
2019-07-22 16:08:03,596|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,596|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,597|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,597|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,597|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,597|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,598|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,598|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,598|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,599|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,599|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,600|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,608|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,608|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #285 ------------------------------------------->
2019-07-22 16:08:03,608|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,608|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,609|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,609|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,609|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,610|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,610|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,610|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,610|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,610|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,610|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,611|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,611|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,611|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #286 ------------------------------------------->
2019-07-22 16:08:03,611|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,611|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,612|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,612|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,612|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,612|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,612|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,613|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,613|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,613|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,613|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,613|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,613|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,613|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #287 ------------------------------------------->
2019-07-22 16:08:03,614|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,614|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,614|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,615|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,616|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,625|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,625|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,625|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,625|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,626|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,626|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,626|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,626|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,626|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #288 ------------------------------------------->
2019-07-22 16:08:03,626|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,626|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,627|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,627|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,627|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,627|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,628|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,628|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,628|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,628|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,628|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,628|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,629|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,629|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #289 ------------------------------------------->
2019-07-22 16:08:03,629|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,629|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,629|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,630|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,630|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,630|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,630|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,630|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,631|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,631|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,631|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,631|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,632|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,633|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #290 ------------------------------------------->
2019-07-22 16:08:03,642|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,642|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,643|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,643|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,643|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,643|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,644|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,644|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,644|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,645|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,645|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,645|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,645|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,645|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #291 ------------------------------------------->
2019-07-22 16:08:03,646|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,646|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,646|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,646|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,647|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,647|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,647|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,647|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,647|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,648|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,648|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,649|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,649|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,657|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #292 ------------------------------------------->
2019-07-22 16:08:03,657|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,658|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,658|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,658|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,659|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,659|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,659|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,659|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,660|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,660|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,660|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,660|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,660|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,660|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #293 ------------------------------------------->
2019-07-22 16:08:03,661|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,661|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,661|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,661|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,662|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,662|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,662|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,662|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,663|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,663|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,663|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,663|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,663|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,663|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #294 ------------------------------------------->
2019-07-22 16:08:03,664|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,664|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,665|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,676|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,676|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,677|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,677|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,677|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,677|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,678|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,678|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,678|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,678|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,678|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #295 ------------------------------------------->
2019-07-22 16:08:03,678|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,679|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,679|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,679|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,679|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,680|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,680|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,680|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,680|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,680|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,680|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,680|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,681|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,681|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #296 ------------------------------------------->
2019-07-22 16:08:03,681|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,682|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,683|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,684|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,685|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,691|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,691|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,691|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,692|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,692|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,692|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,692|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,692|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,692|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #297 ------------------------------------------->
2019-07-22 16:08:03,693|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,693|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,693|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,693|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,694|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,694|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,694|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,694|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,694|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,695|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,695|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,695|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,695|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,695|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #298 ------------------------------------------->
2019-07-22 16:08:03,695|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,696|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,696|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,696|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,697|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,697|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,697|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,697|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,697|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,698|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,698|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,699|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,699|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,708|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #299 ------------------------------------------->
2019-07-22 16:08:03,708|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,708|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,708|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,709|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,709|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,709|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,709|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,710|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,710|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,710|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,710|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,710|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,710|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,711|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #300 ------------------------------------------->
2019-07-22 16:08:03,711|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,711|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,711|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,711|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,712|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,712|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,712|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,712|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,712|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,713|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,713|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,713|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,713|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,713|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #301 ------------------------------------------->
2019-07-22 16:08:03,713|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,713|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,714|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,714|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,715|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,715|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,716|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,716|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,725|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,725|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,726|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,726|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,726|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,726|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #302 ------------------------------------------->
2019-07-22 16:08:03,726|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,727|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,727|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,727|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,728|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,728|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,728|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,729|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,729|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,729|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,729|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,729|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,730|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,730|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #303 ------------------------------------------->
2019-07-22 16:08:03,730|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,730|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,730|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,731|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,731|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,732|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,732|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,733|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,734|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,741|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,741|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,741|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,741|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,742|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #304 ------------------------------------------->
2019-07-22 16:08:03,742|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,742|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,743|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,743|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,743|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,744|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,744|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,744|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,744|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,744|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,744|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,745|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,745|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,745|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #305 ------------------------------------------->
2019-07-22 16:08:03,745|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,745|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,746|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,746|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,746|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,746|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,746|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,747|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,747|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,747|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,747|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,747|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,748|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,748|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #306 ------------------------------------------->
2019-07-22 16:08:03,757|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,758|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,758|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,758|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,759|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,759|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,759|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,760|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,760|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,760|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,760|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,761|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,761|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,761|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #307 ------------------------------------------->
2019-07-22 16:08:03,761|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,761|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,762|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,762|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,762|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,762|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,763|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,763|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,763|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,763|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,763|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,763|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,764|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,764|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #308 ------------------------------------------->
2019-07-22 16:08:03,764|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,765|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,766|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,774|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,774|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,774|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,774|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,775|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,775|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,775|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,775|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,775|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,775|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,776|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #309 ------------------------------------------->
2019-07-22 16:08:03,776|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,776|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,776|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,776|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,777|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,777|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,777|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,777|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,777|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,778|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,778|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,778|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,778|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,778|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #310 ------------------------------------------->
2019-07-22 16:08:03,778|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,778|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,779|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,779|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,779|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,779|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,779|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,780|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,780|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,780|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,780|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,780|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,780|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,781|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #311 ------------------------------------------->
2019-07-22 16:08:03,781|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,792|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,792|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,792|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,793|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,793|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,793|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,793|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,794|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,794|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,794|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,794|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,794|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,795|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #312 ------------------------------------------->
2019-07-22 16:08:03,795|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,795|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,796|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,796|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,796|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,796|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,796|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,797|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,797|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,797|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,797|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,798|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,798|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,799|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #313 ------------------------------------------->
2019-07-22 16:08:03,799|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,807|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,807|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,808|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,808|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,808|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,808|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,808|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,809|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,809|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,809|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,809|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,809|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,810|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #314 ------------------------------------------->
2019-07-22 16:08:03,810|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,810|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,810|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,811|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,811|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,811|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,812|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,812|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,812|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,812|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,812|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,812|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,812|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,813|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #315 ------------------------------------------->
2019-07-22 16:08:03,813|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,813|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,813|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,824|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,825|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,825|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,825|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,825|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,826|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,826|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,826|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,826|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,827|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,827|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #316 ------------------------------------------->
2019-07-22 16:08:03,827|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,827|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,828|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,828|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,828|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,828|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,829|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,829|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,829|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,829|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,829|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,829|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,830|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,830|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #317 ------------------------------------------->
2019-07-22 16:08:03,830|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,830|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,831|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,832|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,840|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,841|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,841|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,841|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,841|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,842|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,842|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,842|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,842|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,842|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #318 ------------------------------------------->
2019-07-22 16:08:03,843|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,843|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,843|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,844|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,844|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,844|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,844|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,844|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,845|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,845|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,845|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,845|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,845|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,845|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #319 ------------------------------------------->
2019-07-22 16:08:03,846|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,846|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,846|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,846|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,847|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,848|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,848|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,857|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,857|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,857|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,857|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,857|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,858|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,858|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #320 ------------------------------------------->
2019-07-22 16:08:03,858|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,858|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,858|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,859|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,859|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,859|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,859|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,859|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,860|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,860|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,860|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,860|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,860|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,860|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #321 ------------------------------------------->
2019-07-22 16:08:03,860|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,861|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,861|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,861|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,861|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,862|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,862|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,862|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,862|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,862|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,862|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,863|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,863|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,863|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #322 ------------------------------------------->
2019-07-22 16:08:03,863|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,863|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,864|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,864|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,874|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,875|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,875|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,875|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,875|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,875|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,875|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,875|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,876|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,876|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #323 ------------------------------------------->
2019-07-22 16:08:03,876|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,876|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,876|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,877|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,877|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,877|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,877|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,878|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,878|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,878|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,878|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,878|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,878|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,878|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #324 ------------------------------------------->
2019-07-22 16:08:03,879|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,879|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,879|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,879|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,880|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,880|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,880|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,880|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,881|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,882|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,882|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,883|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,891|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,891|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #325 ------------------------------------------->
2019-07-22 16:08:03,891|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,891|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,892|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,892|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,892|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,892|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,893|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,893|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,893|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,893|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,893|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,893|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,894|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,894|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #326 ------------------------------------------->
2019-07-22 16:08:03,894|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,894|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,894|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,894|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,895|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,895|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,895|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,895|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,895|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,896|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,896|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,896|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,896|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,896|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #327 ------------------------------------------->
2019-07-22 16:08:03,896|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,897|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,898|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,898|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,900|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,907|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,908|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,908|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,908|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,908|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,908|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,908|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,908|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,909|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #328 ------------------------------------------->
2019-07-22 16:08:03,909|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,909|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,909|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,910|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,910|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,910|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,910|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,910|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,910|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,911|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,911|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,911|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,911|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,911|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #329 ------------------------------------------->
2019-07-22 16:08:03,911|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,912|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,912|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,912|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,912|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,913|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,913|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,913|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,913|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,913|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,914|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,914|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,915|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,915|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #330 ------------------------------------------->
2019-07-22 16:08:03,924|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,925|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,925|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,925|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,926|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,926|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,926|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,926|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,927|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,927|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,927|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,928|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,928|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,928|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #331 ------------------------------------------->
2019-07-22 16:08:03,928|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,928|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,929|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,929|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,929|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,929|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,929|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,929|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,930|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,930|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,930|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,930|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,931|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,932|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #332 ------------------------------------------->
2019-07-22 16:08:03,941|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,941|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,942|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,942|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,942|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,943|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,943|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,943|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,943|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,944|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,944|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,944|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,944|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,944|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #333 ------------------------------------------->
2019-07-22 16:08:03,945|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,945|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,945|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,945|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,946|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,946|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,946|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,946|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,946|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,947|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,947|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,947|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,947|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,947|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #334 ------------------------------------------->
2019-07-22 16:08:03,948|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,949|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,957|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,957|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,958|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,958|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,958|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,959|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,959|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,959|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,959|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,960|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,960|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,960|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #335 ------------------------------------------->
2019-07-22 16:08:03,960|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,961|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,961|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,961|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,962|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,962|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,962|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,962|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,962|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,963|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,963|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,963|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,963|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,963|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #336 ------------------------------------------->
2019-07-22 16:08:03,963|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,964|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,964|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,964|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,965|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,974|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,974|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,974|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,975|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,975|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,975|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,975|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,976|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,976|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #337 ------------------------------------------->
2019-07-22 16:08:03,976|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,976|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,977|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,977|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,977|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,977|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,978|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,978|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,978|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,978|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,978|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,978|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,978|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,979|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #338 ------------------------------------------->
2019-07-22 16:08:03,979|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,979|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,979|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,979|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,980|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,980|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,980|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,980|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,980|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,981|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,981|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,982|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,982|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,983|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #339 ------------------------------------------->
2019-07-22 16:08:03,991|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,991|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,992|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,992|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,992|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,993|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,993|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,993|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,993|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,994|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:03,994|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:03,994|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:03,994|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:03,994|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #340 ------------------------------------------->
2019-07-22 16:08:03,995|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:03,995|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:03,995|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:03,996|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:03,996|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:03,996|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:03,997|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:03,997|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:03,997|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:03,999|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,008|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,008|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,009|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,009|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #341 ------------------------------------------->
2019-07-22 16:08:04,009|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,010|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,010|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,010|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,011|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,012|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,012|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,012|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,012|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,012|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,013|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,013|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,013|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,013|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #342 ------------------------------------------->
2019-07-22 16:08:04,013|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,013|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,014|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,014|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,014|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,015|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,016|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,016|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,023|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,024|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,024|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,024|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,024|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,025|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #343 ------------------------------------------->
2019-07-22 16:08:04,025|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,025|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,026|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,026|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,026|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,026|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,027|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,027|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,027|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,027|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,027|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,028|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,028|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,028|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #344 ------------------------------------------->
2019-07-22 16:08:04,028|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,029|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,029|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,029|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,029|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,030|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,030|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,030|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,030|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,030|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,030|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,031|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,031|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,031|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #345 ------------------------------------------->
2019-07-22 16:08:04,041|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,042|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,042|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,042|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,042|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,043|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,043|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,043|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,043|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,044|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,044|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,044|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,044|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,044|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #346 ------------------------------------------->
2019-07-22 16:08:04,045|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,045|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,045|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,045|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,046|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,046|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,046|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,046|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,046|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,047|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,048|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,048|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,049|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,056|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #347 ------------------------------------------->
2019-07-22 16:08:04,057|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,057|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,058|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,058|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,058|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,059|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,059|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,059|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,059|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,059|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,059|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,060|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,060|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,060|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #348 ------------------------------------------->
2019-07-22 16:08:04,060|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,060|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,060|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,061|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,061|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,061|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,061|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,061|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,062|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,062|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,062|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,062|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,062|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,062|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #349 ------------------------------------------->
2019-07-22 16:08:04,063|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,063|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,063|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,063|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,064|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,065|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,074|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,074|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,074|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,074|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,075|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,075|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,075|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,075|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #350 ------------------------------------------->
2019-07-22 16:08:04,075|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,076|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,076|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,076|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,077|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,077|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,077|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,079|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,079|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,080|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,080|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,080|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,081|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,082|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #351 ------------------------------------------->
2019-07-22 16:08:04,090|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,091|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,091|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,091|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,092|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,092|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,092|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,092|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,093|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,093|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,093|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,093|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,093|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,094|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #352 ------------------------------------------->
2019-07-22 16:08:04,094|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,094|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,095|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,095|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,096|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,096|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,096|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,096|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,096|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,097|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,097|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,097|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,105|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,105|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #353 ------------------------------------------->
2019-07-22 16:08:04,105|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,106|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,106|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,107|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,108|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,108|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,108|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,109|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,109|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,109|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,109|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,109|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,109|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,109|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #354 ------------------------------------------->
2019-07-22 16:08:04,110|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,110|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,110|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,110|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,111|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,111|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,111|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,111|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,112|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,112|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,112|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,112|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,112|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,112|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #355 ------------------------------------------->
2019-07-22 16:08:04,112|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,113|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,113|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,113|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,114|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,124|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,124|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,124|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,124|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,125|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,125|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,125|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,125|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,125|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #356 ------------------------------------------->
2019-07-22 16:08:04,125|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,126|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,126|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,126|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,127|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,127|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,128|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,128|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,128|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,128|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,128|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,128|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,129|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,129|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #357 ------------------------------------------->
2019-07-22 16:08:04,129|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,129|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,129|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,130|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,130|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,130|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,130|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,130|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,130|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,131|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,131|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,132|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,141|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,141|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #358 ------------------------------------------->
2019-07-22 16:08:04,142|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,142|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,143|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,143|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,143|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,143|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,144|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,144|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,144|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,144|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,144|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,145|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,145|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,145|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #359 ------------------------------------------->
2019-07-22 16:08:04,145|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,145|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,145|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,146|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,146|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,146|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,146|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,146|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,147|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,147|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,147|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,147|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,148|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,148|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #360 ------------------------------------------->
2019-07-22 16:08:04,149|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,150|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,158|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,158|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,159|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,159|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,159|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,159|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,159|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,160|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,160|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,160|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,161|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,161|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #361 ------------------------------------------->
2019-07-22 16:08:04,161|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,161|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,161|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,162|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,162|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,162|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,162|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,162|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,163|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,163|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,163|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,163|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,163|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,163|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #362 ------------------------------------------->
2019-07-22 16:08:04,163|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,164|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,165|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,166|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,174|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,174|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,174|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,175|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,175|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,175|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,175|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,176|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,176|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,176|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #363 ------------------------------------------->
2019-07-22 16:08:04,176|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,177|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,177|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,177|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,177|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,178|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,178|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,178|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,178|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,178|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,178|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,179|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,179|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,179|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #364 ------------------------------------------->
2019-07-22 16:08:04,179|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,179|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,180|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,180|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,180|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,180|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,180|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,181|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,181|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,190|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,190|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,191|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,191|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,191|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #365 ------------------------------------------->
2019-07-22 16:08:04,191|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,192|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,192|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,192|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,193|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,193|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,193|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,194|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,194|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,194|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,194|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,195|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,195|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,195|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #366 ------------------------------------------->
2019-07-22 16:08:04,195|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,196|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,196|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,196|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,196|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,196|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,197|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,197|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,197|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,198|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,198|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,199|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,207|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,207|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #367 ------------------------------------------->
2019-07-22 16:08:04,207|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,208|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,208|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,208|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,209|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,209|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,209|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,210|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,210|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,210|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,210|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,210|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,211|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,211|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #368 ------------------------------------------->
2019-07-22 16:08:04,211|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,211|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,212|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,212|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,212|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,212|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,212|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,212|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,213|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,213|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,213|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,213|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,214|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,214|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #369 ------------------------------------------->
2019-07-22 16:08:04,223|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,224|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,224|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,224|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,225|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,225|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,225|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,225|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,225|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,226|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,226|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,226|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,226|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,227|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #370 ------------------------------------------->
2019-07-22 16:08:04,227|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,227|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,227|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,227|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,228|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,228|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,228|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,228|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,228|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,229|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,229|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,229|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,229|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,229|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #371 ------------------------------------------->
2019-07-22 16:08:04,229|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,230|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,230|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,230|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,231|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,241|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,241|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,241|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,241|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,242|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,242|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,242|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,242|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,243|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #372 ------------------------------------------->
2019-07-22 16:08:04,243|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,243|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,244|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,244|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,245|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,245|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,245|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,245|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,245|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,245|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,246|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,246|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,246|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,246|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #373 ------------------------------------------->
2019-07-22 16:08:04,246|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,246|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,247|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,247|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,248|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,248|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,257|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,257|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,257|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,257|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,258|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,258|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,258|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,258|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #374 ------------------------------------------->
2019-07-22 16:08:04,258|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,259|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,259|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,260|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,260|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,260|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,260|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,261|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,261|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,261|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,261|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,261|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,261|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,261|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #375 ------------------------------------------->
2019-07-22 16:08:04,262|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,262|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,262|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,262|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,263|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,263|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,263|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,263|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,263|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,264|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,264|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,264|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,265|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,274|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #376 ------------------------------------------->
2019-07-22 16:08:04,274|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,275|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,275|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,275|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,276|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,276|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,276|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,276|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,277|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,277|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,277|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,277|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,277|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,277|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #377 ------------------------------------------->
2019-07-22 16:08:04,278|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,278|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,278|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,278|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,279|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,279|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,279|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,279|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,279|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,280|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,280|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,280|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,280|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,280|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #378 ------------------------------------------->
2019-07-22 16:08:04,280|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,281|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,283|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,291|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,291|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,291|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,292|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,292|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,292|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,292|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,292|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,293|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,293|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,293|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #379 ------------------------------------------->
2019-07-22 16:08:04,293|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,294|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,294|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,294|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,295|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,295|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,295|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,295|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,296|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,296|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,296|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,296|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,296|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,297|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #380 ------------------------------------------->
2019-07-22 16:08:04,297|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,297|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,298|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,307|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,307|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,307|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,308|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,308|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,308|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,308|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,309|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,309|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,309|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,309|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #381 ------------------------------------------->
2019-07-22 16:08:04,310|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,310|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,310|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,310|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,311|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,311|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,311|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,311|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,311|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,311|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,311|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,312|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,312|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,312|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #382 ------------------------------------------->
2019-07-22 16:08:04,312|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,312|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,313|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,313|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,313|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,314|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,314|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,314|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,323|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,323|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,323|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,324|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,324|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,324|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #383 ------------------------------------------->
2019-07-22 16:08:04,324|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,325|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,325|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,325|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,326|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,326|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,326|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,326|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,326|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,327|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,327|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,327|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,327|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,327|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #384 ------------------------------------------->
2019-07-22 16:08:04,328|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,328|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,328|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,328|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,329|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,329|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,329|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,329|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,329|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,330|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,330|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,330|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,340|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,341|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #385 ------------------------------------------->
2019-07-22 16:08:04,341|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,341|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,342|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,342|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,343|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,343|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,343|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,343|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,343|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,344|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,344|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,346|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,346|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,346|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #386 ------------------------------------------->
2019-07-22 16:08:04,346|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,346|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,347|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,347|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,347|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,348|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,349|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,357|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,357|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,357|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,357|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,358|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,358|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,358|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #387 ------------------------------------------->
2019-07-22 16:08:04,358|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,359|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,359|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,359|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,360|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,360|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,360|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,360|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,361|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,361|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,361|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,361|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,361|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,362|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #388 ------------------------------------------->
2019-07-22 16:08:04,362|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,362|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,362|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,362|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,363|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,363|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,363|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,372|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,372|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,373|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,373|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,373|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,373|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,374|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #389 ------------------------------------------->
2019-07-22 16:08:04,374|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,374|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,375|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,375|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,375|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,375|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,376|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,376|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,376|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,376|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,376|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,376|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,376|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,377|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #390 ------------------------------------------->
2019-07-22 16:08:04,377|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,377|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,377|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,377|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,378|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,378|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,378|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,378|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,378|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,379|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,379|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,379|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,379|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,379|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #391 ------------------------------------------->
2019-07-22 16:08:04,379|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,380|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,380|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,390|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,391|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,391|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,391|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,391|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,391|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,392|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,392|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,392|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,392|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,393|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #392 ------------------------------------------->
2019-07-22 16:08:04,393|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,393|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,393|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,394|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,394|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,394|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,394|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,394|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,395|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,395|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,395|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,395|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,395|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,395|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #393 ------------------------------------------->
2019-07-22 16:08:04,395|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,396|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,396|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,396|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,397|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,398|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,398|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,398|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,407|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,407|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,407|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,408|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,408|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,408|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #394 ------------------------------------------->
2019-07-22 16:08:04,408|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,409|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,409|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,409|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,409|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,409|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,410|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,410|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,410|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,410|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,410|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,410|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,411|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,411|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #395 ------------------------------------------->
2019-07-22 16:08:04,411|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,411|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,412|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,412|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,412|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,412|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,412|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,413|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,413|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,413|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,413|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,413|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,414|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,415|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #396 ------------------------------------------->
2019-07-22 16:08:04,424|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,424|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,425|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,425|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,425|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,426|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,426|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,426|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,426|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,427|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,427|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,427|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,427|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,427|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #397 ------------------------------------------->
2019-07-22 16:08:04,428|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,428|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,428|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,428|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,429|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,429|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,429|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,429|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,429|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,430|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,430|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,430|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,430|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,430|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #398 ------------------------------------------->
2019-07-22 16:08:04,431|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,432|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,440|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,440|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,441|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,441|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,441|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,441|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,442|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,442|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,442|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,442|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,442|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,443|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #399 ------------------------------------------->
2019-07-22 16:08:04,443|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,443|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,444|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,444|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,444|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,444|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,444|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,445|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,445|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,445|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,445|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,445|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,445|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,445|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #400 ------------------------------------------->
2019-07-22 16:08:04,446|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,446|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,446|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,446|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,447|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,447|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,457|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,457|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,457|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,458|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,458|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,458|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,458|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,458|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #401 ------------------------------------------->
2019-07-22 16:08:04,459|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,459|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,459|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,459|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,460|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,460|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,460|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,460|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,460|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,461|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,461|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,461|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,461|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,461|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #402 ------------------------------------------->
2019-07-22 16:08:04,461|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,462|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,462|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,462|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,462|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,463|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,463|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,463|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,463|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,463|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,464|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,464|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,465|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,474|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #403 ------------------------------------------->
2019-07-22 16:08:04,474|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,474|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,475|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,475|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,475|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,475|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,476|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,476|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,476|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,477|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,477|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,477|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,477|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,477|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #404 ------------------------------------------->
2019-07-22 16:08:04,478|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,478|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,478|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,478|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,479|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,479|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,479|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,479|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,479|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,480|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,480|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,480|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,480|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,480|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #405 ------------------------------------------->
2019-07-22 16:08:04,481|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,482|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,490|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,491|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,491|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,491|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,492|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,492|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,492|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,493|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,493|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,493|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,493|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,493|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #406 ------------------------------------------->
2019-07-22 16:08:04,494|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,494|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,494|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,494|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,495|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,495|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,495|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,495|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,495|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,496|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,496|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,496|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,496|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,496|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #407 ------------------------------------------->
2019-07-22 16:08:04,496|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,497|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,498|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,498|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,500|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,507|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,507|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,507|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,507|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,508|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,508|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,508|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,508|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,509|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #408 ------------------------------------------->
2019-07-22 16:08:04,509|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,509|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,510|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,510|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,510|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,510|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,511|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,511|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,511|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,511|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,511|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,512|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,512|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,512|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #409 ------------------------------------------->
2019-07-22 16:08:04,512|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,512|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,513|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,513|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,513|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,513|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,514|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,515|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,523|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,524|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,524|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,524|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,524|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,524|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #410 ------------------------------------------->
2019-07-22 16:08:04,525|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,525|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,525|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,526|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,526|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,526|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,526|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,526|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,526|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,527|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,527|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,527|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,527|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,527|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #411 ------------------------------------------->
2019-07-22 16:08:04,528|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,528|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,528|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,528|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,529|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,529|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,529|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,529|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,529|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,529|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,530|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,530|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,530|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,530|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #412 ------------------------------------------->
2019-07-22 16:08:04,531|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,532|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,541|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,541|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,542|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,542|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,542|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,542|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,543|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,543|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,543|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,543|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,543|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,544|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #413 ------------------------------------------->
2019-07-22 16:08:04,544|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,544|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,545|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,545|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,545|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,545|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,545|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,545|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,546|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,546|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,546|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,546|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,546|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,546|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #414 ------------------------------------------->
2019-07-22 16:08:04,547|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,547|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,547|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,548|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,550|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,557|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,557|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,557|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,558|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,558|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,558|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,558|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,558|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,559|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #415 ------------------------------------------->
2019-07-22 16:08:04,559|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,559|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,560|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,560|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,560|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,560|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,561|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,561|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,561|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,561|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,561|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,561|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,562|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,562|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #416 ------------------------------------------->
2019-07-22 16:08:04,562|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,562|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,562|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,563|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,563|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,563|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,563|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,564|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,564|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,573|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,574|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,574|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,574|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,574|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #417 ------------------------------------------->
2019-07-22 16:08:04,575|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,575|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,575|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,575|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,576|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,576|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,576|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,576|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,576|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,577|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,577|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,577|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,577|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,577|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #418 ------------------------------------------->
2019-07-22 16:08:04,577|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,578|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,578|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,578|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,578|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,578|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,579|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,579|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,579|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,579|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,579|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,579|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,579|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,580|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #419 ------------------------------------------->
2019-07-22 16:08:04,580|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,580|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,581|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,590|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,591|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,591|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,591|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,591|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,592|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,592|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,592|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,592|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,593|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,593|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #420 ------------------------------------------->
2019-07-22 16:08:04,593|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,593|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,594|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,594|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,594|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,594|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,594|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,594|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,595|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,595|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,595|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,595|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,595|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,595|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #421 ------------------------------------------->
2019-07-22 16:08:04,596|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,596|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,600|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,606|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,607|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,607|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,607|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,608|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,608|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,608|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,608|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,609|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,609|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,609|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #422 ------------------------------------------->
2019-07-22 16:08:04,609|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,609|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,610|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,610|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,610|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,610|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,610|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,610|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,611|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,611|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,611|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,611|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,611|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,611|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #423 ------------------------------------------->
2019-07-22 16:08:04,612|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,612|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,612|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,613|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,613|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,613|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,614|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,614|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,623|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,623|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,623|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,624|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,624|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,624|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #424 ------------------------------------------->
2019-07-22 16:08:04,624|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,625|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,625|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,625|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,626|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,626|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,626|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,626|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,626|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,626|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,627|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,627|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,627|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,627|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #425 ------------------------------------------->
2019-07-22 16:08:04,627|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,627|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,628|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,628|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,628|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,628|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,628|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,629|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,629|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,629|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,629|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,629|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,629|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,630|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #426 ------------------------------------------->
2019-07-22 16:08:04,630|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,631|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,640|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,641|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,641|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,641|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,642|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,643|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,643|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,643|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,643|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,644|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,644|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,644|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #427 ------------------------------------------->
2019-07-22 16:08:04,644|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,644|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,645|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,645|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,645|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,645|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,645|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,645|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,646|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,646|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,646|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,646|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,646|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,646|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #428 ------------------------------------------->
2019-07-22 16:08:04,647|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,647|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,648|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,649|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,650|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,657|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,658|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,658|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,658|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,658|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,658|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,659|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,659|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,659|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #429 ------------------------------------------->
2019-07-22 16:08:04,659|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,660|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,660|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,660|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,660|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,660|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,661|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,661|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,661|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,661|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,661|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,661|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,661|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,662|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #430 ------------------------------------------->
2019-07-22 16:08:04,662|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,662|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,662|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,662|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,663|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,663|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,663|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,663|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,664|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,664|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,665|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,665|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,674|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,674|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #431 ------------------------------------------->
2019-07-22 16:08:04,674|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,675|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,675|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,675|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,676|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,676|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,676|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,677|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,677|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,677|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,677|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,677|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,677|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,677|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #432 ------------------------------------------->
2019-07-22 16:08:04,678|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,678|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,678|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,678|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,679|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,679|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,679|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,679|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,679|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,679|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,679|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,680|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,680|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,680|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #433 ------------------------------------------->
2019-07-22 16:08:04,680|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,681|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,682|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,690|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,690|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,690|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,692|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,692|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,692|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,692|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,693|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,693|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,693|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,693|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #434 ------------------------------------------->
2019-07-22 16:08:04,693|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,694|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,694|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,694|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,695|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,695|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,695|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,695|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,695|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,696|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,696|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,696|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,696|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,696|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #435 ------------------------------------------->
2019-07-22 16:08:04,696|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,697|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,697|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,697|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,698|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,707|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,707|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,707|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,707|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,708|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,708|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,708|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,708|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,709|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #436 ------------------------------------------->
2019-07-22 16:08:04,709|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,709|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,709|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,710|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,710|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,710|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,710|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,710|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,710|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,711|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,711|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,711|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,711|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,711|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #437 ------------------------------------------->
2019-07-22 16:08:04,711|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,712|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,712|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,712|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,712|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,712|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,713|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,713|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,713|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,713|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,713|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,714|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,714|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,724|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #438 ------------------------------------------->
2019-07-22 16:08:04,724|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,724|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,725|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,725|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,725|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,726|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,726|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,726|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,726|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,727|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,727|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,727|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,727|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,727|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #439 ------------------------------------------->
2019-07-22 16:08:04,728|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,728|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,728|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,728|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,729|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,729|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,729|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,729|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,729|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,729|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,730|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,730|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,730|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,730|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #440 ------------------------------------------->
2019-07-22 16:08:04,731|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,732|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,740|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,740|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,741|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,741|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,741|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,742|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,742|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,742|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,742|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,743|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,743|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,743|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #441 ------------------------------------------->
2019-07-22 16:08:04,743|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,744|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,744|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,744|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,744|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,745|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,745|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,745|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,745|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,745|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,745|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,745|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,746|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,746|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #442 ------------------------------------------->
2019-07-22 16:08:04,746|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,746|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,746|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,747|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,748|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,748|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,748|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,757|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,757|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,757|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,757|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,758|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,758|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,758|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #443 ------------------------------------------->
2019-07-22 16:08:04,758|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,759|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,759|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,759|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,760|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,760|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,760|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,760|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,760|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,760|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,760|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,761|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,761|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,761|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #444 ------------------------------------------->
2019-07-22 16:08:04,761|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,761|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,762|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,762|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,762|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,762|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,762|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,762|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,763|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,763|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,763|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,763|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,763|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,764|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #445 ------------------------------------------->
2019-07-22 16:08:04,764|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,774|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,774|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,774|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,775|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,775|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,775|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,775|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,776|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,776|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,776|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,776|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,776|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,777|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #446 ------------------------------------------->
2019-07-22 16:08:04,777|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,777|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,777|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,778|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,778|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,778|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,778|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,778|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,778|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,779|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,779|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,779|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,779|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,779|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #447 ------------------------------------------->
2019-07-22 16:08:04,779|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,780|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,781|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,781|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,783|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,790|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,790|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,790|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,791|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,791|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,791|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,791|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,791|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,792|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #448 ------------------------------------------->
2019-07-22 16:08:04,792|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,792|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,792|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,793|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,793|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,793|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,793|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,793|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,794|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,794|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,794|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,794|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,794|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,794|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #449 ------------------------------------------->
2019-07-22 16:08:04,794|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,795|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,795|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,795|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,795|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,796|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,796|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,796|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,796|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,797|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,806|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,806|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,806|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,807|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #450 ------------------------------------------->
2019-07-22 16:08:04,807|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,807|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,808|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,808|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,808|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,809|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,809|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,809|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,809|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,810|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,810|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,810|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,810|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,810|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #451 ------------------------------------------->
2019-07-22 16:08:04,810|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,811|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,811|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,811|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,811|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,811|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,812|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,812|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,812|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,812|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,812|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,812|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,812|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,813|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #452 ------------------------------------------->
2019-07-22 16:08:04,813|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,814|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,815|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,823|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,824|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,824|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,824|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,824|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,825|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,825|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,825|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,825|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,825|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,826|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #453 ------------------------------------------->
2019-07-22 16:08:04,826|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,826|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,826|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,827|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,827|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,827|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,827|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,827|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,827|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,828|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,828|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,828|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,828|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,828|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #454 ------------------------------------------->
2019-07-22 16:08:04,828|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,829|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,829|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,829|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,831|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,841|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,841|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,842|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,842|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,842|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,842|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,843|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,843|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,843|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #455 ------------------------------------------->
2019-07-22 16:08:04,843|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,844|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,844|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,844|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,845|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,845|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,845|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,845|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,845|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,846|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,846|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,847|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,847|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,848|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #456 ------------------------------------------->
2019-07-22 16:08:04,848|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,849|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,850|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,857|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,859|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,859|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,860|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,860|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,860|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,860|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,861|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,861|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,861|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,861|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #457 ------------------------------------------->
2019-07-22 16:08:04,861|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,862|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,862|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,862|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,863|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,863|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,863|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,863|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,863|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,864|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,871|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,871|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,871|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,872|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #458 ------------------------------------------->
2019-07-22 16:08:04,872|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,872|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,873|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,873|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,873|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,874|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,874|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,874|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,874|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,874|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,874|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,875|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,875|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,875|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #459 ------------------------------------------->
2019-07-22 16:08:04,875|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,875|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,876|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,876|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,876|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,876|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,876|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,876|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,877|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,877|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,877|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,877|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,877|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,877|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #460 ------------------------------------------->
2019-07-22 16:08:04,878|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,878|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,878|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,878|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,879|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,879|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,879|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,879|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,879|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,879|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,892|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,892|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,892|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,892|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #461 ------------------------------------------->
2019-07-22 16:08:04,893|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,893|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,893|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,894|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,894|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,894|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,894|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,895|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,895|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,895|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,895|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,895|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,895|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,896|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #462 ------------------------------------------->
2019-07-22 16:08:04,896|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,896|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,896|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,896|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,897|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,898|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,898|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,899|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,900|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,907|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,907|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,907|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,907|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,907|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #463 ------------------------------------------->
2019-07-22 16:08:04,908|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,908|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,909|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,909|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,909|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,909|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,910|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,910|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,910|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,910|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,911|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,911|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,911|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,911|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #464 ------------------------------------------->
2019-07-22 16:08:04,911|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,911|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,912|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,912|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,912|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,912|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,912|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,913|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,913|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,913|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,913|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,913|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,914|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,914|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #465 ------------------------------------------->
2019-07-22 16:08:04,923|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,923|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,924|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,924|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,925|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,925|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,925|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,925|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,926|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,926|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,926|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,926|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,926|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,926|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #466 ------------------------------------------->
2019-07-22 16:08:04,927|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,927|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,927|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,927|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,928|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,928|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,928|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,928|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,928|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,928|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,929|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,929|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,929|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,929|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #467 ------------------------------------------->
2019-07-22 16:08:04,929|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,929|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,930|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,930|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,931|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,940|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,940|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,940|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,941|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,941|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,941|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,941|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,942|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,942|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #468 ------------------------------------------->
2019-07-22 16:08:04,942|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,942|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,942|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,943|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,943|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,943|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,943|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,943|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,943|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,944|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,944|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,944|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,944|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,944|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #469 ------------------------------------------->
2019-07-22 16:08:04,944|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,945|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,945|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,945|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,945|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,946|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,946|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,946|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,946|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,946|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,946|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,947|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,947|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,957|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #470 ------------------------------------------->
2019-07-22 16:08:04,957|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,957|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,958|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,958|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,958|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,958|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,959|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,959|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,959|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,959|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,960|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,960|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,960|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,960|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #471 ------------------------------------------->
2019-07-22 16:08:04,960|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,961|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,961|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,961|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,961|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,962|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,962|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,962|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,962|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,962|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,963|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,963|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,963|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,964|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #472 ------------------------------------------->
2019-07-22 16:08:04,964|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,965|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,973|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,973|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,974|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,974|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,974|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,975|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,975|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,975|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,975|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,976|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,976|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,976|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #473 ------------------------------------------->
2019-07-22 16:08:04,976|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,976|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,977|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,977|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,977|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,977|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,978|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,978|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,978|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,978|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,978|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,978|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,978|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,979|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #474 ------------------------------------------->
2019-07-22 16:08:04,979|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,979|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,979|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,980|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,981|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,982|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,990|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,990|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,991|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,991|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,991|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,991|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,992|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,992|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #475 ------------------------------------------->
2019-07-22 16:08:04,992|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,992|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,992|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,993|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,993|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,993|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,993|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,993|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,994|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:04,994|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:04,994|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:04,994|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:04,994|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:04,994|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #476 ------------------------------------------->
2019-07-22 16:08:04,994|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:04,995|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:04,995|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:04,995|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:04,996|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:04,996|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:04,996|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:04,997|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:04,997|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,006|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,006|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,006|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,006|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,007|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #477 ------------------------------------------->
2019-07-22 16:08:05,007|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,007|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,008|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,008|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,009|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,009|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,009|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,009|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,009|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,009|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,009|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,010|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,010|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,010|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #478 ------------------------------------------->
2019-07-22 16:08:05,010|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,010|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,011|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,011|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,011|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,011|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,011|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,012|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,012|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,012|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,012|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,012|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,012|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,012|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #479 ------------------------------------------->
2019-07-22 16:08:05,013|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,014|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,014|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,024|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,024|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,024|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,025|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,025|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,025|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,025|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,026|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,026|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,026|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,026|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #480 ------------------------------------------->
2019-07-22 16:08:05,026|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,027|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,027|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,027|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,028|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,028|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,028|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,028|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,028|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,029|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,029|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,029|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,029|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,029|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #481 ------------------------------------------->
2019-07-22 16:08:05,029|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,030|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,031|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,031|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,032|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,040|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,040|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,040|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,040|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,042|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,042|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,042|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,042|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,042|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #482 ------------------------------------------->
2019-07-22 16:08:05,043|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,043|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,043|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,043|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,044|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,044|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,044|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,044|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,044|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,045|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,045|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,045|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,045|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,045|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #483 ------------------------------------------->
2019-07-22 16:08:05,045|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,045|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,046|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,046|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,046|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,046|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,047|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,047|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,048|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,048|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,057|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,057|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,057|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,057|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #484 ------------------------------------------->
2019-07-22 16:08:05,057|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,058|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,058|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,058|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,059|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,059|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,059|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,060|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,060|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,060|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,060|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,060|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,061|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,061|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #485 ------------------------------------------->
2019-07-22 16:08:05,061|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,061|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,062|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,062|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,062|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,062|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,062|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,062|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,063|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,063|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,063|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,063|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,064|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,064|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #486 ------------------------------------------->
2019-07-22 16:08:05,065|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,074|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,075|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,075|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,075|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,076|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,076|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,076|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,076|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,077|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,077|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,077|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,077|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,077|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #487 ------------------------------------------->
2019-07-22 16:08:05,078|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,078|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,078|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,079|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,079|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,079|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,079|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,080|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,080|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,081|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,081|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,081|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,082|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,089|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #488 ------------------------------------------->
2019-07-22 16:08:05,089|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,090|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,090|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,090|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,091|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,091|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,091|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,092|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,092|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,092|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,092|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,092|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,092|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,093|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #489 ------------------------------------------->
2019-07-22 16:08:05,093|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,093|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,093|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,094|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,094|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,094|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,094|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,094|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,094|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,095|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,095|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,095|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,095|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,095|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #490 ------------------------------------------->
2019-07-22 16:08:05,095|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,096|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,096|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,096|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,097|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,097|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,107|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,107|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,107|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,108|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,108|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,108|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,108|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,108|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #491 ------------------------------------------->
2019-07-22 16:08:05,109|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,109|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,109|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,110|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,110|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,110|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,111|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,111|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,111|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,111|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,113|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,113|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,113|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,114|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #492 ------------------------------------------->
2019-07-22 16:08:05,114|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,123|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,124|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,124|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,124|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,125|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,125|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,125|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,125|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,126|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,126|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,126|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,126|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,126|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #493 ------------------------------------------->
2019-07-22 16:08:05,126|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,127|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,127|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,127|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,128|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,128|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,129|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,129|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,129|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,130|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,130|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,130|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,138|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,138|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #494 ------------------------------------------->
2019-07-22 16:08:05,138|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,139|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,139|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,139|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,140|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,140|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,140|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,141|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,141|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,141|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,141|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,141|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,142|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,142|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #495 ------------------------------------------->
2019-07-22 16:08:05,142|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,142|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,143|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,143|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,143|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,143|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,143|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,144|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,144|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,144|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,144|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,144|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,144|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,145|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #496 ------------------------------------------->
2019-07-22 16:08:05,145|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,145|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,145|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,145|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,146|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,146|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,146|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,157|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,157|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,157|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,157|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,158|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,158|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,158|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #497 ------------------------------------------->
2019-07-22 16:08:05,158|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,159|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,159|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,159|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,160|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,160|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,160|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,160|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,160|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,161|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,161|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,161|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,161|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,161|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #498 ------------------------------------------->
2019-07-22 16:08:05,161|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,161|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,162|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,162|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,162|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,162|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,163|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,163|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,164|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,172|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,173|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,173|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,173|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,173|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #499 ------------------------------------------->
2019-07-22 16:08:05,174|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,174|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,174|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,175|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,175|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,175|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,176|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,176|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,176|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,176|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,176|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,177|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,177|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,177|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #500 ------------------------------------------->
2019-07-22 16:08:05,177|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,177|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,178|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,178|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,178|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,178|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,178|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,178|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,179|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,179|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,179|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,180|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,180|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,181|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #501 ------------------------------------------->
2019-07-22 16:08:05,189|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,189|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,190|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,190|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,190|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,191|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,191|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,191|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,191|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,192|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,192|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,192|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,192|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,192|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #502 ------------------------------------------->
2019-07-22 16:08:05,192|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,193|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,193|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,193|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,193|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,194|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,194|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,194|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,194|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,194|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,194|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,194|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,195|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,195|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #503 ------------------------------------------->
2019-07-22 16:08:05,195|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,195|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,196|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,196|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,197|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,206|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,206|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,206|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,206|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,207|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,207|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,207|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,207|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,207|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #504 ------------------------------------------->
2019-07-22 16:08:05,208|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,208|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
2019-07-22 16:08:05,208|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - [repeat-until] PASS stored '"$10.47"' as ${value}
2019-07-22 16:08:05,209|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - executing save(var,value)(cost, [TEXT(value) => remove($)])
2019-07-22 16:08:05,209|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 37|base.save(var,value) - [repeat-until] PASS stored 'value' as ${cost}
2019-07-22 16:08:05,209|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - executing verbose(text)(${cost})
2019-07-22 16:08:05,209|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - value
2019-07-22 16:08:05,210|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 38|base.verbose(text) - [repeat-until] PASS value
2019-07-22 16:08:05,210|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - executing verbose(text)($(array|item|${productList}|${counter}))
2019-07-22 16:08:05,210|E|Thread-1|evaluating flow control:	SkipIf [>] - NOT A NUMBER: value
2019-07-22 16:08:05,211|I|Thread-1|evaluating flow control:	SkipIf(value>20)		=> NOT MATCHED
2019-07-22 16:08:05,211|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - "sildenafil citrate"
2019-07-22 16:08:05,211|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 39|base.verbose(text) - [repeat-until] PASS "sildenafil citrate"
2019-07-22 16:08:05,211|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - 
<[repeat-until] entering loop #505 ------------------------------------------->
2019-07-22 16:08:05,211|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)($(array|length|${unit_costList}), ${counter})
2019-07-22 16:08:05,212|I|Thread-1|firstEvaluation.20190722_160745.001|JsonScenario|Activity 5|# 36|base.save(var,value) - executing save(var,value)(value, $(array|item|${unit_costList}|${counter}))
